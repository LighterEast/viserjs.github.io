!function(modules){function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={i:moduleId,l:!1,exports:{}};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.l=!0,module.exports}var installedModules={};__webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.d=function(exports,name,getter){__webpack_require__.o(exports,name)||Object.defineProperty(exports,name,{configurable:!1,enumerable:!0,get:getter})},__webpack_require__.n=function(module){var getter=module&&module.__esModule?function(){return module.default}:function(){return module};return __webpack_require__.d(getter,"a",getter),getter},__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)},__webpack_require__.p="http://localhost:3000/build/",__webpack_require__(__webpack_require__.s=1201)}({0:function(module,exports,__webpack_require__){"use strict";module.exports=__webpack_require__(34)},120:function(module,exports,__webpack_require__){module.exports=__webpack_require__(121).default},1201:function(module,exports,__webpack_require__){"use strict";var __assign=this&&this.__assign||Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p])}return t};Object.defineProperty(exports,"__esModule",{value:!0});var mds_1=__webpack_require__(1202),locale_1=__webpack_require__(57),react_dom_1=__webpack_require__(16),React=__webpack_require__(0),nav_1=__webpack_require__(33),utils_1=__webpack_require__(18);__webpack_require__(1203);var timers_1=__webpack_require__(93),navTpl=__webpack_require__(1204);new(function(){function Docs(){var _this=this;this.typeKey="viser",this.setTypeKey=function(typeKey){var obj=_this.getDosList(),folderKey=obj[0].folderKey,itemKey=obj[0].mds[0].itemKey;window.location.hash="#/"+utils_1.getInitNav()+"/"+folderKey+"/"+itemKey,_this.typeKey!==typeKey&&(_this.typeKey=typeKey,_this.refresh())},this.handleSwitchPageLanguage=function(){utils_1.changePageLanguage(),_this.refresh()},this.handleSwitchContent=function(){timers_1.setTimeout(function(){_this.refresh()},0)},utils_1.initPageLanguage(),this.renderNav(utils_1.getPageLanguage()),this.render(),this.bindEvent()}return Docs.prototype.getDosList=function(){switch(utils_1.getInitNav()){case"viser":return mds_1.viserMds;case"viser-graph":return mds_1.viserGraphMds;default:return[]}},Docs.prototype.renderNav=function(pageLan){react_dom_1.render(React.createElement(nav_1.default,{pageLan:pageLan,setTypeKey:this.setTypeKey}),document.getElementById("viser-nav"))},Docs.prototype.getDocsFolderAndItem=function(){var _a=utils_1.getFolderAndItem(!1),folder=_a.folder,item=_a.item;return{folder:folder||"guide",item:item||"installation"}},Docs.prototype.renderText=function(selector,text){var selectorDom=document.querySelector(selector);selectorDom&&(selectorDom.innerHTML=text)},Docs.prototype.renderLanguage=function(){var _this=this,pageLanguageInStore=utils_1.getPageLanguage();pageLanguageInStore&&-1!==utils_1.ALL_PAGE_LANGUAGES.indexOf(pageLanguageInStore)||(pageLanguageInStore=utils_1.DEFAULT_PAGE_LANGUAGE,utils_1.setPageLanguage(pageLanguageInStore));var pageLanguageSwitchDom=document.querySelector(".common-header .page-language-switch");utils_1.ALL_PAGE_LANGUAGES.forEach(function(lang){utils_1.removeClass(pageLanguageSwitchDom,lang)}),utils_1.addClass(pageLanguageSwitchDom,pageLanguageInStore),locale_1.default&&locale_1.default[pageLanguageInStore]&&locale_1.default[pageLanguageInStore].length&&locale_1.default[pageLanguageInStore].forEach(function(o){_this.renderText(o.selector,o.text)})},Docs.prototype.renderLeftMenu=function(){var _a=this.getDocsFolderAndItem(),folder=_a.folder,item=_a.item,mds=this.getDosList(),menuList=mds.map(function(v){var folderMatched=v.folderKey===folder;return __assign({},v,{folderDisplayName:utils_1.getNameByLanguage(v),mds:v.mds.map(function(o){var itemMatched=o.itemKey===item;return __assign({},o,{itemDisplayName:utils_1.getNameByLanguage(o),linkName:utils_1.generateHashtag(utils_1.getInitNav(),v.folderKey,o.itemKey),activeClass:folderMatched&&itemMatched?"active":""})})})});document.querySelector(".left-panel").innerHTML=navTpl({menuList:menuList})},Docs.prototype.renderContent=function(){var language=utils_1.getPageLanguage(),_a=this.getDocsFolderAndItem(),folder=_a.folder,item=_a.item,content="";try{content=__webpack_require__(1205)("./"+folder+"/"+item+"/"+language+".md")}catch(err){}document.querySelector(".right-panel").innerHTML=content},Docs.prototype.unbindEvent=function(){var pageLanguageSwitchDom=document.querySelector(".common-header .page-language-switch");pageLanguageSwitchDom&&utils_1.off(pageLanguageSwitchDom,"click",this.handleSwitchPageLanguage);var leftMenuDom=document.querySelector(".left-panel");leftMenuDom&&utils_1.undelegate(leftMenuDom,".common-nav-item","click",this.handleSwitchContent)},Docs.prototype.bindEvent=function(){var pageLanguageSwitchDom=document.querySelector(".common-header .page-language-switch");pageLanguageSwitchDom&&utils_1.on(pageLanguageSwitchDom,"click",this.handleSwitchPageLanguage);var leftMenuDom=document.querySelector(".left-panel");leftMenuDom&&utils_1.delegate(leftMenuDom,".common-nav-item","click",this.handleSwitchContent)},Docs.prototype.render=function(){this.renderLeftMenu(),this.renderLanguage(),this.renderContent()},Docs.prototype.refresh=function(){this.unbindEvent(),this.renderNav(utils_1.getPageLanguage()),this.render(),this.bindEvent()},Docs}())},1202:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.viserMds=[{folderKey:"guide",cnName:"快速上手",enName:"Guide",mds:[{itemKey:"installation",enName:"Installation",cnName:"安装"},{itemKey:"introduction",enName:"Introduction",cnName:"简介"},{itemKey:"usage",enName:"Usage",cnName:"用法"},{itemKey:"render",enName:"Render",cnName:"渲染方式"},{itemKey:"feature",enName:"Feature",cnName:"特点"}]},{folderKey:"dataset",cnName:"数据处理",enName:"Dataset",mds:[{itemKey:"usage",enName:"Usage",cnName:"用法"}]},{folderKey:"api",cnName:"api",enName:"api",mds:[{itemKey:"viserChart",enName:"chart",cnName:"chart"},{itemKey:"viserCoord",enName:"coord",cnName:"coord"},{itemKey:"viserAxis",enName:"axis",cnName:"axis"},{itemKey:"viserLegend",enName:"legend",cnName:"legend"},{itemKey:"viserGuide",enName:"guide",cnName:"guide"},{itemKey:"viserScale",enName:"scale",cnName:"scale"},{itemKey:"viserFacet",enName:"facet",cnName:"facet"},{itemKey:"viserTooltip",enName:"tooltip",cnName:"tooltip"},{itemKey:"viserView",enName:"view",cnName:"view"},{itemKey:"viserSeries",enName:"series",cnName:"series"},{itemKey:"viserShape",enName:"shape",cnName:"shape"},{itemKey:"viserSlider",enName:"slider",cnName:"slider"},{itemKey:"event",enName:"Event",cnName:"Event"},{itemKey:"viserStyle",enName:"style",cnName:"style"}]},{folderKey:"aboutus",cnName:"关于viser",enName:"about viser",mds:[{itemKey:"updateLog",cnName:"更新日志",enName:"updateLog"},{itemKey:"us",cnName:"我们",enName:"Us"}]}],exports.viserGraphMds=[{folderKey:"guide",cnName:"快速上手",enName:"Guide",mds:[{itemKey:"installation",enName:"Installation",cnName:"安装"},{itemKey:"introduction",enName:"Introduction",cnName:"简介"}]},{folderKey:"api",cnName:"api",enName:"api",mds:[{itemKey:"graphApi",enName:"graphApi",cnName:"graph api"},{itemKey:"graphFuncApi",enName:"graphFuncApi",cnName:"graph 方法 api"}]}]},1203:function(module,exports){},1204:function(module,exports,__webpack_require__){var Handlebars=__webpack_require__(120);module.exports=(Handlebars.default||Handlebars).template({1:function(container,depth0,helpers,partials,data){var stack1,alias1=container.lambda,alias2=container.escapeExpression;return'  <div class="common-nav-folder" data-folder="'+alias2(alias1(null!=depth0?depth0.folderKey:depth0,depth0))+'">\n    <h3 class="common-nav-title">\n      '+alias2(alias1(null!=depth0?depth0.folderDisplayName:depth0,depth0))+'\n    </h3>\n    <ul class="common-nav-list">\n'+(null!=(stack1=helpers.each.call(null!=depth0?depth0:container.nullContext||{},null!=depth0?depth0.mds:depth0,{name:"each",hash:{},fn:container.program(2,data,0),inverse:container.noop,data:data}))?stack1:"")+"    </ul>\n  </div>\n"},2:function(container,depth0,helpers,partials,data){var alias1=container.lambda,alias2=container.escapeExpression;return'        <li class="common-nav-item '+alias2(alias1(null!=depth0?depth0.activeClass:depth0,depth0))+'">\n          <a class="common-nav-link" href="'+alias2(alias1(null!=depth0?depth0.linkName:depth0,depth0))+'" title="'+alias2(alias1(null!=depth0?depth0.itemDisplayName:depth0,depth0))+'">'+alias2(alias1(null!=depth0?depth0.itemDisplayName:depth0,depth0))+"</a>\n        </li>\n"},compiler:[7,">= 4.0.0"],main:function(container,depth0,helpers,partials,data){var stack1;return(null!=(stack1=helpers.each.call(null!=depth0?depth0:container.nullContext||{},null!=depth0?depth0.menuList:depth0,{name:"each",hash:{},fn:container.program(1,data,0),inverse:container.noop,data:data}))?stack1:"")+"\n\n"},useData:!0})},1205:function(module,exports,__webpack_require__){function webpackContext(req){return __webpack_require__(webpackContextResolve(req))}function webpackContextResolve(req){var id=map[req];if(!(id+1))throw new Error("Cannot find module '"+req+"'.");return id}var map={"./aboutus/updateLog/cn.md":1206,"./aboutus/updateLog/en.md":1207,"./aboutus/us/cn.md":1208,"./aboutus/us/en.md":1209,"./api/event/cn.md":1210,"./api/event/en.md":1211,"./api/graphApi/cn.md":1212,"./api/graphApi/en.md":1213,"./api/graphFuncApi/cn.md":1214,"./api/graphFuncApi/en.md":1215,"./api/viserAxis/cn.md":1216,"./api/viserAxis/en.md":1217,"./api/viserChart/cn.md":1218,"./api/viserChart/en.md":1219,"./api/viserCoord/cn.md":1220,"./api/viserCoord/en.md":1221,"./api/viserFacet/cn.md":1222,"./api/viserFacet/en.md":1223,"./api/viserGuide/cn.md":1224,"./api/viserGuide/en.md":1225,"./api/viserLegend/cn.md":1226,"./api/viserLegend/en.md":1227,"./api/viserScale/cn.md":1228,"./api/viserScale/en.md":1229,"./api/viserSeries/cn.md":1230,"./api/viserSeries/en.md":1231,"./api/viserShape/cn.md":1232,"./api/viserShape/en.md":1233,"./api/viserSlider/cn.md":1234,"./api/viserSlider/en.md":1235,"./api/viserStyle/cn.md":1236,"./api/viserStyle/en.md":1237,"./api/viserTooltip/cn.md":1238,"./api/viserTooltip/en.md":1239,"./api/viserView/cn.md":1240,"./api/viserView/en.md":1241,"./dataset/usage/cn.md":1242,"./dataset/usage/en.md":1243,"./guide/feature/cn.md":1244,"./guide/feature/en.md":1245,"./guide/installation/cn.md":1246,"./guide/installation/en.md":1247,"./guide/introduction/cn.md":1248,"./guide/introduction/en.md":1249,"./guide/render/cn.md":1250,"./guide/render/en.md":1251,"./guide/usage/cn.md":1252,"./guide/usage/en.md":1253};webpackContext.keys=function(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1205},1206:function(module,exports){module.exports="<p>cn comming soon</p>\n"},1207:function(module,exports){module.exports="<p>en comming soon</p>\n"},1208:function(module,exports){module.exports="<p>todo</p>\n"},1209:function(module,exports){module.exports="<p>todo</p>\n"},121:function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;var newObj={};if(null!=obj)for(var key in obj)Object.prototype.hasOwnProperty.call(obj,key)&&(newObj[key]=obj[key]);return newObj.default=obj,newObj}function create(){var hb=new base.HandlebarsEnvironment;return Utils.extend(hb,base),hb.SafeString=_handlebarsSafeString2.default,hb.Exception=_handlebarsException2.default,hb.Utils=Utils,hb.escapeExpression=Utils.escapeExpression,hb.VM=runtime,hb.template=function(spec){return runtime.template(spec,hb)},hb}exports.__esModule=!0;var _handlebarsBase=__webpack_require__(64),base=_interopRequireWildcard(_handlebarsBase),_handlebarsSafeString=__webpack_require__(133),_handlebarsSafeString2=_interopRequireDefault(_handlebarsSafeString),_handlebarsException=__webpack_require__(24),_handlebarsException2=_interopRequireDefault(_handlebarsException),_handlebarsUtils=__webpack_require__(15),Utils=_interopRequireWildcard(_handlebarsUtils),_handlebarsRuntime=__webpack_require__(134),runtime=_interopRequireWildcard(_handlebarsRuntime),_handlebarsNoConflict=__webpack_require__(135),_handlebarsNoConflict2=_interopRequireDefault(_handlebarsNoConflict),inst=create();inst.create=create,_handlebarsNoConflict2.default(inst),inst.default=inst,exports.default=inst,module.exports=exports.default},1210:function(module,exports){module.exports='<h1 id="event">Event</h1>\n<p>图表交互是打通人与冰冷数据的桥梁，viser 提供一系列的交互事件，帮助实现图表数据的二次呈现，比如下钻上卷。我们一共支持共 14 种事件。</p>\n<ul>\n<li>鼠标移动事件： onMouseDown,onMouseMove,onMouseLeave,onMouseUp,</li>\n<li>鼠标点击事件： onClick,onDbClick,</li>\n<li>移动端事件： onTouchStart,onTouchMove,onTouchEnd,</li>\n<li>图表区域事件： onPlotEnter,onPlotMove,onPlotLeave,onPlotClick,onPlotDbClick</li>\n</ul>\n<p>除此之外，axis,legend 标签有部分特殊事件。</p>\n<p>事件的回调函数提供 事件 event 和 图表实例 chart 两个参数，方便用户获取事件源及数据 ，并对图表实例做相应的处理。</p>\n<p>下面我们来了解下每个标签具体支持哪些事件把。</p>\n<h2 id="-">标签及支持的事件</h2>\n<h3 id="-chart">图表 Chart</h3>\n<p>图表标签 chart 支持</p>\n<ul>\n<li>鼠标移动事件： onMouseDown,onMouseMove,onMouseLeave,onMouseUp,</li>\n<li>鼠标点击事件： onClick,onDbClick,</li>\n<li>移动端事件： onTouchStart,onTouchMove,onTouchEnd,</li>\n<li>图表区域事件： onPlotEnter,onPlotMove,onPlotLeave,onPlotClick,onPlotDbClick</li>\n</ul>\n<p>代码示例：</p>\n<pre><code class="lang-javascript"><span class="hljs-tag">&lt;<span class="hljs-name">Chart</span>\n  <span class="hljs-attr">forceFit</span>\n  <span class="hljs-attr">height</span>=<span class="hljs-string">{400}</span>\n  <span class="hljs-attr">data</span>=<span class="hljs-string">{data}</span>\n  <span class="hljs-attr">scale</span>=<span class="hljs-string">{scale}</span>\n  <span class="hljs-attr">onClick</span>=<span class="hljs-string">{(ev,</span> <span class="hljs-attr">chart</span>) =&gt;</span> {\n    // todo sth\n  }}\n&gt;\n  <span class="hljs-tag">&lt;<span class="hljs-name">Tooltip</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Axis</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Line</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"year*value"</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Point</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"year*value"</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">"circle"</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">Chart</span>&gt;</span>\n</code></pre>\n<h3 id="-">图形元素</h3>\n<p>图形元素标签包括：pie,line,smoothLine,dashLine,stackLine,area,stackArea,smoothArea,interval,\nstackInterval,dodgeInterval,bar,stackBar,dodgeBar,point,funnel,pyramid,schema,box,candle,polygon,contour,heatmap,\nedge,sankey,errorBar,jitterPoint,path,series</p>\n<p>支持事件</p>\n<ul>\n<li>鼠标移动事件： onMouseDown,onMouseMove,onMouseLeave,onMouseUp,</li>\n<li>鼠标点击事件： onClick,onDbClick,</li>\n<li>移动端事件： onTouchStart,onTouchMove,onTouchEnd,</li>\n</ul>\n<p><img src="/assets/image/series_label_component.png" width="450" height="250"/></p>\n<h4 id="label-">label 组件 （修复中）</h4>\n<ul>\n<li>鼠标移动事件： onLabelMouseDown,onLabelMouseMove,onLabelMouseLeave,onLabelMouseUp,</li>\n<li>鼠标点击事件： onLabelClick,onLabelDbClick,</li>\n<li>移动端事件： onLableTouchStart,onLabelTouchMove,onLabelTouchEnd</li>\n</ul>\n<p>代码示例：</p>\n<pre><code class="lang-javascript"><span class="hljs-tag">&lt;<span class="hljs-name">Chart</span> <span class="hljs-attr">forceFit</span> <span class="hljs-attr">height</span>=<span class="hljs-string">{400}</span> <span class="hljs-attr">data</span>=<span class="hljs-string">{data}</span> <span class="hljs-attr">scale</span>=<span class="hljs-string">{scale}</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Tooltip</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Axis</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Line</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"year*value"</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Point</span>\n    <span class="hljs-attr">position</span>=<span class="hljs-string">"year*value"</span>\n    <span class="hljs-attr">shape</span>=<span class="hljs-string">"circle"</span>\n    <span class="hljs-attr">onClick</span>=<span class="hljs-string">{(ev,</span> <span class="hljs-attr">chart</span>) =&gt;</span> {\n      // todo sth\n    }}\n  /&gt;\n<span class="hljs-tag">&lt;/<span class="hljs-name">Chart</span>&gt;</span>\n</code></pre>\n<h3 id="-tooltip">提示 Tooltip</h3>\n<p>提示 tooltip 标签，支持 onShow,onHide,onChange 这个事件常用于动态更改显示信息。</p>\n<p>代码示例：</p>\n<pre><code class="lang-javascript">&lt;Chart forceFit height={<span class="hljs-number">400</span>} data={data} scale={scale}&gt;\n  &lt;Tooltip\n    showTitle={false}\n    onChange={(ev, chart) =&gt; {\n      const item = ev.items[<span class="hljs-number">0</span>]; // 获取tooltip要显示的内容\n      item.value = <span class="hljs-string">\'格式化-\'</span> + (item.value * <span class="hljs-number">100</span>).toFixed(<span class="hljs-number">2</span>) + <span class="hljs-string">\'%\'</span>;\n    }}\n  /&gt;\n  &lt;Coord type=<span class="hljs-string">"theta"</span> /&gt;\n  &lt;Axis /&gt;\n  &lt;Legend dataKey=<span class="hljs-string">"item"</span> /&gt;\n  &lt;Pie\n    position=<span class="hljs-string">"percent"</span>\n    color=<span class="hljs-string">"item"</span>\n    style={{ stroke: <span class="hljs-string">\'#fff\'</span>, lineWidth: <span class="hljs-number">1</span> }}\n    label={[\n      <span class="hljs-string">\'percent\'</span>,\n      {\n        formatter: (val, item) =&gt; {\n          return item.point.item + <span class="hljs-string">\': \'</span> + val;\n        },\n      },\n    ]}\n  /&gt;\n&lt;/Chart&gt;\n</code></pre>\n<h3 id="-axis">坐标轴 Axis</h3>\n<p>坐标轴 axis 标签，支持非常多的事件。</p>\n<p><img src="/assets/image/axis_component.png" width="600" height="350"></p>\n<h3 id="title-">title 组件</h3>\n<ul>\n<li>鼠标移动事件： onTitleMouseDown,onTitleMouseMove,onTitleMouseLeave,onTitleMouseUp,</li>\n<li>鼠标点击事件： onTitleClick,onTitleDbClick,</li>\n<li>移动端事件： onTitleTouchStart,onTitleTouchMove,onTitleTouchEnd,</li>\n</ul>\n<h3 id="label-">label 组件</h3>\n<ul>\n<li>鼠标移动事件： onLabelMouseDown,onLabelMouseMove,onLabelMouseLeave,onLabelMouseUp,</li>\n<li>鼠标点击事件： onLabelClick,onLabelDbClick,</li>\n<li>移动端事件： onLabelTouchStart,onLabelTouchMove,onLabelTouchEnd,</li>\n</ul>\n<h3 id="ticks-">ticks 组件</h3>\n<ul>\n<li>鼠标移动事件： onTicksMouseDown,onTicksMouseMove,onTicksMouseLeave,onTicksMouseUp,</li>\n<li>鼠标点击事件： onTicksClick,onTicksDbClick,</li>\n<li>移动端事件： onTicksTouchStart,onTicksTouchMove,onTicksTouchEnd,</li>\n</ul>\n<h3 id="-">线组件</h3>\n<ul>\n<li>鼠标移动事件： onLineMouseDown,onLineMouseMove,onLineMouseLeave,onLineMouseUp,</li>\n<li>鼠标点击事件： onLineClick,onLineDbClick,</li>\n<li>移动端事件： onLineTouchStart,onLineTouchMove,onLineTouchEnd,</li>\n</ul>\n<h3 id="-">网格组件</h3>\n<ul>\n<li>鼠标移动事件： onGridMouseDown,onGridMouseMove,onGridMouseLeave,onGridMouseUp,</li>\n<li>鼠标点击事件： onGridClick,onGridDbClick,</li>\n<li>移动端事件： onGridTouchStart,onGridTouchMove,onGridTouchEnd,</li>\n</ul>\n<p>代码示例：</p>\n<pre><code class="lang-javascript"><span class="hljs-tag">&lt;<span class="hljs-name">Chart</span> <span class="hljs-attr">forceFit</span> <span class="hljs-attr">height</span>=<span class="hljs-string">{400}</span> <span class="hljs-attr">data</span>=<span class="hljs-string">{data}</span> <span class="hljs-attr">scale</span>=<span class="hljs-string">{scale}</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Tooltip</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Axis</span>\n    <span class="hljs-attr">onTitleMouseDown</span>=<span class="hljs-string">{(ev,</span> <span class="hljs-attr">chart</span>) =&gt;</span> {\n      // todo sth\n    }}\n  /&gt;\n  <span class="hljs-tag">&lt;<span class="hljs-name">Line</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"year*value"</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Point</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"year*value"</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">"circle"</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">Chart</span>&gt;</span>\n</code></pre>\n<h3 id="-legend">图例 Legend</h3>\n<ul>\n<li>本身支持的事件： onHover,onClick</li>\n</ul>\n<p><img src="/assets/image/legend_component.png" width="350" height="200"/></p>\n<h3 id="-">标题组件</h3>\n<p>title 组件在使用时要注意，只有 position 为 left right (示例：<code>&lt;Legend position=&quot;left or right&quot; title={{}}&gt;</code>)才会显示出来，展示的内容是字段名称, <code>&lt;Legend position=&quot;left or right&quot; title={null}&gt;</code>可以隐藏 title 。</p>\n<ul>\n<li>鼠标移动事件： onTitleMouseDown,onTitleMouseMove,onTitleMouseLeave,onTitleMouseUp,</li>\n<li>鼠标点击事件： onTitleClick,onTitleDbClick,</li>\n<li>移动端事件： onTitleTouchStart,onTitleTouchMove,onTitleTouchEnd,</li>\n</ul>\n<h3 id="item-">item 组件</h3>\n<ul>\n<li>鼠标移动事件： onItemMouseDown,onItemMouseMove,onItemMouseLeave,onItemMouseUp,</li>\n<li>鼠标点击事件： onItemClick,onItemDbClick,</li>\n<li>移动端事件： onItemTouchStart,onItemTouchMove,onItemTouchEnd,</li>\n</ul>\n<h3 id="marker-">marker 组件</h3>\n<ul>\n<li>鼠标移动事件： onMarkerMouseDown,onMarkerMouseMove,onMarkerMouseLeave,onMarkerMouseUp,</li>\n<li>鼠标点击事件： onMarkerClick,onMarkerDbClick,</li>\n<li>移动端事件： onMarkerTouchStart,onMarkerTouchMove,onMarkerTouchEnd,</li>\n</ul>\n<h3 id="text-">text 组件</h3>\n<ul>\n<li>鼠标移动事件： onTextMouseDown,onTextMouseMove,onTextMouseLeave,onTextMouseUp,</li>\n<li>鼠标点击事件： onTextClick,onTextDbClick,</li>\n<li>移动端事件： onTextTouchStart,onTextTouchMove,onTextTouchEnd,</li>\n</ul>\n<p>代码示例：</p>\n<pre><code class="lang-javascript"><span class="hljs-tag">&lt;<span class="hljs-name">Chart</span> <span class="hljs-attr">forceFit</span> <span class="hljs-attr">height</span>=<span class="hljs-string">{400}</span> <span class="hljs-attr">data</span>=<span class="hljs-string">{data}</span> <span class="hljs-attr">scale</span>=<span class="hljs-string">{scale}</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Tooltip</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Axis</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Legend</span>\n    <span class="hljs-attr">position</span>=<span class="hljs-string">"left"</span>\n    <span class="hljs-attr">title</span>=<span class="hljs-string">"field"</span>\n    <span class="hljs-attr">onTextMouseDown</span>=<span class="hljs-string">{(ev,</span> <span class="hljs-attr">chart</span>) =&gt;</span> {\n      // todo sth\n    }}\n  /&gt;\n  <span class="hljs-tag">&lt;<span class="hljs-name">Line</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"year*value"</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Point</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"year*value"</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">"circle"</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">Chart</span>&gt;</span>\n</code></pre>\n<h3 id="-guide-to-be-done-">引导 Guide ( to be done)</h3>\n<p>支持事件</p>\n<ul>\n<li>鼠标移动事件： onMouseDown,onMouseMove,onMouseLeave,onMouseUp,</li>\n<li>鼠标点击事件： onClick,onDbClick,</li>\n<li>移动端事件： onTouchStart,onTouchMove,onTouchEnd,</li>\n</ul>\n'},1211:function(module,exports){module.exports='<h2 id="summary">summary</h2>\n<p>The interaction of diagrams is the bridge between people and cold data. Viser provides a series of interaction events to help achieve the second presentation of the chart data, such as drilling or rollup. We have supported about 14 kinds of events.</p>\n<ul>\n<li>Mouse movement event： onMouseDown,onMouseMove,onMouseLeave,onMouseUp,</li>\n<li>Mouse click event： onClick,onDbClick,</li>\n<li>Mobile event： onTouchStart,onTouchMove,onTouchEnd,</li>\n<li>Chart area events： onPlotEnter,onPlotMove,onPlotLeave,onPlotClick,onPlotDbClick</li>\n</ul>\n<p>In addition,  axis and legend tag has some special events.</p>\n<p>The event callback function provides two parameters, the event  and the chart instance , to facilitate the user to obtain the event source and data, and to handle the chart instance according to the actual scene.</p>\n<p>Let&#39;s come to see each tag support what kind of events and how can we code to implement requirements.</p>\n<h2 id="labels-and-supported-events">Labels and Supported Events</h2>\n<h3 id="chart">Chart</h3>\n<p>Chart tag support</p>\n<ul>\n<li>Mouse movement event： onMouseDown,onMouseMove,onMouseLeave,onMouseUp,</li>\n<li>Mouse click event： onClick,onDbClick,</li>\n<li>Mobile event： onTouchStart,onTouchMove,onTouchEnd,</li>\n<li>Chart area events： onPlotEnter,onPlotMove,onPlotLeave,onPlotClick,onPlotDbClick</li>\n</ul>\n<p>Code example：</p>\n<pre><code class="lang-javascript"><span class="hljs-tag">&lt;<span class="hljs-name">Chart</span> <span class="hljs-attr">forceFit</span> <span class="hljs-attr">height</span>=<span class="hljs-string">{400}</span> <span class="hljs-attr">data</span>=<span class="hljs-string">{data}</span> <span class="hljs-attr">scale</span>=<span class="hljs-string">{scale}</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{(ev,</span> <span class="hljs-attr">chart</span>) =&gt;</span> {\n  // todo sth\n}}&gt;\n  <span class="hljs-tag">&lt;<span class="hljs-name">Tooltip</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Axis</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Line</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"year*value"</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Point</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"year*value"</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">"circle"</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">Chart</span>&gt;</span>\n</code></pre>\n<h3 id="graphic-element">Graphic element</h3>\n<p>Graphic element tags include：pie,line,smoothLine,dashLine,stackLine,area,stackArea,smoothArea,interval,\nstackInterval,dodgeInterval,bar,stackBar,dodgeBar,point,funnel,pyramid,schema,box,candle,polygon,contour,heatmap,\nedge,sankey,errorBar,jitterPoint,path,series</p>\n<p>Support event</p>\n<ul>\n<li>Mouse movement event： onMouseDown,onMouseMove,onMouseLeave,onMouseUp,</li>\n<li>Mouse click event： onClick,onDbClick,</li>\n<li>Mobile event： onTouchStart,onTouchMove,onTouchEnd,</li>\n</ul>\n<p><img src="/assets/image/series_label_component.png" width="450" height="250"/></p>\n<h4 id="label">label</h4>\n<ul>\n<li>Mouse movement event： onLabelMouseDown,onLabelMouseMove,onLabelMouseLeave,onLabelMouseUp,</li>\n<li>Mouse click event： onLabelClick,onLabelDbClick,</li>\n<li>Mobile event： onLableTouchStart,onLabelTouchMove,onLabelTouchEnd</li>\n</ul>\n<p>Code example：</p>\n<pre><code class="lang-javascript"><span class="hljs-tag">&lt;<span class="hljs-name">Chart</span> <span class="hljs-attr">forceFit</span> <span class="hljs-attr">height</span>=<span class="hljs-string">{400}</span> <span class="hljs-attr">data</span>=<span class="hljs-string">{data}</span> <span class="hljs-attr">scale</span>=<span class="hljs-string">{scale}</span> &gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Tooltip</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Axis</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Line</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"year*value"</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Point</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"year*value"</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">"circle"</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{(ev,</span> <span class="hljs-attr">chart</span>) =&gt;</span> {\n    // todo sth\n  }}/&gt;\n<span class="hljs-tag">&lt;/<span class="hljs-name">Chart</span>&gt;</span>\n</code></pre>\n<h3 id="tooltip">Tooltip</h3>\n<p>Tooltip tag, support onShow,onHide,onChange(This event is often used to dynamically change the displayed information).</p>\n<p>Code example：</p>\n<pre><code class="lang-javascript">&lt;Chart forceFit height={<span class="hljs-number">400</span>} data={data} scale={scale}&gt;\n  &lt;Tooltip showTitle={false} onChange={(ev, chart) =&gt; {\n    const item = ev.items[<span class="hljs-number">0</span>]; // get tooltip content\n    item.value = <span class="hljs-string">\'格式化-\'</span> + (item.value * <span class="hljs-number">100</span>).toFixed(<span class="hljs-number">2</span>) + <span class="hljs-string">\'%\'</span>;\n  }}/&gt;\n  &lt;Coord type=<span class="hljs-string">"theta"</span> /&gt;\n  &lt;Axis /&gt;\n  &lt;Legend dataKey=<span class="hljs-string">"item"</span> /&gt;\n  &lt;Pie\n    position=<span class="hljs-string">"percent"</span>\n    color=<span class="hljs-string">"item"</span>\n    style={{ stroke: <span class="hljs-string">\'#fff\'</span>, lineWidth: <span class="hljs-number">1</span> }}\n    label={[<span class="hljs-string">\'percent\'</span>, {\n      formatter: (val, item) =&gt; {\n        return item.point.item + <span class="hljs-string">\': \'</span> + val;\n      }\n    }]}\n  /&gt;\n&lt;/Chart&gt;\n</code></pre>\n<h3 id="axis">Axis</h3>\n<p>Axis label, support for many events。</p>\n<p><img src="/assets/image/axis_component.png" width="600" height="350"></p>\n<h4 id="title">title</h4>\n<ul>\n<li>Mouse movement event： onTitleMouseDown,onTitleMouseMove,onTitleMouseLeave,onTitleMouseUp,</li>\n<li>Mouse click event： onTitleClick,onTitleDbClick,</li>\n<li>Mobile event： onTitleTouchStart,onTitleTouchMove,onTitleTouchEnd,</li>\n</ul>\n<h3 id="label">label</h3>\n<ul>\n<li>Mouse movement event： onLabelMouseDown,onLabelMouseMove,onLabelMouseLeave,onLabelMouseUp,</li>\n<li>Mouse click event： onLabelClick,onLabelDbClick,</li>\n<li>Mobile event： onLabelTouchStart,onLabelTouchMove,onLabelTouchEnd,</li>\n</ul>\n<h3 id="ticks">ticks</h3>\n<ul>\n<li>Mouse movement event： onTicksMouseDown,onTicksMouseMove,onTicksMouseLeave,onTicksMouseUp,</li>\n<li>Mouse click event： onTicksClick,onTicksDbClick,</li>\n<li>Mobile event： onTicksTouchStart,onTicksTouchMove,onTicksTouchEnd,</li>\n</ul>\n<h3 id="line">line</h3>\n<ul>\n<li>Mouse movement event： onLineMouseDown,onLineMouseMove,onLineMouseLeave,onLineMouseUp,</li>\n<li>Mouse click event： onLineClick,onLineDbClick,</li>\n<li>Mobile event： onLineTouchStart,onLineTouchMove,onLineTouchEnd,</li>\n</ul>\n<h3 id="grid">grid</h3>\n<ul>\n<li>Mouse movement event： onGridMouseDown,onGridMouseMove,onGridMouseLeave,onGridMouseUp,</li>\n<li>Mouse click event： onGridClick,onGridDbClick,</li>\n<li>Mobile event： onGridTouchStart,onGridTouchMove,onGridTouchEnd,</li>\n</ul>\n<p>Code example：</p>\n<pre><code class="lang-javascript"><span class="hljs-tag">&lt;<span class="hljs-name">Chart</span> <span class="hljs-attr">forceFit</span> <span class="hljs-attr">height</span>=<span class="hljs-string">{400}</span> <span class="hljs-attr">data</span>=<span class="hljs-string">{data}</span> <span class="hljs-attr">scale</span>=<span class="hljs-string">{scale}</span> &gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Tooltip</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Axis</span> <span class="hljs-attr">onTitleMouseDown</span>=<span class="hljs-string">{(ev,</span> <span class="hljs-attr">chart</span>) =&gt;</span> {\n    // todo sth\n  }}/&gt;\n  <span class="hljs-tag">&lt;<span class="hljs-name">Line</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"year*value"</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Point</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"year*value"</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">"circle"</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">Chart</span>&gt;</span>\n</code></pre>\n<h3 id="legend">Legend</h3>\n<ul>\n<li>Self-supported events： onHover,onClick</li>\n</ul>\n<p><img src="/assets/image/legend_component.png" width="350" height="200"/></p>\n<h3 id="title">title</h3>\n<p>Here is some tips, if you are using The title component , only set position equals left  or right (such as: <code>&lt;Legend position=&quot;left or right&quot; title={{}}&gt;</code>), the title component will show，title content is field name. code like this can hide title component <code>&lt;Legend position=&quot;left or right&quot; title={null}&gt;</code> 。</p>\n<ul>\n<li>Mouse movement event： onTitleMouseDown,onTitleMouseMove,onTitleMouseLeave,onTitleMouseUp,</li>\n<li>Mouse click event： onTitleClick,onTitleDbClick,</li>\n<li>Mobile event： onTitleTouchStart,onTitleTouchMove,onTitleTouchEnd,</li>\n</ul>\n<h3 id="item">item</h3>\n<ul>\n<li>Mouse movement event： onItemMouseDown,onItemMouseMove,onItemMouseLeave,onItemMouseUp,</li>\n<li>Mouse click event： onItemClick,onItemDbClick,</li>\n<li>Mobile event： onItemTouchStart,onItemTouchMove,onItemTouchEnd,</li>\n</ul>\n<h3 id="marker">marker</h3>\n<ul>\n<li>Mouse movement event： onMarkerMouseDown,onMarkerMouseMove,onMarkerMouseLeave,onMarkerMouseUp,</li>\n<li>Mouse click event： onMarkerClick,onMarkerDbClick,</li>\n<li>Mobile event： onMarkerTouchStart,onMarkerTouchMove,onMarkerTouchEnd,</li>\n</ul>\n<h3 id="text">text</h3>\n<ul>\n<li>Mouse movement event： onTextMouseDown,onTextMouseMove,onTextMouseLeave,onTextMouseUp,</li>\n<li>Mouse click event： onTextClick,onTextDbClick,</li>\n<li>Mobile event： onTextTouchStart,onTextTouchMove,onTextTouchEnd,</li>\n</ul>\n<p>Code example：</p>\n<pre><code class="lang-javascript"><span class="hljs-tag">&lt;<span class="hljs-name">Chart</span> <span class="hljs-attr">forceFit</span> <span class="hljs-attr">height</span>=<span class="hljs-string">{400}</span> <span class="hljs-attr">data</span>=<span class="hljs-string">{data}</span> <span class="hljs-attr">scale</span>=<span class="hljs-string">{scale}</span> &gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Tooltip</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Axis</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Legend</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"left"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"field"</span> <span class="hljs-attr">onTextMouseDown</span>=<span class="hljs-string">{(ev,</span> <span class="hljs-attr">chart</span>) =&gt;</span> {\n    // todo sth\n  }}/&gt;\n  <span class="hljs-tag">&lt;<span class="hljs-name">Line</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"year*value"</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Point</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"year*value"</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">"circle"</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">Chart</span>&gt;</span>\n</code></pre>\n<h3 id="guide-to-be-done-">Guide  ( to be done)</h3>\n<p>Support event</p>\n<ul>\n<li>Mouse movement event： onMouseDown,onMouseMove,onMouseLeave,onMouseUp,</li>\n<li>Mouse click event： onClick,onDbClick,</li>\n<li>Mobile event： onTouchStart,onTouchMove,onTouchEnd,</li>\n</ul>\n'},1212:function(module,exports){module.exports='<h1 id="viser-graph-api">Viser-graph 组件 api</h1>\n<h2 id="graph">Graph</h2>\n<h4 id="type">type</h4>\n<p>可选 tree （树状关系图）或者 graph （网状关系图）， 默认 graph。最简单的示例如下：</p>\n<pre><code class="lang-javascript">const graph = {\n  <span class="hljs-class"><span class="hljs-keyword">type</span></span>: <span class="hljs-symbol">\'grap</span>h\',\n  width: <span class="hljs-number">500</span>,\n  height: <span class="hljs-number">500</span>,\n  fitView: <span class="hljs-symbol">\'c</span>c\',\n  fitViewPadding: <span class="hljs-literal">true</span>,\n  animate: <span class="hljs-literal">true</span>,\n  minZoom: <span class="hljs-number">0.2</span>,\n  maxZoom: <span class="hljs-number">10</span>,\n  data,\n};\nexport <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">App</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{\n  constructor(props) {\n    <span class="hljs-keyword">super</span>(props);\n  }\n  render() {\n    <span class="hljs-keyword">return</span> (\n      &lt;div&gt;\n        &lt;<span class="hljs-type">Graph</span> {...graph} /&gt;\n      &lt;/div&gt;\n    );\n  }\n}\n</code></pre>\n<h4 id="data-object-">data {object} 数据模型 必选</h4>\n<p>格式：\ntype 为 graph 、 tree 的数据格式是不一样的。</p>\n<pre><code class="lang-javascript"><span class="hljs-comment">// type === graph</span>\n{\n<span class="hljs-symbol">  nodes:</span>[],\n<span class="hljs-symbol">  edges:</span>[],\n<span class="hljs-symbol">  groups:</span> [],\n}\n<span class="hljs-comment">// type === tree</span>\n{\n<span class="hljs-symbol">  roots:</span>[]\n}\n</code></pre>\n<p>nodes：节点的数据模型</p>\n<pre><code class="lang-javascript">{\n  <span class="hljs-attribute">id</span>: <span class="hljs-string">\'node1\'</span>,             <span class="hljs-comment">// id 必须唯一</span>\n  <span class="hljs-attribute">x</span>: number,            <span class="hljs-comment">// 横向位置</span>\n  <span class="hljs-attribute">y</span>: number,           <span class="hljs-comment">// 纵向位置</span>\n  <span class="hljs-attribute">color</span>: <span class="hljs-string">\'#333\'</span>,           <span class="hljs-comment">// 颜色</span>\n  <span class="hljs-attribute">size</span>: <span class="hljs-number">10</span> || [<span class="hljs-number">10</span>, <span class="hljs-number">10</span>],    <span class="hljs-comment">// 尺寸 || [宽, 高]</span>\n  <span class="hljs-attribute">shape</span>: <span class="hljs-string">\'circle\'</span>,         <span class="hljs-comment">// 所用图形（目前只测验了circle可用）</span>\n  <span class="hljs-attribute">style</span>: {                 <span class="hljs-comment">// 关键形样式（优先级高于color）</span>\n    <span class="hljs-attribute">fill</span>: <span class="hljs-string">\'red\'</span>,\n      <span class="hljs-attribute">stroke</span>: <span class="hljs-string">\'blue\'</span>\n  },\n  <span class="hljs-attribute">label</span>: <span class="hljs-string">\'文本标签\'</span> || {     <span class="hljs-comment">// 文本标签 || 文本图形配置</span>\n    <span class="hljs-attribute">text</span>: <span class="hljs-string">\'文本标签\'</span>,\n      <span class="hljs-attribute">fill</span>: <span class="hljs-string">\'green\'</span>\n  },\n  <span class="hljs-attribute">parent</span>: <span class="hljs-string">\'group1\'</span>,         <span class="hljs-comment">// 所属组</span>\n  <span class="hljs-attribute">index</span>: <span class="hljs-number">1</span>,                 <span class="hljs-comment">// 渲染层级（暂未测试）</span>\n}\n</code></pre>\n<p>edges：边的数据模型</p>\n<pre><code class="lang-javascript">{\n  <span class="hljs-attribute">id</span>: <span class="hljs-string">\'edge1\'</span>,           <span class="hljs-comment">// id 必须唯一</span>\n  <span class="hljs-attribute">source</span>: <span class="hljs-string">\'node1\'</span>,       <span class="hljs-comment">// 源节点 id</span>\n  <span class="hljs-attribute">target</span>: <span class="hljs-string">\'node2\'</span>,       <span class="hljs-comment">// 目标节点 id</span>\n  <span class="hljs-attribute">controlPoints</span>: [{      <span class="hljs-comment">// 控制点</span>\n    <span class="hljs-attribute">x</span>: <span class="hljs-number">10</span>,\n      <span class="hljs-attribute">y</span>: <span class="hljs-number">10</span>\n  }],\n  <span class="hljs-attribute">sourceAnchor</span>: <span class="hljs-number">0</span>,       <span class="hljs-comment">// 源节点锚点（以上锚点测试为填写后将不会与其他点连接，具体作用未知）</span>\n  <span class="hljs-attribute">targetAnchor</span>: <span class="hljs-number">2</span>,       <span class="hljs-comment">// 目标节点锚点（以上锚点测试为填写后将不会与其他点连接，具体作用未知）</span>\n  <span class="hljs-attribute">color</span>: <span class="hljs-string">\'red\'</span>,          <span class="hljs-comment">// 颜色</span>\n  <span class="hljs-attribute">size</span>: <span class="hljs-number">3</span>,               <span class="hljs-comment">// 尺寸</span>\n  <span class="hljs-attribute">shape</span>: <span class="hljs-string">\'line\'</span>,         <span class="hljs-comment">// 所用图形（目前只测验了line可用）, 引入插件-二阶贝塞尔曲线 ， 可使用shape: quadraticCurve</span>\n  <span class="hljs-attribute">style</span>: {               <span class="hljs-comment">// 关键形样式（优先级高于color）</span>\n      <span class="hljs-attribute">stroke</span>: <span class="hljs-string">\'blue\'</span>\n  },\n  <span class="hljs-attribute">label</span>: <span class="hljs-string">\'文本标签\'</span> || {   <span class="hljs-comment">// 文本标签 || 文本图形配置</span>\n    <span class="hljs-attribute">text</span>: <span class="hljs-string">\'文本标签\'</span>,\n      <span class="hljs-attribute">fill</span>: <span class="hljs-string">\'green\'</span>\n  },\n  <span class="hljs-attribute">parent</span>: <span class="hljs-string">\'group1\'</span>,       <span class="hljs-comment">// 所属组</span>\n  <span class="hljs-attribute">index</span>: <span class="hljs-number">1</span>,               <span class="hljs-comment">// 渲染层级</span>\n}\n</code></pre>\n<p>groups：群组的数据模型</p>\n<pre><code class="lang-javascript">{\n  <span class="hljs-attribute">id</span>: <span class="hljs-string">\'group1\'</span>,             <span class="hljs-comment">// id 必须唯一</span>\n  <span class="hljs-attribute">color</span>: <span class="hljs-string">\'#333\'</span>,           <span class="hljs-comment">// 颜色</span>\n  <span class="hljs-attribute">size</span>: <span class="hljs-number">10</span> || [<span class="hljs-number">10</span>, <span class="hljs-number">10</span>],    <span class="hljs-comment">// 尺寸 || [宽, 高], 参数不可用</span>\n  <span class="hljs-attribute">shape</span>: <span class="hljs-string">\'circle\'</span>,         <span class="hljs-comment">// 所用图形, 参数不可用</span>\n  <span class="hljs-attribute">style</span>: {                 <span class="hljs-comment">// 关键形样式（优先级高于color）</span>\n    <span class="hljs-attribute">fill</span>: <span class="hljs-string">\'red\'</span>,\n      <span class="hljs-attribute">stroke</span>: <span class="hljs-string">\'blue\'</span>\n  },\n  <span class="hljs-attribute">label</span>: <span class="hljs-string">\'文本标签\'</span> || {     <span class="hljs-comment">// 文本标签 || 文本图形配置</span>\n    <span class="hljs-attribute">text</span>: <span class="hljs-string">\'文本标签\'</span>,\n      <span class="hljs-attribute">fill</span>: <span class="hljs-string">\'green\'</span>\n  },\n  <span class="hljs-attribute">parent</span>: <span class="hljs-string">\'group2\'</span>,         <span class="hljs-comment">// 所属组</span>\n  <span class="hljs-attribute">index</span>: <span class="hljs-number">1</span>,                 <span class="hljs-comment">// 渲染层级</span>\n}\n</code></pre>\n<p>roots: type 为 tree 时, data 数据模型</p>\n<pre><code class="lang-javascript">[\n  {\n    id: <span class="hljs-string">\'root\'</span>, <span class="hljs-comment">// 根节点 id</span>\n    <span class="hljs-built_in">color</span>: <span class="hljs-string">\'#333\'</span>, <span class="hljs-comment">// 颜色</span>\n    <span class="hljs-built_in">size</span>: <span class="hljs-number">10</span> || [<span class="hljs-number">10</span>, <span class="hljs-number">10</span>], <span class="hljs-comment">// 尺寸 || [宽, 高]</span>\n    <span class="hljs-built_in">shape</span>: <span class="hljs-string">\'circle\'</span>, <span class="hljs-comment">//  所用图形</span>\n    style: {\n      <span class="hljs-comment">// 样式 (优先级高于 color)</span>\n      <span class="hljs-built_in">fill</span>: <span class="hljs-string">\'red\'</span>,\n      <span class="hljs-built_in">stroke</span>: <span class="hljs-string">\'blue\'</span>,\n    },\n    label: <span class="hljs-string">\'文本标签\'</span> || {\n      <span class="hljs-comment">// 文本标签 || 文本图形配置</span>\n      <span class="hljs-built_in">text</span>: <span class="hljs-string">\'文本标签\'</span>,\n      <span class="hljs-built_in">fill</span>: <span class="hljs-string">\'green\'</span>,\n    },\n    parent: <span class="hljs-string">\'parentId\'</span>, <span class="hljs-comment">// 父节点 id</span>\n    collapsed: <span class="hljs-keyword">false</span>, <span class="hljs-comment">// 是否折叠 默认false</span>\n    index: <span class="hljs-number">1</span>, <span class="hljs-comment">// 渲染层级</span>\n    children: [\n      {\n        <span class="hljs-comment">// 子元素集 （子元素数据模型和根节点同构）</span>\n        id: <span class="hljs-string">\'leaf\'</span>,\n      },\n    ],\n  },\n];\n</code></pre>\n<h4 id="container">container</h4>\n<p>需传入 dom 容器或者容器 id {domObject || string}  必选</p>\n<h4 id="width">width</h4>\n<p>画布宽，单位像素 {number}  可选</p>\n<h4 id="height">height</h4>\n<p>画布高，单位像素 {number}  可选</p>\n<h4 id="fitview">fitview</h4>\n<p>初始化视口区域  {string}  可选\n候选值为： &#39;tl&#39;, &#39;lc&#39;, &#39;bl&#39;, &#39;cc&#39;, &#39;tc&#39;, &#39;tr&#39;, &#39;rc&#39;, &#39;br&#39;, &#39;bc&#39;, &#39;autoZoom&#39;</p>\n<p><img src="//cdn.nlark.com/lark/0/2018/png/124533/1532954651334-8286b350-7e04-4b56-84ec-fc0182e1bf32.png" width="300px"/></p>\n<h4 id="fitviewpadding">fitViewPadding</h4>\n<p>视口适应画布边距 {boolean | number | number[]}  可选\n<img src="//cdn.nlark.com/lark/0/2018/png/1140/1533632218107-1822dab0-9499-41cb-8fb4-cfb4843637ec.png" width="300px"/></p>\n<h4 id="animate">animate</h4>\n<p>是否开启动画 {boolean} 默认 false</p>\n<h4 id="minzoom">minZoom</h4>\n<p>最小缩放倍率 {number} 默认为 0.2</p>\n<h4 id="maxzoom">maxZoom</h4>\n<p>最大缩放倍率 {number} 默认为 10</p>\n<h4 id="plugins">plugins</h4>\n<p>插件集 {array} 用于扩展 layout 或者映射关系，示例如下</p>\n<pre><code><span class="hljs-comment">// 插件-布局-阿基米德螺线</span>\n<span class="hljs-keyword">var</span> <span class="hljs-keyword">Plugin</span> = G6.Plugins[<span class="hljs-string">"layout.circle"</span>];\n<span class="hljs-comment">// 插件-布局-圆形</span>\n<span class="hljs-keyword">var</span> <span class="hljs-keyword">Plugin</span> = G6.Plugins[<span class="hljs-string">"layout.archimeddeanSpiral"</span>];\n<span class="hljs-comment">// 插件-模版-最大生成森林</span>\n<span class="hljs-keyword">var</span> <span class="hljs-keyword">Plugin</span> = G6.Plugins[<span class="hljs-string">"template.maxSpanningForest"</span>];\n<span class="hljs-comment">// 插件-缩略图</span>\n<span class="hljs-keyword">var</span> <span class="hljs-keyword">Plugin</span> = G6.Plugins[<span class="hljs-string">"tool.minimap"</span>];\n<span class="hljs-keyword">var</span> <span class="hljs-keyword">plugin</span> = new <span class="hljs-keyword">Plugin</span>({\n  container: \'minimap\',\n  width: 180,\n  height: 120\n});\n\n<span class="hljs-keyword">var</span> <span class="hljs-keyword">graph</span> = new G6.<span class="hljs-keyword">Graph</span>({\n  container: \'mountNode\',\n  fitView: \'<span class="hljs-keyword">cc</span>\',\n  height: <span class="hljs-keyword">window</span>.innerHeight,\n  plugins: [new <span class="hljs-keyword">Plugin</span>()]\n});\n</code></pre><h4 id="layout">layout</h4>\n<p>布局参数 {object|function}\n详见方法中的 layouts</p>\n<h4 id="-">事件</h4>\n<pre><code class="lang-javascript"><span class="hljs-keyword">const</span> graph = {\n  <span class="hljs-attr">type</span>: <span class="hljs-string">\'graph\'</span>,\n  data,\n  <span class="hljs-attr">onClick</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">ev, graph</span>) </span>{\n    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'click\'</span>, ev, graph);\n  },\n};\n</code></pre>\n<pre><code>  onClick?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 鼠标单击</span>\n  onAfterchange?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 数据改变后</span>\n  onMousedown?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 鼠标按下</span>\n  onMousemove?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 鼠标移动</span>\n  onMouseleave?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 鼠标离开画布区域</span>\n  onMouseup?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 鼠标抬起</span>\n  onDblclick?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 鼠标双击</span>\n  onTouchstart?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 手指触摸</span>\n  onTouchmove?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 手指移动</span>\n  onTouchend?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 手指离开</span>\n  onPlotenter?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 进入图表时</span>\n  onPlotmove?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 在图表上移动时</span>\n  onPlotleave?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 从图表离开时</span>\n  onPlotclick?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 单击图表时</span>\n  onPlotdblclick?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 双击图表时</span>\n  onDragstart?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 开始拖动时</span>\n  onDrag?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 拖动中</span>\n  onDragend?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 拖动结束时</span>\n</code></pre><h4 id="-">事件回调函数参数</h4>\n<p>ev: dom 节点相关信息\ngraph: 配置参数相关信息</p>\n<h3 id="zoom-">zoom 画布缩放</h3>\n<h4 id="min-number-">min?: number;</h4>\n<p>最小缩放比率</p>\n<h4 id="max-number-">max?: number;</h4>\n<p>最大缩放比率</p>\n<h4 id="current-number-">current?: number;</h4>\n<p>当前缩放比率</p>\n<pre><code class="lang-javascript"><span class="hljs-keyword">const</span> zoom = {\n  <span class="hljs-attr">max</span>: <span class="hljs-number">10</span>,\n  <span class="hljs-attr">min</span>: <span class="hljs-number">1</span>,\n  <span class="hljs-attr">current</span>: <span class="hljs-number">2</span>,\n};\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">App</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{\n  <span class="hljs-keyword">constructor</span>(props) {\n    <span class="hljs-keyword">super</span>(props);\n  }\n  render() {\n    <span class="hljs-keyword">return</span> (\n      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Graph</span> {<span class="hljs-attr">...graph</span>}&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">Zoom</span> {<span class="hljs-attr">...zoom</span>} /&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">Graph</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    );\n  }\n}</span>\n</code></pre>\n<h3 id="node">Node</h3>\n<h4 id="shape-string-">shape?: string;</h4>\n<p>节点形状</p>\n<h4 id="size-number-">size?: number;</h4>\n<p>节点大小</p>\n<h4 id="label-obj-any-">label?: (obj: any) =&gt; {};</h4>\n<p>节点文本</p>\n<h4 id="style-any-">style?: any;</h4>\n<p>节点样式</p>\n<pre><code class="lang-javascript"><span class="hljs-keyword">const</span> node = {\n  <span class="hljs-attr">shape</span>: <span class="hljs-string">\'treeNode\'</span>,\n  <span class="hljs-attr">size</span>: <span class="hljs-number">8</span>,\n  <span class="hljs-attr">label</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">obj</span>) </span>{\n    <span class="hljs-keyword">return</span> obj.name;\n  },\n  <span class="hljs-attr">style</span>: {\n    <span class="hljs-attr">fill</span>: <span class="hljs-string">\'red\'</span>,\n    <span class="hljs-attr">stroke</span>: <span class="hljs-string">\'blue\'</span>,\n  },\n};\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">App</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{\n  <span class="hljs-keyword">constructor</span>(props) {\n    <span class="hljs-keyword">super</span>(props);\n  }\n  render() {\n    <span class="hljs-keyword">return</span> (\n      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Graph</span> {<span class="hljs-attr">...graph</span>}&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">Node</span> {<span class="hljs-attr">...node</span>} /&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">Graph</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    );\n  }\n}</span>\n</code></pre>\n<h3 id="edge">Edge</h3>\n<h4 id="shape-string-">shape?: string;边形状</h4>\n<h4 id="style-any-">style?: any;边样式</h4>\n<pre><code class="lang-javascript"><span class="hljs-keyword">const</span> edge = {\n  <span class="hljs-attr">shape</span>: <span class="hljs-string">\'smooth\'</span>,\n  <span class="hljs-attr">style</span>: {\n    <span class="hljs-attr">stroke</span>: <span class="hljs-string">\'blue\'</span>,\n  },\n};\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">App</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{\n  <span class="hljs-keyword">constructor</span>(props) {\n    <span class="hljs-keyword">super</span>(props);\n  }\n  render() {\n    <span class="hljs-keyword">return</span> (\n      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Graph</span> {<span class="hljs-attr">...graph</span>}&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">Edge</span> {<span class="hljs-attr">...Edge</span>} /&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">Graph</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    );\n  }\n}</span>\n</code></pre>\n<p>详细可见： <a href="https://antv.alipay.com/zh-cn/g6/1.x/api/graph.html">https://antv.alipay.com/zh-cn/g6/1.x/api/graph.html</a></p>\n'},1213:function(module,exports){module.exports='<h1 id="viser-graph-component-api">Viser-graph component api</h1>\n<h2 id="graph">Graph</h2>\n<h4 id="type">type</h4>\n<p>Optional tree (tree relation diagram) or graph (mesh relation diagram), default graph. The simplest examples are as follows:</p>\n<pre><code class="lang-javascript">const graph = {\n  <span class="hljs-class"><span class="hljs-keyword">type</span></span>: <span class="hljs-symbol">\'grap</span>h\',\n  width: <span class="hljs-number">500</span>,\n  height: <span class="hljs-number">500</span>,\n  fitView: <span class="hljs-symbol">\'c</span>c\',\n  fitViewPadding: <span class="hljs-literal">true</span>,\n  animate: <span class="hljs-literal">true</span>,\n  minZoom: <span class="hljs-number">0.2</span>,\n  maxZoom: <span class="hljs-number">10</span>,\n  data,\n};\nexport <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">App</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{\n  constructor(props) {\n    <span class="hljs-keyword">super</span>(props);\n  }\n  render() {\n    <span class="hljs-keyword">return</span> (\n      &lt;div&gt;\n        &lt;<span class="hljs-type">Graph</span> {...graph} /&gt;\n      &lt;/div&gt;\n    );\n  }\n}\n</code></pre>\n<h4 id="data-object-data-model-required">data {object} data model, required</h4>\n<p>format:\nThe data format of type for graph and tree is different.</p>\n<pre><code class="lang-javascript"><span class="hljs-comment">// type === graph</span>\n{\n<span class="hljs-symbol">  nodes:</span>[],\n<span class="hljs-symbol">  edges:</span>[],\n<span class="hljs-symbol">  groups:</span> [],\n}\n<span class="hljs-comment">// type === tree</span>\n{\n<span class="hljs-symbol">  roots:</span>[]\n}\n</code></pre>\n<p>nodes: Data model of nodes</p>\n<pre><code class="lang-javascript">{\n  <span class="hljs-attribute">id</span>: <span class="hljs-string">\'node1\'</span>,             <span class="hljs-comment">// id must be unique</span>\n  <span class="hljs-attribute">x</span>: number,            <span class="hljs-comment">// Lateral position</span>\n  <span class="hljs-attribute">y</span>: number,           <span class="hljs-comment">// Longitudinal position</span>\n  <span class="hljs-attribute">color</span>: <span class="hljs-string">\'#333\'</span>,           <span class="hljs-comment">// color</span>\n  <span class="hljs-attribute">size</span>: <span class="hljs-number">10</span> || [<span class="hljs-number">10</span>, <span class="hljs-number">10</span>],    <span class="hljs-comment">// size || [width, height]</span>\n  <span class="hljs-attribute">shape</span>: <span class="hljs-string">\'circle\'</span>,         <span class="hljs-comment">// The graphics used (currently only tested circle available)</span>\n  <span class="hljs-attribute">style</span>: {                 <span class="hljs-comment">// Key shape style (priority over color)</span>\n    <span class="hljs-attribute">fill</span>: <span class="hljs-string">\'red\'</span>,\n      <span class="hljs-attribute">stroke</span>: <span class="hljs-string">\'blue\'</span>\n  },\n  <span class="hljs-attribute">label</span>: <span class="hljs-string">\'Text label\'</span> || {     <span class="hljs-comment">// Text label || Text graphics configuration</span>\n    <span class="hljs-attribute">text</span>: <span class="hljs-string">\'Text label\'</span>,\n      <span class="hljs-attribute">fill</span>: <span class="hljs-string">\'green\'</span>\n  },\n  <span class="hljs-attribute">parent</span>: <span class="hljs-string">\'group1\'</span>,         <span class="hljs-comment">// declare which group is the parent of nodes</span>\n  <span class="hljs-attribute">index</span>: <span class="hljs-number">1</span>,                 <span class="hljs-comment">// Render level (not yet tested)</span>\n}\n</code></pre>\n<p>edges: Data model of edges</p>\n<pre><code class="lang-javascript">{\n  <span class="hljs-attribute">id</span>: <span class="hljs-string">\'edge1\'</span>,           <span class="hljs-comment">// id must be unique</span>\n  <span class="hljs-attribute">source</span>: <span class="hljs-string">\'node1\'</span>,       <span class="hljs-comment">// Source node ID</span>\n  <span class="hljs-attribute">target</span>: <span class="hljs-string">\'node2\'</span>,       <span class="hljs-comment">// Target node ID</span>\n  <span class="hljs-attribute">controlPoints</span>: [{      <span class="hljs-comment">// control point</span>\n    <span class="hljs-attribute">x</span>: <span class="hljs-number">10</span>,\n      <span class="hljs-attribute">y</span>: <span class="hljs-number">10</span>\n  }],\n  <span class="hljs-attribute">sourceAnchor</span>: <span class="hljs-number">0</span>,       <span class="hljs-comment">// The anchor point of the source node (the above anchor test will not be connected to other points after completion, and the specific function is unknown).</span>\n  <span class="hljs-attribute">targetAnchor</span>: <span class="hljs-number">2</span>,       <span class="hljs-comment">// The anchor point of the target node (the above anchor test will not be connected to other points after completion, and the specific function is unknown).</span>\n  <span class="hljs-attribute">color</span>: <span class="hljs-string">\'red\'</span>,          <span class="hljs-comment">// color</span>\n  <span class="hljs-attribute">size</span>: <span class="hljs-number">3</span>,               <span class="hljs-comment">// size</span>\n  <span class="hljs-attribute">shape</span>: <span class="hljs-string">\'line\'</span>,         <span class="hljs-comment">// The graphics used (currently only tested line available), introduced the plug-in - , and shape: quadraticCurve can be used.</span>\n  <span class="hljs-attribute">style</span>: {               <span class="hljs-comment">// Key shape style (priority over color)</span>\n      <span class="hljs-attribute">stroke</span>: <span class="hljs-string">\'blue\'</span>\n  },\n  <span class="hljs-attribute">label</span>: <span class="hljs-string">\'Text label\'</span> || {   <span class="hljs-comment">// Text label || Text graphics configuration</span>\n    <span class="hljs-attribute">text</span>: <span class="hljs-string">\'Text label\'</span>,\n      <span class="hljs-attribute">fill</span>: <span class="hljs-string">\'green\'</span>\n  },\n  <span class="hljs-attribute">parent</span>: <span class="hljs-string">\'group1\'</span>,       <span class="hljs-comment">// declare which group is the parent of nodes</span>\n  <span class="hljs-attribute">index</span>: <span class="hljs-number">1</span>,               <span class="hljs-comment">// Render level (not yet tested)</span>\n}\n</code></pre>\n<p>groups: Data model of groups</p>\n<pre><code class="lang-javascript">{\n  <span class="hljs-attribute">id</span>: <span class="hljs-string">\'group1\'</span>,             <span class="hljs-comment">// id must be unique</span>\n  <span class="hljs-attribute">color</span>: <span class="hljs-string">\'#333\'</span>,           <span class="hljs-comment">// color</span>\n  <span class="hljs-attribute">size</span>: <span class="hljs-number">10</span> || [<span class="hljs-number">10</span>, <span class="hljs-number">10</span>],    <span class="hljs-comment">// size || [width, height], Parameter not available</span>\n  <span class="hljs-attribute">shape</span>: <span class="hljs-string">\'circle\'</span>,         <span class="hljs-comment">// The graphics used, Parameter not available</span>\n  <span class="hljs-attribute">style</span>: {                 <span class="hljs-comment">// Key shape style (priority over color)</span>\n    <span class="hljs-attribute">fill</span>: <span class="hljs-string">\'red\'</span>,\n      <span class="hljs-attribute">stroke</span>: <span class="hljs-string">\'blue\'</span>\n  },\n  <span class="hljs-attribute">label</span>: <span class="hljs-string">\'Text label\'</span> || {     <span class="hljs-comment">// Text label || Text graphics configuration</span>\n    <span class="hljs-attribute">text</span>: <span class="hljs-string">\'Text label\'</span>,\n      <span class="hljs-attribute">fill</span>: <span class="hljs-string">\'green\'</span>\n  },\n  <span class="hljs-attribute">parent</span>: <span class="hljs-string">\'group2\'</span>,         <span class="hljs-comment">// declare which group is the parent of nodes</span>\n  <span class="hljs-attribute">index</span>: <span class="hljs-number">1</span>,                 <span class="hljs-comment">// Render level</span>\n}\n</code></pre>\n<p>roots: the data model when type is tree</p>\n<pre><code class="lang-javascript">[\n  {\n    id: <span class="hljs-string">\'root\'</span>, <span class="hljs-comment">// Root node ID</span>\n    <span class="hljs-built_in">color</span>: <span class="hljs-string">\'#333\'</span>, <span class="hljs-comment">// color</span>\n    <span class="hljs-built_in">size</span>: <span class="hljs-number">10</span> || [<span class="hljs-number">10</span>, <span class="hljs-number">10</span>], <span class="hljs-comment">// size || [width, height]</span>\n    <span class="hljs-built_in">shape</span>: <span class="hljs-string">\'circle\'</span>, <span class="hljs-comment">//  The graphics used</span>\n    style: {\n      <span class="hljs-comment">// Key shape style (priority over color)</span>\n      <span class="hljs-built_in">fill</span>: <span class="hljs-string">\'red\'</span>,\n      <span class="hljs-built_in">stroke</span>: <span class="hljs-string">\'blue\'</span>,\n    },\n    label: <span class="hljs-string">\'Text label\'</span> || {\n      <span class="hljs-comment">// Text label || Text graphics configuration</span>\n      <span class="hljs-built_in">text</span>: <span class="hljs-string">\'Text label\'</span>,\n      <span class="hljs-built_in">fill</span>: <span class="hljs-string">\'green\'</span>,\n    },\n    parent: <span class="hljs-string">\'parentId\'</span>, <span class="hljs-comment">// Parent node ID</span>\n    collapsed: <span class="hljs-keyword">false</span>, <span class="hljs-comment">// Whether to collapse, default false</span>\n    index: <span class="hljs-number">1</span>, <span class="hljs-comment">// Render level</span>\n    children: [\n      {\n        <span class="hljs-comment">// child element data（child element data model is the same as root node structure）</span>\n        id: <span class="hljs-string">\'leaf\'</span>,\n      },\n    ],\n  },\n];\n</code></pre>\n<h4 id="container">container</h4>\n<p>You need to import DOM container or container ID. {domObject || string},  required</p>\n<h4 id="width">width</h4>\n<p>Canvas width, unit pixel {number}, optional</p>\n<h4 id="height">height</h4>\n<p>Canvas height, unit pixel {number}, optional</p>\n<h4 id="fitview">fitview</h4>\n<p>Initialize viewport area {string} , optional\nThe candidate values are: &#39;tl&#39;, &#39;lc&#39;, &#39;bl&#39;, &#39;cc&#39;, &#39;tc&#39;, &#39;tr&#39;, &#39;rc&#39;, &#39;br&#39;, &#39;bc&#39;, &#39;autoZoom&#39;</p>\n<p><img src="//cdn.nlark.com/lark/0/2018/png/124533/1532954651334-8286b350-7e04-4b56-84ec-fc0182e1bf32.png" width="300px"/></p>\n<h4 id="fitviewpadding">fitViewPadding</h4>\n<p>Viewport adaptation canvas margins {boolean | number | number[]}  optional\n<img src="//cdn.nlark.com/lark/0/2018/png/1140/1533632218107-1822dab0-9499-41cb-8fb4-cfb4843637ec.png" width="300px"/></p>\n<h4 id="animate">animate</h4>\n<p>Whether to open animation {boolean} default to false</p>\n<h4 id="minzoom">minZoom</h4>\n<p>Minimum zoom ratio {number} default value is 0.2</p>\n<h4 id="maxzoom">maxZoom</h4>\n<p>Maximum zoom ratio {number} default value is 10</p>\n<h4 id="plugins">plugins</h4>\n<p>Plug-in set {array} It is used to extend layout or mapping relationship.The examples are as follows</p>\n<pre><code><span class="hljs-comment">// Plug-in - layout -  Archimedes spiral</span>\n<span class="hljs-keyword">var</span> <span class="hljs-keyword">Plugin</span> = G6.Plugins[<span class="hljs-string">"layout.circle"</span>];\n<span class="hljs-comment">// Plugin - layout - round</span>\n<span class="hljs-keyword">var</span> <span class="hljs-keyword">Plugin</span> = G6.Plugins[<span class="hljs-string">"layout.archimeddeanSpiral"</span>];\n<span class="hljs-comment">// Plug-in - template - maximum spanning forest</span>\n<span class="hljs-keyword">var</span> <span class="hljs-keyword">Plugin</span> = G6.Plugins[<span class="hljs-string">"template.maxSpanningForest"</span>];\n<span class="hljs-comment">// Plug-in - thumbnail</span>\n<span class="hljs-keyword">var</span> <span class="hljs-keyword">Plugin</span> = G6.Plugins[<span class="hljs-string">"tool.minimap"</span>];\n<span class="hljs-keyword">var</span> <span class="hljs-keyword">plugin</span> = new <span class="hljs-keyword">Plugin</span>({\n  container: \'minimap\',\n  width: 180,\n  height: 120\n});\n\n<span class="hljs-keyword">var</span> <span class="hljs-keyword">graph</span> = new G6.<span class="hljs-keyword">Graph</span>({\n  container: \'mountNode\',\n  fitView: \'<span class="hljs-keyword">cc</span>\',\n  height: <span class="hljs-keyword">window</span>.innerHeight,\n  plugins: [new <span class="hljs-keyword">Plugin</span>()]\n});\n</code></pre><h4 id="layout">layout</h4>\n<p>布局参数 {object|function}\n详见方法中的 layouts</p>\n<h4 id="-">事件</h4>\n<pre><code class="lang-javascript"><span class="hljs-keyword">const</span> graph = {\n  <span class="hljs-attr">type</span>: <span class="hljs-string">\'graph\'</span>,\n  data,\n  <span class="hljs-attr">onClick</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">ev, graph</span>) </span>{\n    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'click\'</span>, ev, graph);\n  },\n};\n</code></pre>\n<pre><code>  onClick?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 鼠标单击</span>\n  onAfterchange?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 数据改变后</span>\n  onMousedown?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 鼠标按下</span>\n  onMousemove?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 鼠标移动</span>\n  onMouseleave?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 鼠标离开画布区域</span>\n  onMouseup?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 鼠标抬起</span>\n  onDblclick?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 鼠标双击</span>\n  onTouchstart?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 手指触摸</span>\n  onTouchmove?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 手指移动</span>\n  onTouchend?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 手指离开</span>\n  onPlotenter?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 进入图表时</span>\n  onPlotmove?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 在图表上移动时</span>\n  onPlotleave?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 从图表离开时</span>\n  onPlotclick?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 单击图表时</span>\n  onPlotdblclick?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 双击图表时</span>\n  onDragstart?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 开始拖动时</span>\n  onDrag?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 拖动中</span>\n  onDragend?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 拖动结束时</span>\n</code></pre><h4 id="-">事件回调函数参数</h4>\n<p>ev: dom 节点相关信息\ngraph: 配置参数相关信息</p>\n<h3 id="zoom-">zoom 画布缩放</h3>\n<h4 id="min-number-">min?: number;</h4>\n<p>最小缩放比率</p>\n<h4 id="max-number-">max?: number;</h4>\n<p>最大缩放比率</p>\n<h4 id="current-number-">current?: number;</h4>\n<p>当前缩放比率</p>\n<pre><code class="lang-javascript"><span class="hljs-keyword">const</span> zoom = {\n  <span class="hljs-attr">max</span>: <span class="hljs-number">10</span>,\n  <span class="hljs-attr">min</span>: <span class="hljs-number">1</span>,\n  <span class="hljs-attr">current</span>: <span class="hljs-number">2</span>,\n};\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">App</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{\n  <span class="hljs-keyword">constructor</span>(props) {\n    <span class="hljs-keyword">super</span>(props);\n  }\n  render() {\n    <span class="hljs-keyword">return</span> (\n      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Graph</span> {<span class="hljs-attr">...graph</span>}&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">Zoom</span> {<span class="hljs-attr">...zoom</span>} /&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">Graph</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    );\n  }\n}</span>\n</code></pre>\n<h3 id="node">Node</h3>\n<h4 id="shape-string-">shape?: string;</h4>\n<p>节点形状</p>\n<h4 id="size-number-">size?: number;</h4>\n<p>节点大小</p>\n<h4 id="label-obj-any-">label?: (obj: any) =&gt; {};</h4>\n<p>节点文本</p>\n<h4 id="style-any-">style?: any;</h4>\n<p>节点样式</p>\n<pre><code class="lang-javascript"><span class="hljs-keyword">const</span> node = {\n  <span class="hljs-attr">shape</span>: <span class="hljs-string">\'treeNode\'</span>,\n  <span class="hljs-attr">size</span>: <span class="hljs-number">8</span>,\n  <span class="hljs-attr">label</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">obj</span>) </span>{\n    <span class="hljs-keyword">return</span> obj.name;\n  },\n  <span class="hljs-attr">style</span>: {\n    <span class="hljs-attr">fill</span>: <span class="hljs-string">\'red\'</span>,\n    <span class="hljs-attr">stroke</span>: <span class="hljs-string">\'blue\'</span>,\n  },\n};\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">App</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{\n  <span class="hljs-keyword">constructor</span>(props) {\n    <span class="hljs-keyword">super</span>(props);\n  }\n  render() {\n    <span class="hljs-keyword">return</span> (\n      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Graph</span> {<span class="hljs-attr">...graph</span>}&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">Node</span> {<span class="hljs-attr">...node</span>} /&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">Graph</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    );\n  }\n}</span>\n</code></pre>\n<h3 id="edge">Edge</h3>\n<h4 id="shape-string-">shape?: string;边形状</h4>\n<h4 id="style-any-">style?: any;边样式</h4>\n<pre><code class="lang-javascript"><span class="hljs-keyword">const</span> edge = {\n  <span class="hljs-attr">shape</span>: <span class="hljs-string">\'smooth\'</span>,\n  <span class="hljs-attr">style</span>: {\n    <span class="hljs-attr">stroke</span>: <span class="hljs-string">\'blue\'</span>,\n  },\n};\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">App</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{\n  <span class="hljs-keyword">constructor</span>(props) {\n    <span class="hljs-keyword">super</span>(props);\n  }\n  render() {\n    <span class="hljs-keyword">return</span> (\n      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Graph</span> {<span class="hljs-attr">...graph</span>}&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">Edge</span> {<span class="hljs-attr">...Edge</span>} /&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">Graph</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    );\n  }\n}</span>\n</code></pre>\n<p>详细可见： <a href="https://antv.alipay.com/zh-cn/g6/1.x/api/graph.html">https://antv.alipay.com/zh-cn/g6/1.x/api/graph.html</a></p>\n'},1214:function(module,exports){module.exports='<h1 id="viser-graph-api">Viser-graph 方法 Api</h1>\n<h2 id="layouts">Layouts</h2>\n<p>Layouts 提供如下集中布局，同时也支持自定义布局</p>\n<h4 id="-layouts-compactboxtree">紧凑树 Layouts.CompactBoxTree</h4>\n<pre><code class="lang-javascript"><span class="hljs-keyword">var</span> layout = <span class="hljs-keyword">new</span> Layouts.CompactBoxTree({\n  <span class="hljs-comment">// direction: \'LR\', // 方向（LR/RL/H/TB/BT/V）</span>\n  getHGap: <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getHGap</span><span class="hljs-params">()</span> </span>{\n    <span class="hljs-keyword">return</span> <span class="hljs-number">100</span>; <span class="hljs-comment">// 横向间距</span>\n  },\n  getVGap: <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getVGap</span><span class="hljs-params">()</span> </span>{\n    <span class="hljs-keyword">return</span> <span class="hljs-number">10</span>; <span class="hljs-comment">// 竖向间距</span>\n  },\n});\n</code></pre>\n<p><img src="//cdn.nlark.com/lark/0/2018/png/124533/1533110599036-a9c03524-6ddd-4ffb-a498-4c6b328e64cf.png" width="500px"/></p>\n<h4 id="-layouts-dendrogram">系统树 Layouts.Dendrogram</h4>\n<pre><code class="lang-javascript"><span class="hljs-keyword">var</span> layout = <span class="hljs-keyword">new</span> Layouts.Dendrogram({\n  direction: <span class="hljs-string">\'LR\'</span>,\n  nodeSize: <span class="hljs-number">20</span>,\n  rankSep: <span class="hljs-number">400</span>,\n});\n</code></pre>\n<p><img src="//cdn.nlark.com/lark/0/2018/png/124533/1533110637920-cc576981-0da8-4b86-a362-8a1d85fa2489.png" width="500px"/></p>\n<h4 id="-layouts-indentedtree">生态树 Layouts.IndentedTree</h4>\n<pre><code class="lang-javascript"><span class="hljs-keyword">var</span> layout = <span class="hljs-keyword">new</span> Layouts.IndentedTree({\n  direction: <span class="hljs-string">\'LR\'</span>, <span class="hljs-comment">// 方向（LR/RL/H）</span>\n  indent: <span class="hljs-number">30</span>, <span class="hljs-comment">// 缩进量</span>\n  getVGap: <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getVGap</span><span class="hljs-params">()</span> </span>{\n    <span class="hljs-keyword">return</span> <span class="hljs-number">4</span>; <span class="hljs-comment">// 竖向间距</span>\n  },\n});\n</code></pre>\n<p><img src="//cdn.nlark.com/lark/0/2018/png/124533/1533110689020-a0719ae1-30b2-4565-b2bd-21a2e3accc46.png" width="300px"/></p>\n<h4 id="-layouts-mindmap">脑图：Layouts.Mindmap</h4>\n<pre><code class="lang-javascript"><span class="hljs-keyword">var</span> layout = <span class="hljs-keyword">new</span> Layouts.Mindmap({\n  direction: <span class="hljs-string">\'H\'</span>, <span class="hljs-comment">// 方向（LR/RL/H/TB/BT/V）</span>\n  getHGap: <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getHGap</span><span class="hljs-params">()</span> </span>{\n    <span class="hljs-keyword">return</span> <span class="hljs-number">100</span>; <span class="hljs-comment">// 横向间距</span>\n  },\n  getVGap: <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getVGap</span><span class="hljs-params">()</span> </span>{\n    <span class="hljs-keyword">return</span> <span class="hljs-number">10</span>; <span class="hljs-comment">// 竖向间距</span>\n  },\n});\n</code></pre>\n<p><img src="//cdn.nlark.com/lark/0/2018/png/124533/1533110746761-1770f71e-aa46-4da4-a8fb-d8b2e7c3be29.png" width="500px"/></p>\n<h4 id="layout-">Layout 公共参数列表</h4>\n<pre><code>direction [String] 树布局的方向，默认为LR，可选值为 LR（根节点在左，往右布局） RL（根节点在右，往左布局） H（根节点在中间，水平对称布局）\n   TB（根节点在上，往下布局） BT（根节点在下，往上布局） V（根节点在中间，垂直对称布局）\n   Layout.IndentedTree只有前三个方向，也就是LR／RL／H\ngetHGap [<span class="hljs-function"><span class="hljs-keyword">Function</span></span>|<span class="hljs-keyword">Number</span>] 横向间距，默认<span class="hljs-number">18</span>\ngetVGap [<span class="hljs-function"><span class="hljs-keyword">Function</span></span>|<span class="hljs-keyword">Number</span>] 竖向间距，默认<span class="hljs-number">18</span>\n</code></pre><h4 id="-">特殊参数列表</h4>\n<p>系统树 Dendrogram</p>\n<pre><code>nodeSep  [<span class="hljs-function"><span class="hljs-keyword">Function</span></span>|<span class="hljs-keyword">Number</span>] 节点间距\nnodeSize  [<span class="hljs-function"><span class="hljs-keyword">Function</span></span>|<span class="hljs-keyword">Number</span>] 节点大小\nrankSep  层级间距\nsubTreeSep   子树间隔\n</code></pre><p>生态树 IndentedTree</p>\n<pre><code>indent  [<span class="hljs-function"><span class="hljs-keyword">Function</span></span>|<span class="hljs-keyword">Number</span>] 缩进量\n</code></pre><p>详细可见： <a href="https://antv.alipay.com/zh-cn/g6/1.x/api/layouts.html">https://antv.alipay.com/zh-cn/g6/1.x/api/layouts.html</a></p>\n<h3 id="registernode">registerNode</h3>\n<p>注册新节点</p>\n<pre><code><span class="hljs-regexp">//</span> 普通节点\nregisterNode(name, {\n  draw: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  drawKeyShape:<span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  drawLabel: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  getSize: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  getColor:<span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  getStyle: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  getPath:<span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  getLabel: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  afterDraw: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  enterAnimate: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  leaveAnimate: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  drawText: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  getText: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  anchor: [\n    [ <span class="hljs-number">0</span>, <span class="hljs-number">0.5</span> ],\n    [ <span class="hljs-number">1</span>, <span class="hljs-number">0.5</span> ]\n  ],\n  anchor: {\n    type: <span class="hljs-string">\'rect\'</span>\n  },\n});\n<span class="hljs-regexp">//</span> html节点\nregisterNode(<span class="hljs-string">\'html\'</span>, {\n  cssSize: <span class="hljs-literal">true</span>,\n  draw: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  getHtml: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n});\nregisterNode(<span class="hljs-string">\'treeNode\'</span>, {\n    anchor: [[<span class="hljs-number">0</span>, <span class="hljs-number">0.5</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">0.5</span>]]\n});\n</code></pre><h3 id="registeredge">registerEdge</h3>\n<p>注册边</p>\n<pre><code>registerEdge(name, {\n  draw: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  drawKeyShape:<span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  drawLabel: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  getSize: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  getColor:<span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  getStyle: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  getPath:<span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  getLabel: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  afterDraw:  <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n});\n</code></pre><p>示例：</p>\n<pre><code>registerEdge(<span class="hljs-symbol">\'smooth</span>\', {\n  getPath: <span class="hljs-keyword">function</span> <span class="hljs-title">getPath</span>(item) {\n    var points = item.getPoints();\n    var start = points[<span class="hljs-number">0</span>];\n    var <span class="hljs-keyword">end</span> = points[points.length - <span class="hljs-number">1</span>];\n    var hgap = Math.<span class="hljs-keyword">abs</span>(<span class="hljs-keyword">end</span>.x - start.x);\n    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">end</span>.x &gt; start.x) {\n        <span class="hljs-keyword">return</span> [[<span class="hljs-string">\'M\'</span>, start.x, start.y], [<span class="hljs-string">\'C\'</span>, start.x + hgap / <span class="hljs-number">4</span>, start.y, <span class="hljs-keyword">end</span>.x - hgap / <span class="hljs-number">2</span>, <span class="hljs-keyword">end</span>.y, <span class="hljs-keyword">end</span>.x, <span class="hljs-keyword">end</span>.y]];\n    }\n    <span class="hljs-keyword">return</span> [[<span class="hljs-string">\'M\'</span>, start.x, start.y], [<span class="hljs-string">\'C\'</span>, start.x - hgap / <span class="hljs-number">4</span>, start.y, <span class="hljs-keyword">end</span>.x + hgap / <span class="hljs-number">2</span>, <span class="hljs-keyword">end</span>.y, <span class="hljs-keyword">end</span>.x, <span class="hljs-keyword">end</span>.y]];\n  }\n});\n</code></pre><h3 id="registergroup">registerGroup</h3>\n<p>注册组</p>\n<pre><code>registerGroup(name, {\n  draw: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  drawKeyShape:<span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  drawLabel: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  drawExpanded:  <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  drawCollapsed:  <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  getLabel: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n});\n</code></pre>'},1215:function(module,exports){module.exports=""},1216:function(module,exports){module.exports='<h1 id="axis">Axis</h1>\n<p>坐标轴配置， Axis 抽离为一个单独的组件，不使用 Axis 组件则默认不显示所有坐标轴及相关的信息。</p>\n<h1 id="api">API</h1>\n<h3 id="datakey-string-">dataKey?: string;</h3>\n<ul>\n<li>描述：数据的 key。</li>\n</ul>\n<h3 id="show-boolean-">show?: boolean;</h3>\n<ul>\n<li>描述：当前坐标轴对应数据源中的字段名，当前坐标轴是否需要可见，默认值 true。</li>\n</ul>\n<h3 id="position-string-">position?: string;</h3>\n<ul>\n<li>描述：设置当前坐标轴的摆放位置，可设置的值为 top、bottom、left、right。</li>\n</ul>\n<h3 id="title-ititle-">title?: ITitle;</h3>\n<ul>\n<li>描述：当前坐标轴标题是否需要显示,及其样式配置。\n是否显示 轴的 title 是默认不显示的, 即 title=null，如果需要显示需要将此属性配置为 true。</li>\n</ul>\n<p>类型：</p>\n<pre><code><span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">ITitle</span> {</span>\n  autoRotate?: <span class="hljs-keyword">boolean</span>;  <span class="hljs-comment">// 文本是否需要自动旋转，默认为 true</span>\n  offset?: number;  <span class="hljs-comment">// 数值，设置坐标轴文本 label 距离坐标轴线的距离</span>\n  position?: string; <span class="hljs-comment">// \'start\' | \'center\' | \'end\' // 标题的显示位置（相对于坐标轴线），可取值为 start center end</span>\n  textStyle?: IStyle.ITextStyle;\n  text?: string;\n}\n</code></pre><pre><code><span class="hljs-keyword">interface</span> ITextStyle {\n  fontSize?: <span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>;  <span class="hljs-comment">// 文本大小</span>\n  fontFamily?: <span class="hljs-built_in">string</span>; <span class="hljs-comment">// 文本family</span>\n  fontWeight?: <span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>; <span class="hljs-comment">// 文本粗细</span>\n  textAlign?: <span class="hljs-built_in">string</span>;  <span class="hljs-comment">// 文本对齐方向，可取值为： start middle end</span>\n  fill?: <span class="hljs-built_in">string</span>; <span class="hljs-comment">// 文本的颜色</span>\n  lineHeight?: <span class="hljs-built_in">number</span>;\n  textBaseline?: <span class="hljs-built_in">string</span>; <span class="hljs-comment">// 文本基准线，可取 top middle bottom，默认为middle</span>\n  rotate?: <span class="hljs-built_in">number</span>; <span class="hljs-comment">// 文本旋转角度，以角度为单位，仅当 autoRotate 为 false 时生效</span>\n  shadowBlur?: <span class="hljs-built_in">number</span>;\n  shadowColor?: <span class="hljs-built_in">string</span>;\n}\n</code></pre><h3 id="tick-iaxistick-">tick?: IAxisTick;</h3>\n<ul>\n<li>描述：设置坐标轴上刻度点。如果该属性值为 null 则表示不展示。</li>\n</ul>\n<p>类型定义：</p>\n<pre><code><span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">IAxisTick</span> {</span>\n  ticks?: number[];   <span class="hljs-comment">// 用于指定坐标轴上刻度点的文本信息，当用户设置了 ticks 就会按照 ticks 的个数和文本来显示</span>\n  tickCount?: number; <span class="hljs-comment">// 设置坐标轴上刻度点的个数</span>\n  tickInterval?: number;  <span class="hljs-comment">// \b刻度间隔</span>\n}\n</code></pre><h3 id="subtick-iaxistick-">subTick?: IAxisTick;</h3>\n<ul>\n<li>描述：设置坐标轴上刻度点子项。如果该属性值为 null 则表示不展示。</li>\n</ul>\n<h3 id="grid-iaxisgrid-">grid?: IAxisGrid;</h3>\n<ul>\n<li>描述：设置坐标轴网格线的样式，网格线与坐标轴线垂直。如果该属性值为 null 则表示不展示。</li>\n</ul>\n<h3 id="zindex-number-">zIndex?: number;</h3>\n<ul>\n<li>描述：绘制顺序，用于控制图层的顺序，避免遮盖。</li>\n</ul>\n<h3 id="label-boolean-iaxislabel-">label?: boolean | IAxisLabel;</h3>\n<ul>\n<li>描述：设置坐标轴文本的样式。如果该属性值为 null 则表示不展示坐标轴文本。</li>\n</ul>\n<h3 id="line-istyle-ilinestyle-">line?: IStyle.ILineStyle;</h3>\n<ul>\n<li>描述：坐标轴样式。</li>\n</ul>\n<p>类型定义：</p>\n<pre><code><span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">ILineStyle</span> {</span>\n  stroke?: string;  <span class="hljs-comment">// 坐标轴线的颜色</span>\n  strokeOpacity?: number; <span class="hljs-comment">// 坐标轴线的透明度，数值范围为 0 - 1</span>\n  lineWidth?: number;  <span class="hljs-comment">// 设置坐标轴线的粗细</span>\n  lineHeight?: number;\n  lineDash?: number[]; <span class="hljs-comment">// 设置虚线的样式，如 [2, 3]第一个用来表示实线的像素，第二个用来表示空白的像素。如果提供了奇数个值，则这个值的数列重复一次，从而变成偶数个值</span>\n  length?: number; <span class="hljs-comment">// 仅用于刻度线，表示刻度线长度，可以为负值（表示反方向渲染）</span>\n  textAlign?: string;\n}\n</code></pre><h3 id="tickline-istyle-ilinestyle-">tickLine?: IStyle.ILineStyle;</h3>\n<ul>\n<li>描述：坐标轴刻度样式。</li>\n</ul>\n<h3 id="subtickcount-number-">subTickCount?: number;</h3>\n<ul>\n<li>描述：坐标轴子刻度个数。</li>\n</ul>\n<h3 id="subtickline-istyle-ilinestyle-">subTickLine?: IStyle.ILineStyle;</h3>\n<ul>\n<li>描述：坐标轴子刻度样式。</li>\n</ul>\n'},1217:function(module,exports){module.exports='<h1 id="axis">Axis</h1>\n<p>Coordinate axis configuration, Axis is extracted as a separate component, without Axis components, all coordinate axes and related information are not displayed by default.</p>\n<h1 id="api">API</h1>\n<h3 id="datakey-string-">dataKey?: string;</h3>\n<ul>\n<li>Description: the key of data.</li>\n</ul>\n<h3 id="show-boolean-">show?: boolean;</h3>\n<ul>\n<li>Description: The current coordinate axis corresponds to the field name in the data source. Whether the current coordinate axis needs to be visible or not, the default value is true.</li>\n</ul>\n<h3 id="position-string-">position?: string;</h3>\n<ul>\n<li>Description: The position of the current axis is set, and the values can be set at top, bottom, left and right.</li>\n</ul>\n<h3 id="title-ititle-">title?: ITitle;</h3>\n<ul>\n<li>Description: Whether the current axis title needs to be displayed and its style configuration,the default value is null.If you need to display, you need to configure this property to be true.</li>\n</ul>\n<p>Type:</p>\n<pre><code><span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">ITitle</span> {</span>\n  autoRotate?: <span class="hljs-keyword">boolean</span>;  <span class="hljs-comment">// Whether the text needs automatic rotation, defaults to true</span>\n  offset?: number;  <span class="hljs-comment">// Set the distance from coordinate axis label to the axis of the coordinate.</span>\n  position?: string; <span class="hljs-comment">// \'start\' | \'center\' | \'end\' // The display position of the title (relative to the axis of coordinates) can be taken as start center end.</span>\n  textStyle?: IStyle.ITextStyle;\n  text?: string;\n}\n</code></pre><pre><code><span class="hljs-keyword">interface</span> ITextStyle {\n  fontSize?: <span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>;  <span class="hljs-comment">// Text size</span>\n  fontFamily?: <span class="hljs-built_in">string</span>; <span class="hljs-comment">// Text family</span>\n  fontWeight?: <span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>; <span class="hljs-comment">// Text bold</span>\n  textAlign?: <span class="hljs-built_in">string</span>;  <span class="hljs-comment">// The alignment of the text can be taken as: start middle end</span>\n  fill?: <span class="hljs-built_in">string</span>; <span class="hljs-comment">// Text color</span>\n  lineHeight?: <span class="hljs-built_in">number</span>;\n  textBaseline?: <span class="hljs-built_in">string</span>; <span class="hljs-comment">// The text baseline can be taken as: top middle bottom, and the default is middle</span>\n  rotate?: <span class="hljs-built_in">number</span>; <span class="hljs-comment">// The rotation angle of the text is taken as an angle, only when autoRotate is false.</span>\n  shadowBlur?: <span class="hljs-built_in">number</span>;\n  shadowColor?: <span class="hljs-built_in">string</span>;\n}\n</code></pre><h3 id="tick-iaxistick-">tick?: IAxisTick;</h3>\n<ul>\n<li>Description: Set the tick points on the coordinate axis. If the attribute value is null, it means that it is not displayed.</li>\n</ul>\n<p>类型定义：</p>\n<pre><code><span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">IAxisTick</span> {</span>\n  ticks?: number[];   <span class="hljs-comment">// Text information used to specify the tick points on the coordinate axis, and when the user sets the ticks, it will be displayed as the number and text of the ticks.</span>\n  tickCount?: number; <span class="hljs-comment">// Set the number of tick points on the coordinate axis.</span>\n  tickInterval?: number;  <span class="hljs-comment">// Tick interval</span>\n}\n</code></pre><h3 id="subtick-iaxistick-">subTick?: IAxisTick;</h3>\n<ul>\n<li>Description: Set the sub tick points on the coordinate axis. If the attribute value is null, it means that it is not displayed.</li>\n</ul>\n<h3 id="grid-iaxisgrid-">grid?: IAxisGrid;</h3>\n<ul>\n<li>Description: Set the grid pattern of the coordinate axis, and the grid line is perpendicular to the axis of the coordinate. If the attribute value is null, it means that it is not displayed.</li>\n</ul>\n<h3 id="zindex-number-">zIndex?: number;</h3>\n<ul>\n<li>Description: The order of drawing which is used to control the order of layers and avoid covering.</li>\n</ul>\n<h3 id="label-boolean-iaxislabel-">label?: boolean | IAxisLabel;</h3>\n<ul>\n<li>Description: Set the style of the axis text. If the attribute value is null, it means that the text of the coordinate axis is not displayed.</li>\n</ul>\n<h3 id="line-istyle-ilinestyle-">line?: IStyle.ILineStyle;</h3>\n<ul>\n<li>Description: Axis style.</li>\n</ul>\n<p>Type：</p>\n<pre><code><span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">ILineStyle</span> {</span>\n  stroke?: string;  <span class="hljs-comment">// Axis color</span>\n  strokeOpacity?: number; <span class="hljs-comment">// Axis opciaty,the number range is 0-1.</span>\n  lineWidth?: number;  <span class="hljs-comment">// Thickness of coordinate axis</span>\n  lineHeight?: number;\n  lineDash?: number[]; <span class="hljs-comment">// The style of dashed, such as [2,3], which the first parameter is to represent the pixel of solid line and the second is to represent the pixelof blank line. If odd numbers are provided, the numbers will be repeated once, thus becoming even numbers.</span>\n  length?: number; <span class="hljs-comment">// Used only in tick lines, indicating the length of the tick line, which can be negative(representing reverse direction rendering).</span>\n  textAlign?: string;\n}\n</code></pre><h3 id="tickline-istyle-ilinestyle-">tickLine?: IStyle.ILineStyle;</h3>\n<ul>\n<li>Description: Axis tick style.</li>\n</ul>\n<h3 id="subtickcount-number-">subTickCount?: number;</h3>\n<ul>\n<li>Description: The count of axis sub tick.</li>\n</ul>\n<h3 id="subtickline-istyle-ilinestyle-">subTickLine?: IStyle.ILineStyle;</h3>\n<ul>\n<li>Description: Axis sub tick style.</li>\n</ul>\n'},1218:function(module,exports){module.exports='<h1 id="chart">Chart</h1>\n<p>图表组件，内部生成了一个 chart 实例，包含众多子组件的加载和更新。</p>\n<h1 id="api">API</h1>\n<h3 id="height-number-">height?: number;</h3>\n<ul>\n<li>描述：指定图表的高度，单位为 &#39;px&#39;。</li>\n</ul>\n<h3 id="width-number-">width?: number;</h3>\n<ul>\n<li>描述：指定图表的宽度，默认单位为 &#39;px&#39;，当 forceFit: true 时宽度不生效。</li>\n</ul>\n<h3 id="animate-boolean-object-">animate?: boolean | object;</h3>\n<ul>\n<li>描述：图表动画开关，默认为 true，即开启动画。</li>\n</ul>\n<h3 id="forcefit-boolean-">forceFit?: boolean;</h3>\n<ul>\n<li>描述：图表的宽度自适应开关，默认为 false，设置为 true 时表示自动取 dom（实例容器）的宽度。</li>\n</ul>\n<h3 id="background-ibackground-">background?: IBackground;</h3>\n<ul>\n<li>描述：设置图表整体的边框和背景样式，是一个对象，</li>\n</ul>\n<p>Object 类型 IBackground</p>\n<pre><code><span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">IBackground</span> {</span>\n  stroke?: string;\n  strokeOpacity?: number;\n  lineWidth?: number;\n  fill?: string;\n  fillOpactiy?: number;\n  radius?: number;\n}\n</code></pre><h3 id="plotbackground-ibackground-">plotBackground?: IBackground;</h3>\n<ul>\n<li>描述：图表绘图区域的边框和背景样式，是一个对象，</li>\n</ul>\n<p>类型 IBackground</p>\n<pre><code><span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">IBackground</span> {</span>\n  stroke?: string;\n  strokeOpacity?: number;\n  lineWidth?: number;\n  fill?: string;\n  fillOpactiy?: number;\n  radius?: number;\n}\n</code></pre><h3 id="padding-number-object-number-string-">padding?: number | object | number[] | string;</h3>\n<ul>\n<li>描述：图表内边距。有如下配置格式。</li>\n</ul>\n<p>padding 为数字以及数组类型时使用方法同 CSS 盒模型。</p>\n<p>padding 中存在 &#39;auto&#39;时会自动计算边框，目前仅考虑 axis 和 legend 占用的边框。</p>\n<p>示例：</p>\n<pre><code><span class="hljs-string">padding:</span> [ <span class="hljs-number">20</span>, <span class="hljs-number">30</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>]\n<span class="hljs-string">padding:</span> <span class="hljs-number">20</span>\n<span class="hljs-string">padding:</span> { <span class="hljs-string">top:</span> <span class="hljs-number">20</span>, <span class="hljs-string">right:</span> <span class="hljs-number">30</span>, <span class="hljs-string">bottom:</span> <span class="hljs-number">20</span>, <span class="hljs-string">left:</span> <span class="hljs-number">30</span> }\n<span class="hljs-string">padding:</span> <span class="hljs-string">\'auto\'</span>\n<span class="hljs-string">padding:</span> [<span class="hljs-number">20</span>, <span class="hljs-string">\'auto\'</span>, <span class="hljs-number">30</span>, <span class="hljs-string">\'auto\'</span>] <span class="hljs-comment">// 暂未支持</span>\n</code></pre><p>暂时不支持设置百分比，如 padding: [ &#39;20%&#39;, &#39;30%&#39; ]，该百分比相对于整个图表的宽高。</p>\n<h3 id="theme-string-">theme?: string;</h3>\n<ul>\n<li>描述：主题，目前支持 &#39;default&#39;、&#39;dark&#39; , 可采用注册的方式注册新主题</li>\n</ul>\n<h3 id="renderer-string-">renderer?: string;</h3>\n<ul>\n<li>描述：指定图表的渲染方式，自 viser 3.2 版本开始，支持 chart 级别使用 svg 渲染。\n默认值: canvas,可选值 svg.</li>\n</ul>\n<p>示例：</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-name">Chart</span> <span class="hljs-attr">height</span>=<span class="hljs-string">{400}</span> <span class="hljs-attr">data</span>=<span class="hljs-string">{data}</span> <span class="hljs-attr">renderer</span>=<span class="hljs-string">\'svg\'</span> /&gt;</span>\n</code></pre><h3 id="data">data</h3>\n<ul>\n<li>类型：Array/DataSet</li>\n<li>描述：设置图表的数据源，data 是一个包含 JSON 对象的数组或者 DataSet.View 对象。</li>\n</ul>\n<h3 id="scale">scale</h3>\n<ul>\n<li>类型：Object</li>\n<li>描述：配置数据比例尺，该配置会影响数据在图表中的展示方式。</li>\n</ul>\n<h1 id="-">事件</h1>\n<p>统一传参 (ev: any, chart: any) =&gt; void</p>\n<h4 id="onmousedown">onMouseDown</h4>\n<h4 id="onmousemove">onMouseMove</h4>\n<h4 id="onmouseleave">onMouseLeave</h4>\n<h4 id="onmouseup">onMouseUp</h4>\n<h4 id="onclick">onClick</h4>\n<h4 id="ondbclick">onDbClick</h4>\n<h4 id="ontouchstart">onTouchStart</h4>\n<h4 id="ontouchmove">onTouchMove</h4>\n<h4 id="ontouchend">onTouchEnd</h4>\n<h4 id="onplotenter">onPlotEnter</h4>\n<h4 id="onplotmove">onPlotMove</h4>\n<h4 id="onplotleave">onPlotLeave</h4>\n<h4 id="onplotclick">onPlotClick</h4>\n<h4 id="onplotdbclick">onPlotDbClick</h4>\n'},1219:function(module,exports){module.exports='<h1 id="chart">Chart</h1>\n<p>The Chart component generates a chart instance inside, which contains loading and updating of many sub components.</p>\n<h1 id="api">API</h1>\n<h3 id="height-number-">height?: number;</h3>\n<ul>\n<li>Description: Specifies the height of the chart, in the form of &#39;px&#39;.</li>\n</ul>\n<h3 id="width-number-">width?: number;</h3>\n<ul>\n<li>Description: Specifies the width of the chart, in the form of &#39;px&#39;,the width is not effective when forceFit is true.</li>\n</ul>\n<h3 id="animate-boolean-object-">animate?: boolean | object;</h3>\n<ul>\n<li>Description: The graphic animation switch is true by default, that is to open animation.</li>\n</ul>\n<h3 id="forcefit-boolean-">forceFit?: boolean;</h3>\n<ul>\n<li>Description: The width self-adapting switch of the chart, which defaults to false, is set to true to indicate the width of the automatic DOM (instance container).</li>\n</ul>\n<h3 id="background-ibackground-">background?: IBackground;</h3>\n<ul>\n<li>Description: Set the overall frame and background style of the chart,the type of that is a object,</li>\n</ul>\n<p>Object type IBackground</p>\n<pre><code><span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">IBackground</span> {</span>\n  stroke?: string;\n  strokeOpacity?: number;\n  lineWidth?: number;\n  fill?: string;\n  fillOpactiy?: number;\n  radius?: number;\n}\n</code></pre><h3 id="plotbackground-ibackground-">plotBackground?: IBackground;</h3>\n<ul>\n<li>Description: The border and background styles of the chart drawing area,the type of that is a object,</li>\n</ul>\n<p>Object type IBackground</p>\n<pre><code><span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">IBackground</span> {</span>\n  stroke?: string;\n  strokeOpacity?: number;\n  lineWidth?: number;\n  fill?: string;\n  fillOpactiy?: number;\n  radius?: number;\n}\n</code></pre><h3 id="padding-number-object-number-string-">padding?: number | object | number[] | string;</h3>\n<ul>\n<li>Description: Chart paddings,which has the following configuration format.</li>\n</ul>\n<p>The usage methods is similar as CSS box models when padding is numbers or array type.</p>\n<p>Borders are automatically computed when &#39;auto&#39;is present in padding, and only the borders occupied by axis and legend are currently considered.</p>\n<p>Examples:</p>\n<pre><code><span class="hljs-string">padding:</span> [ <span class="hljs-number">20</span>, <span class="hljs-number">30</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>]\n<span class="hljs-string">padding:</span> <span class="hljs-number">20</span>\n<span class="hljs-string">padding:</span> { <span class="hljs-string">top:</span> <span class="hljs-number">20</span>, <span class="hljs-string">right:</span> <span class="hljs-number">30</span>, <span class="hljs-string">bottom:</span> <span class="hljs-number">20</span>, <span class="hljs-string">left:</span> <span class="hljs-number">30</span> }\n<span class="hljs-string">padding:</span> <span class="hljs-string">\'auto\'</span>\n<span class="hljs-string">padding:</span> [<span class="hljs-number">20</span>, <span class="hljs-string">\'auto\'</span>, <span class="hljs-number">30</span>, <span class="hljs-string">\'auto\'</span>] <span class="hljs-comment">// not support temporary</span>\n\n</code></pre><p>Setting percentages, such as padding: [20%&#39;, 30%], are not supported for the time being, which is relative to the width of the entire chart.</p>\n<h3 id="theme-string-">theme?: string;</h3>\n<ul>\n<li>Description: theme, At present,&#39;default&#39; and &#39;dark&#39; are supported, and new theme can be registered by registration.</li>\n</ul>\n<h3 id="renderer-string-">renderer?: string;</h3>\n<ul>\n<li>Description: Specifies the rendering mode of the chart, starting with viser 3.2, and supporting chart level using SVG rendering.\nDefault value: canvas, optional value svg.</li>\n</ul>\n<p>Examples:</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-name">Chart</span> <span class="hljs-attr">height</span>=<span class="hljs-string">{400}</span> <span class="hljs-attr">data</span>=<span class="hljs-string">{data}</span> <span class="hljs-attr">renderer</span>=<span class="hljs-string">\'svg\'</span> /&gt;</span>\n</code></pre><h3 id="data">data</h3>\n<ul>\n<li>Type: Array/DataSet</li>\n<li>Description: Set the data source for the chart. Data is an array or DataSet.View object that contains JSON objects.</li>\n</ul>\n<h3 id="scale">scale</h3>\n<ul>\n<li>Type: Object</li>\n<li>Description: Configure the data scale, which will affect the way the data is displayed in the chart.</li>\n</ul>\n<h3 id="event">event</h3>\n<p>Transfer parameter (ev: any, chart: any) =&gt; void</p>\n<h4 id="onmousedown">onMouseDown</h4>\n<h4 id="onmousemove">onMouseMove</h4>\n<h4 id="onmouseleave">onMouseLeave</h4>\n<h4 id="onmouseup">onMouseUp</h4>\n<h4 id="onclick">onClick</h4>\n<h4 id="ondbclick">onDbClick</h4>\n<h4 id="ontouchstart">onTouchStart</h4>\n<h4 id="ontouchmove">onTouchMove</h4>\n<h4 id="ontouchend">onTouchEnd</h4>\n<h4 id="onplotenter">onPlotEnter</h4>\n<h4 id="onplotmove">onPlotMove</h4>\n<h4 id="onplotleave">onPlotLeave</h4>\n<h4 id="onplotclick">onPlotClick</h4>\n<h4 id="onplotdbclick">onPlotDbClick</h4>\n'},122:function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function registerDefaultHelpers(instance){_helpersBlockHelperMissing2.default(instance),_helpersEach2.default(instance),_helpersHelperMissing2.default(instance),_helpersIf2.default(instance),_helpersLog2.default(instance),_helpersLookup2.default(instance),_helpersWith2.default(instance)}exports.__esModule=!0,exports.registerDefaultHelpers=registerDefaultHelpers;var _helpersBlockHelperMissing=__webpack_require__(123),_helpersBlockHelperMissing2=_interopRequireDefault(_helpersBlockHelperMissing),_helpersEach=__webpack_require__(124),_helpersEach2=_interopRequireDefault(_helpersEach),_helpersHelperMissing=__webpack_require__(125),_helpersHelperMissing2=_interopRequireDefault(_helpersHelperMissing),_helpersIf=__webpack_require__(126),_helpersIf2=_interopRequireDefault(_helpersIf),_helpersLog=__webpack_require__(127),_helpersLog2=_interopRequireDefault(_helpersLog),_helpersLookup=__webpack_require__(128),_helpersLookup2=_interopRequireDefault(_helpersLookup),_helpersWith=__webpack_require__(129),_helpersWith2=_interopRequireDefault(_helpersWith)},1220:function(module,exports){module.exports='<h1 id="coord">Coord</h1>\n<p>坐标系组件。 坐标系是将两种位置标度结合在一起组成的 2 维定位系统，描述了数据是如何映射到图形所在的平面。坐标系抽象为组件，并且包含两种类型坐标系极坐标系（polar、theta、helix 均属于极坐标）和笛卡尔坐标系，目前所有的坐标系均是 2 维的。</p>\n<h1 id="api">API</h1>\n<p>坐标系组件分为两类直角坐标系、极坐标系。两者的 api 是不同的。详细如下：</p>\n<pre><code><span class="hljs-comment">// 直角坐标系</span>\n<span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">IRectCoord</span> {</span>\n  type?: <span class="hljs-string">\'rect\'</span>;\n  direction?: string;\n}\n\n<span class="hljs-comment">// 极坐标系</span>\n<span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">IPolarCoord</span> {</span>\n  type?: <span class="hljs-string">\'polar\'</span> | <span class="hljs-string">\'theta\'</span> | <span class="hljs-string">\'helix\'</span>;\n  direction?: string;\n  radius?: number;\n  innerRadius?: number;\n  startAngle?: number;\n  endAngle?: number;\n}\n</code></pre><h3 id="type-polar-theta-helix-rect-">type?: &#39;polar&#39; | &#39;theta&#39; | &#39;helix&#39; | &#39;rect&#39;;</h3>\n<ul>\n<li>描述：坐标系类型不同类型的坐标系所支持的配置属性也不一样。具体见各类型属性说明。</li>\n</ul>\n<p>支持的坐标系有：</p>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>rect</td>\n<td>默认类型，直角坐标系，由 x, y 两个垂直的维度构成。</td>\n</tr>\n<tr>\n<td>polar</td>\n<td>极坐标系，由角度和半径 2 个维度构成。</td>\n</tr>\n<tr>\n<td>theta</td>\n<td>一种半径固定的极坐标系，常用于饼图。</td>\n</tr>\n<tr>\n<td>helix</td>\n<td>螺旋坐标系，基于阿基米德螺旋线。</td>\n</tr>\n</tbody>\n</table>\n<h3 id="direction-string-">direction?: string;</h3>\n<ul>\n<li>描述：根据常见坐标系进行分类。</li>\n</ul>\n<p>直角坐标系映射关系如下：</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">direction</th>\n<th style="text-align:left">配置</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">BL(默认）</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;);</td>\n</tr>\n<tr>\n<td style="text-align:left">BR</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).scale(-1, 1);</td>\n</tr>\n<tr>\n<td style="text-align:left">LT</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).transpose().scale(1, -1);</td>\n</tr>\n<tr>\n<td style="text-align:left">LB</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).transpose();</td>\n</tr>\n<tr>\n<td style="text-align:left">RB</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).transpose().reflect();</td>\n</tr>\n<tr>\n<td style="text-align:left">RT</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).transpose().reflect().scale(-1, 1);</td>\n</tr>\n<tr>\n<td style="text-align:left">TL</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).reflect();</td>\n</tr>\n<tr>\n<td style="text-align:left">TR</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).reflect().scale(-1, 1);</td>\n</tr>\n</tbody>\n</table>\n<p>同理，对于极坐标系我们也提供了 4 种方向，最主要是 <code>rotate</code> 和 <code>reverse</code> 两种，具体映射关系如下：</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">direction</th>\n<th style="text-align:left">配置</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">rotate</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).transpose();</td>\n</tr>\n<tr>\n<td style="text-align:left">xReverse</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).reflect(&#39;x&#39;);</td>\n</tr>\n<tr>\n<td style="text-align:left">yReverse</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).reflect(&#39;y&#39;);</td>\n</tr>\n<tr>\n<td style="text-align:left">reverse</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).reflect();</td>\n</tr>\n</tbody>\n</table>\n<h3 id="radius-number-">radius?: number;</h3>\n<ul>\n<li>描述：设置半径，值范围为 0 至 1</li>\n</ul>\n<h3 id="innerradius-number-">innerRadius?: number;</h3>\n<ul>\n<li>描述：空心圆的半径，值范围为 0 至 1</li>\n</ul>\n<h3 id="startangle-number-">startAngle?: number;</h3>\n<ul>\n<li>描述：极坐标的起始角度，单位为弧度</li>\n</ul>\n<h3 id="endangle-number-">endAngle?: number;</h3>\n<ul>\n<li>描述：极坐标的结束角度，单位为弧度</li>\n</ul>\n'},1221:function(module,exports){module.exports='<h1 id="coord">Coord</h1>\n<p>The Coord components. Coordinate systems is a 2-D positioning system which combines two position scales and describes how the data is mapped to the plane where the graph is located. Coordinate systems is abstracted as a component and contains two types of polar coordinate systems (polar, theta, helix belong to polar coordinates) and Cartesian coordinate systems. At present, all coordinate systems are 2-dimensional.</p>\n<h1 id="api">API</h1>\n<p>The Coord components are divided into two types: rectangular coordinate system and polar coordinate system. The API of the two is different. The details are as follows:</p>\n<pre><code><span class="hljs-comment">// Rectangular coordinate system</span>\n<span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">IRectCoord</span> {</span>\n  type?: <span class="hljs-string">\'rect\'</span>;\n  direction?: string;\n}\n\n<span class="hljs-comment">// Polar coordinate system</span>\n<span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">IPolarCoord</span> {</span>\n  type?: <span class="hljs-string">\'polar\'</span> | <span class="hljs-string">\'theta\'</span> | <span class="hljs-string">\'helix\'</span>;\n  direction?: string;\n  radius?: number;\n  innerRadius?: number;\n  startAngle?: number;\n  endAngle?: number;\n}\n</code></pre><h3 id="type-polar-theta-helix-rect-">type?: &#39;polar&#39; | &#39;theta&#39; | &#39;helix&#39; | &#39;rect&#39;;</h3>\n<ul>\n<li>Description: The coordinate systems supported by different types of coordinate systems have different configuration properties. See specific types of property descriptions.</li>\n</ul>\n<p>The supporting coordinate systems are:</p>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Illustration</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>rect</td>\n<td>default,rectangular coordinate system,which consists of two vertical dimensions, X and Y.</td>\n</tr>\n<tr>\n<td>polar</td>\n<td>polar coordinate system,which consists of 2 dimensions: angle and radius.</td>\n</tr>\n<tr>\n<td>theta</td>\n<td>a polar coordinate system with fixed radius, commonly used in pie charts.</td>\n</tr>\n<tr>\n<td>helix</td>\n<td>the spiral coordinate system which is based on Archimedes helix.</td>\n</tr>\n</tbody>\n</table>\n<h3 id="direction-string-">direction?: string;</h3>\n<ul>\n<li>Description: Classified according to common coordinate system.</li>\n</ul>\n<p>The mapping relations in rectangular coordinates are as follows:</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">direction</th>\n<th style="text-align:left">config</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">BL(default)</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;);</td>\n</tr>\n<tr>\n<td style="text-align:left">BR</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).scale(-1, 1);</td>\n</tr>\n<tr>\n<td style="text-align:left">LT</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).transpose().scale(1, -1);</td>\n</tr>\n<tr>\n<td style="text-align:left">LB</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).transpose();</td>\n</tr>\n<tr>\n<td style="text-align:left">RB</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).transpose().reflect();</td>\n</tr>\n<tr>\n<td style="text-align:left">RT</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).transpose().reflect().scale(-1, 1);</td>\n</tr>\n<tr>\n<td style="text-align:left">TL</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).reflect();</td>\n</tr>\n<tr>\n<td style="text-align:left">TR</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).reflect().scale(-1, 1);</td>\n</tr>\n</tbody>\n</table>\n<p>Similarly, we also provide four directions for polar coordinate systems, the most important of which are <code>rotate</code> and <code>reverse</code>. The mapping relations are as follows:</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">direction</th>\n<th style="text-align:left">config</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">rotate</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).transpose();</td>\n</tr>\n<tr>\n<td style="text-align:left">xReverse</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).reflect(&#39;x&#39;);</td>\n</tr>\n<tr>\n<td style="text-align:left">yReverse</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).reflect(&#39;y&#39;);</td>\n</tr>\n<tr>\n<td style="text-align:left">reverse</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).reflect();</td>\n</tr>\n</tbody>\n</table>\n<h3 id="radius-number-">radius?: number;</h3>\n<ul>\n<li>Description: Set the radius range from 0 to 1.</li>\n</ul>\n<h3 id="innerradius-number-">innerRadius?: number;</h3>\n<ul>\n<li>Description: The radius of a hollow circle ranges from 0 to 1.</li>\n</ul>\n<h3 id="startangle-number-">startAngle?: number;</h3>\n<ul>\n<li>Description: The starting angle of polar coordinates is radian.</li>\n</ul>\n<h3 id="endangle-number-">endAngle?: number;</h3>\n<ul>\n<li>Description: The ending angle of polar coordinates is radian.</li>\n</ul>\n'},1222:function(module,exports){module.exports='<h1 id="facet">Facet</h1>\n<p>分面，将一份数据按照某个维度分隔成若干子集，然后创建一个图表的矩阵，将每一个数据子集绘制到图形矩阵的窗格中。</p>\n<p>总结起来，分面其实提供了两个功能：</p>\n<p>按照指定的维度划分数据集；\n对图表进行排版。\n对于探索型数据分析来说，分面是一个强大有力的工具，能帮你迅速地分析出数据各个子集模式的异同。</p>\n<h1 id="api">API</h1>\n<h3 id="type-string-">type: string;</h3>\n<ul>\n<li>描述：分面类型，&#39;rect&#39; | &#39;list&#39; | &#39;circle&#39; | &#39;tree&#39; | &#39;mirror&#39;。</li>\n</ul>\n<p>支持的分面类型如下表所示：</p>\n<table>\n<thead>\n<tr>\n<th>分面类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>rect</td>\n<td>默认类型，指定 2 个维度作为行列，形成图表的矩阵。</td>\n</tr>\n<tr>\n<td>list</td>\n<td>指定一个维度，可以指定一行有几列，超出自动换行。</td>\n</tr>\n<tr>\n<td>circle</td>\n<td>指定一个维度，沿着圆分布。</td>\n</tr>\n<tr>\n<td>tree</td>\n<td>指定多个维度，每个维度作为树的一级，展开多层图表。</td>\n</tr>\n<tr>\n<td>mirror</td>\n<td>指定一个维度，形成镜像图表。</td>\n</tr>\n<tr>\n<td>matrix</td>\n<td>指定一个维度，形成矩阵分面。</td>\n</tr>\n</tbody>\n</table>\n<h3 id="fields-string-">fields?: string[];</h3>\n<ul>\n<li>描述：设定数据划分的维度，是数据的字段名，包含多个维度时使用数组传入。不同 type 的分面可传入字段个数不同，</li>\n</ul>\n<h3 id="cols-number-">cols?: number;</h3>\n<ul>\n<li>描述：指定每行可显示分面的个数，超出时会自动换行。</li>\n</ul>\n<h3 id="rows-number-">rows?: number;</h3>\n<ul>\n<li>描述：指定每列可显示分面的个数，超出时会自动换行。</li>\n</ul>\n<h3 id="colfield-string-string-">colField?: string | string[];</h3>\n<ul>\n<li>描述：</li>\n</ul>\n<h3 id="rowfield-string-string-">rowField?: string | string[];</h3>\n<ul>\n<li>描述：</li>\n</ul>\n<h3 id="colvalue-number-">colValue?: number;</h3>\n<ul>\n<li>描述：</li>\n</ul>\n<h3 id="rowvalue-number-">rowValue?: number;</h3>\n<ul>\n<li>描述：</li>\n</ul>\n<h3 id="colindex-number-">colIndex?: number;</h3>\n<ul>\n<li>描述：第几行</li>\n</ul>\n<h3 id="rowindex-number-">rowIndex?: number;</h3>\n<ul>\n<li>描述：第几列</li>\n</ul>\n<h3 id="showtitle-boolean-">showTitle?: boolean;</h3>\n<ul>\n<li>描述：显示标题</li>\n</ul>\n<h3 id="coltitle-icoltitleprops-">colTitle?: IColTitleProps;</h3>\n<ul>\n<li>描述：列标题</li>\n</ul>\n<pre><code><span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">IColTitleProps</span> {</span>\n  offsetY?: number;\n  style?: IStyle.ITextStyle;\n}\n</code></pre><h3 id="rowtitle-irowtitleprops-">rowTitle?: IRowTitleProps;</h3>\n<ul>\n<li>描述：行标题</li>\n</ul>\n<pre><code><span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">IRowTitleProps</span> {</span>\n  offsetX?: number;\n  style?: IStyle.ITextStyle;\n}\n</code></pre><h3 id="autosetaxis-boolean-">autoSetAxis?: boolean;</h3>\n<ul>\n<li>描述：自动设置坐标轴的文本，避免重复和遮挡</li>\n</ul>\n<h3 id="padding-number-number-">padding?: number | number[];</h3>\n<ul>\n<li>描述：每个 view 之间的间距</li>\n</ul>\n<h3 id="transpose-boolean-">transpose?: boolean;</h3>\n<ul>\n<li>描述：transpose 属性为 true，可以将镜像分面翻转。</li>\n</ul>\n<h3 id="line-istyle-ilinestyle-">line?: IStyle.ILineStyle;</h3>\n<ul>\n<li>描述：用于配置线的显示属性。</li>\n</ul>\n<h3 id="linesmooth-boolean-">lineSmooth?: boolean;</h3>\n<ul>\n<li>描述：各个树节点的连接线是否是平滑的曲线，默认为 false。</li>\n</ul>\n<h3 id="views-any-">views?: any;</h3>\n<ul>\n<li>描述：</li>\n</ul>\n<h3 id="eachview-views-any-facet-any-void-">eachView?: (views: any, facet: any) =&gt; void;</h3>\n<ul>\n<li>描述：</li>\n</ul>\n<h2 id="-">通用依赖接口</h2>\n<h3 id="-">文字样式</h3>\n<pre><code><span class="hljs-keyword">interface</span> ITextStyle {\n  fontSize?: <span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>;\n  fontFamily?: <span class="hljs-built_in">string</span>;\n  fontWeight?: <span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>;\n  textAlign?: <span class="hljs-built_in">string</span>;\n  fill?: <span class="hljs-built_in">string</span>;\n  lineHeight?: <span class="hljs-built_in">number</span>;\n  textBaseline?: <span class="hljs-built_in">string</span>;\n  rotate?: <span class="hljs-built_in">number</span>;\n  shadowBlur?: <span class="hljs-built_in">number</span>;\n  shadowColor?: <span class="hljs-built_in">string</span>;\n}\n</code></pre>'},1223:function(module,exports){module.exports='<h1 id="facet">Facet</h1>\n<p>Facet, which separate data into several subsets according to a certain dimension, and then a graph matrix is created to draw each subset of data into the pane of the graph matrix.</p>\n<p>To sum up, facet actually provides two functions:</p>\n<p>Partitioning data sets according to the specified dimensions;\nTypesetting charts.</p>\n<p>For exploratory data analysis, faceting is a powerful tool that can help you quickly analyze the similarities and differences of data subset patterns.</p>\n<h1 id="api">API</h1>\n<h3 id="type-string-">type: string;</h3>\n<ul>\n<li>Description: Facet type : &#39;rect&#39; | &#39;list&#39; | &#39;circle&#39; | &#39;tree&#39; | &#39;mirror&#39;.</li>\n</ul>\n<p>The supporting facet type is shown in the following table:</p>\n<table>\n<thead>\n<tr>\n<th>Facet type</th>\n<th>Instruction</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>rect</td>\n<td>default, 2 dimensions are specified to form the matrix of the chart</td>\n</tr>\n<tr>\n<td>list</td>\n<td>Specifies a dimension that specifies that a row has several columns, which are beyond the line wrap</td>\n</tr>\n<tr>\n<td>circle</td>\n<td>Specify a dimension that is distributed along the circle</td>\n</tr>\n<tr>\n<td>tree</td>\n<td>Multiple dimensions are specified, and each dimension is expanded as a tree level</td>\n</tr>\n<tr>\n<td>mirror</td>\n<td>Specify a dimension to form a mirror chart</td>\n</tr>\n<tr>\n<td>matrix</td>\n<td>Specify a dimension to form the matrix facet</td>\n</tr>\n</tbody>\n</table>\n<h3 id="fields-string-">fields?: string[];</h3>\n<ul>\n<li>Description: Setting the dimension of data partitioning is the field name of the data, which is imported by array when containing multiple dimensions. The number of incoming fields of different type is different.</li>\n</ul>\n<h3 id="cols-number-">cols?: number;</h3>\n<ul>\n<li>Description: Specifies that each row can display the number of facets and automatically wrap when it exceeds.</li>\n</ul>\n<h3 id="rows-number-">rows?: number;</h3>\n<ul>\n<li>Description: Specifies that each col can display the number of facets and automatically wrap when it exceeds.</li>\n</ul>\n<h3 id="colfield-string-string-">colField?: string | string[];</h3>\n<ul>\n<li>Description: </li>\n</ul>\n<h3 id="rowfield-string-string-">rowField?: string | string[];</h3>\n<ul>\n<li>Description: </li>\n</ul>\n<h3 id="colvalue-number-">colValue?: number;</h3>\n<ul>\n<li>Description: </li>\n</ul>\n<h3 id="rowvalue-number-">rowValue?: number;</h3>\n<ul>\n<li>Description: </li>\n</ul>\n<h3 id="colindex-number-">colIndex?: number;</h3>\n<ul>\n<li>Description: The index of cols</li>\n</ul>\n<h3 id="rowindex-number-">rowIndex?: number;</h3>\n<ul>\n<li>Description: The index of rows</li>\n</ul>\n<h3 id="showtitle-boolean-">showTitle?: boolean;</h3>\n<ul>\n<li>Description: Whether show title or not</li>\n</ul>\n<h3 id="coltitle-icoltitleprops-">colTitle?: IColTitleProps;</h3>\n<ul>\n<li>Description: The title of the col</li>\n</ul>\n<pre><code><span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">IColTitleProps</span> {</span>\n  offsetY?: number;\n  style?: IStyle.ITextStyle;\n}\n</code></pre><h3 id="rowtitle-irowtitleprops-">rowTitle?: IRowTitleProps;</h3>\n<ul>\n<li>Description: The title of the row</li>\n</ul>\n<pre><code><span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">IRowTitleProps</span> {</span>\n  offsetX?: number;\n  style?: IStyle.ITextStyle;\n}\n</code></pre><h3 id="autosetaxis-boolean-">autoSetAxis?: boolean;</h3>\n<ul>\n<li>Description: Automatically set the text of the axis to avoid repetition and occlusion.</li>\n</ul>\n<h3 id="padding-number-number-">padding?: number | number[];</h3>\n<ul>\n<li>Description: Spacing between each view</li>\n</ul>\n<h3 id="transpose-boolean-">transpose?: boolean;</h3>\n<ul>\n<li>Description: The transpose property is true, which can flip the mirror facet.</li>\n</ul>\n<h3 id="line-istyle-ilinestyle-">line?: IStyle.ILineStyle;</h3>\n<ul>\n<li>Description: Used to configure display properties of lines.</li>\n</ul>\n<h3 id="linesmooth-boolean-">lineSmooth?: boolean;</h3>\n<ul>\n<li>Description: Whether the connection line of each tree node is smooth or not , The default is false.</li>\n</ul>\n<h3 id="views-any-">views?: any;</h3>\n<ul>\n<li>Description: </li>\n</ul>\n<h3 id="eachview-views-any-facet-any-void-">eachView?: (views: any, facet: any) =&gt; void;</h3>\n<ul>\n<li>Description: </li>\n</ul>\n<h2 id="universal-dependency-interface">Universal dependency interface</h2>\n<h3 id="text-style">Text style</h3>\n<pre><code><span class="hljs-keyword">interface</span> ITextStyle {\n  fontSize?: <span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>;\n  fontFamily?: <span class="hljs-built_in">string</span>;\n  fontWeight?: <span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>;\n  textAlign?: <span class="hljs-built_in">string</span>;\n  fill?: <span class="hljs-built_in">string</span>;\n  lineHeight?: <span class="hljs-built_in">number</span>;\n  textBaseline?: <span class="hljs-built_in">string</span>;\n  rotate?: <span class="hljs-built_in">number</span>;\n  shadowBlur?: <span class="hljs-built_in">number</span>;\n  shadowColor?: <span class="hljs-built_in">string</span>;\n}\n</code></pre>'},1224:function(module,exports){module.exports='<h1 id="guide">Guide</h1>\n<p>用于绘制图表的辅助元素，该方法的返回值不为 chart 对象，而是一个 guide 对应的控制类。</p>\n<h1 id="api">API</h1>\n<p>guide 提供数组结构, 提供几种类型</p>\n<h2 id="-">辅助线</h2>\n<pre><code><span class="hljs-keyword">interface</span> ILineGuide {\n  <span class="hljs-keyword">type</span>?: <span class="hljs-string">\'line\'</span>;\n  top?: <span class="hljs-built_in">boolean</span>; <span class="hljs-comment">// 指定 guide 是否绘制在 canvas 最上层，默认为 false, 即绘制在最下层</span>\n  zIndex?: <span class="hljs-built_in">number</span>; <span class="hljs-comment">// 指定 guide 绘制顺序</span>\n  start?: object | <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>&gt; | func;  <span class="hljs-comment">// 辅助线起始位置，值为原始数据值，支持 callback</span>\n  end?: object | <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>&gt; | func;  <span class="hljs-comment">// 辅助线结束位置，值为原始数据值，支持 callback</span>\n  lineStyle?: IStyle.ILineStyle;\n  text?: ILineText;\n}\n</code></pre><h3 id="top-boolean">top: boolean</h3>\n<p>指定 guide 是否绘制在 canvas 最上层，默认为 false, 即绘制在最下层。</p>\n<h3 id="zindex-number">zIndex?: number</h3>\n<p>渲染层级</p>\n<h3 id="start-object-array-number-string-func">start?: object | Array<number | string> | func</h3>\n<p>指定辅助线的起始位置，该值的类型如下：</p>\n<ul>\n<li><p>object: 使用图表 x,y 对应的原始数据例如： { time: &#39;2010-01-01&#39;, value: 200 }</p>\n</li>\n<li><p>array: 数组来配置位置 [ x, y ]，根据数组中的值的存在以下几种形式：</p>\n</li>\n</ul>\n<blockquote>\n<p>x，y 都是原始数据 [ &#39;2010-01-01&#39;, 200 ];</p>\n</blockquote>\n<blockquote>\n<p>x，y 可以使用原始数据的替代字符串 &#39;min&#39;, &#39;max&#39;, &#39;median&#39; , 例如：[ &#39;median&#39;, 200 ]</p>\n</blockquote>\n<blockquote>\n<p>x, y 都是用百分比的形式，在绘图区域定位，字符串中存在 &#39;%&#39;, 例如 [ &#39;50%&#39;, &#39;50%&#39; ] 使得辅助元素居中</p>\n</blockquote>\n<ul>\n<li>function: 回调函数，可以动态的确定辅助元素的位置，应用于数据动态更新，辅助元素的位置根据数据变化的场景</li>\n</ul>\n<pre><code>chart<span class="hljs-selector-class">.guide</span>()<span class="hljs-selector-class">.text</span>({\n  <span class="hljs-attribute">position</span>(xScale, yScale) {\n    return <span class="hljs-selector-attr">[]</span>; <span class="hljs-comment">// 位置信息</span>\n  },\n  <span class="hljs-attribute">content</span>: <span class="hljs-string">\'最大值\'</span>\n});\n</code></pre><h3 id="end-object-array-number-string-func">end?: object | Array<number | string> | func</h3>\n<p>指定辅助线的结束位置，使用同 start。</p>\n<h3 id="linestyle-istyle-ilinestyle">lineStyle?: IStyle.ILineStyle</h3>\n<p>用于设置辅助线的显示样式。</p>\n<h3 id="text-ilinetext">text?: ILineText</h3>\n<p>辅助线可以带文本</p>\n<h2 id="-">辅助文本</h2>\n<pre><code><span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">ITextGuide</span> {</span>\n  type?: <span class="hljs-string">\'text\'</span>;\n  top?: <span class="hljs-keyword">boolean</span>;  <span class="hljs-comment">// 指定 guide 是否绘制在 canvas 最上层，默认为 false, 即绘制在最下层</span>\n  zIndex?: number; <span class="hljs-comment">// 文本的起始位置，值为原始数据值，支持 callback</span>\n  position?: object | Array&lt;number | string&gt; | func;\n  content?: string;  <span class="hljs-comment">// 显示的文本内容</span>\n  style?: IStyle.ITextStyle;\n  offsetX?: number;  <span class="hljs-comment">// x 方向的偏移量</span>\n  offsetY?: number;  <span class="hljs-comment">// y 方向偏移量</span>\n}\n</code></pre><h3 id="top-boolean">top: boolean</h3>\n<p>指定 guide 是否绘制在 canvas 最上层，默认为 false, 即绘制在最下层。</p>\n<h3 id="zindex-number">zIndex?: number</h3>\n<h3 id="position-object-array-number-string-func">position?: object | Array<number | string> | func</h3>\n<p>指定辅助文本的显示位置，该值的类型如下：</p>\n<ul>\n<li><p>object: 使用图表 x,y 对应的原始数据例如： { time: &#39;2010-01-01&#39;, value: 200 }</p>\n</li>\n<li><p>array: 数组来配置位置 [ x, y ]，根据数组中的值的存在以下几种形式：</p>\n</li>\n</ul>\n<blockquote>\n<p>x，y 都是原始数据 [ &#39;2010-01-01&#39;, 200 ];</p>\n</blockquote>\n<blockquote>\n<p>x，y 可以使用原始数据的替代字符串 &#39;min&#39;, &#39;max&#39;, &#39;median&#39; , 例如：[ &#39;median&#39;, 200 ]</p>\n</blockquote>\n<blockquote>\n<p>x, y 都是用百分比的形式，在绘图区域定位，字符串中存在 &#39;%&#39;, 例如 [ &#39;50%&#39;, &#39;50%&#39;] 使得辅助元素居中</p>\n</blockquote>\n<ul>\n<li>function: 回调函数，可以动态的确定辅助元素的位置，应用于数据动态更新，辅助元素的位置根据数据变化的场景</li>\n</ul>\n<pre><code>chart<span class="hljs-selector-class">.guide</span>()<span class="hljs-selector-class">.text</span>({\n  <span class="hljs-attribute">position</span>(xScale, yScale) {\n    return <span class="hljs-selector-attr">[]</span>; <span class="hljs-comment">// 位置信息</span>\n  },\n  <span class="hljs-attribute">content</span>: <span class="hljs-string">\'最大值\'</span>\n});\n</code></pre><h3 id="content-string">content?: string</h3>\n<p>辅助文本的显示内容。</p>\n<h3 id="style-istyle-itextstyle">style?: IStyle.ITextStyle</h3>\n<p>用于设置辅助文本的显示样式。 style 的更详细的配置项</p>\n<h3 id="offsetx-number">offsetX?: number</h3>\n<p>设置辅助文本 x 方向的偏移量。</p>\n<h3 id="offsety-number">offsetY?: number</h3>\n<p>设置辅助文本 y 方向的偏移量。</p>\n<h2 id="-">辅助图片</h2>\n<pre><code><span class="hljs-keyword">interface</span> IImageGuide {\n  <span class="hljs-keyword">type</span>?: <span class="hljs-string">\'image\'</span>;\n  top?: <span class="hljs-built_in">boolean</span>;  <span class="hljs-comment">// 指定 giude 是否绘制在 canvas 最上层，默认为 false, 即绘制在最下层</span>\n  zIndex?: <span class="hljs-built_in">number</span>;\n  start?: object | <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>&gt; | func;  <span class="hljs-comment">// 图片起始位置， 值为原始数据值，支持 callback</span>\n  end?: object | <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>&gt; | func;  <span class="hljs-comment">// 图片结束位置， 值为原始数据值，支持 callback</span>\n  src?: <span class="hljs-built_in">string</span>;  <span class="hljs-comment">// 图片路径</span>\n  width?: <span class="hljs-built_in">number</span>;\n  height?: <span class="hljs-built_in">number</span>;\n  offsetX?: <span class="hljs-built_in">number</span>;  <span class="hljs-comment">// x 方向的偏移量</span>\n  offsetY?: <span class="hljs-built_in">number</span>;  <span class="hljs-comment">// y 方向偏移量</span>\n}\n</code></pre><h3 id="top-boolean">top: boolean</h3>\n<p>指定 guide 是否绘制在 canvas 最上层，默认为 false, 即绘制在最下层。</p>\n<h3 id="zindex-number">zIndex?: number</h3>\n<p>渲染层级</p>\n<h3 id="start-object-array-number-string-func">start?: object | Array<number | string> | func</h3>\n<p>指定辅助图片的起始位置，即图片的左上角，该值的类型如下：</p>\n<ul>\n<li><p>object: 使用图表 x,y 对应的原始数据例如： { time: &#39;2010-01-01&#39;, value: 200 }</p>\n</li>\n<li><p>array: 数组来配置位置 [ x, y ]，根据数组中的值的存在以下几种形式：</p>\n</li>\n</ul>\n<blockquote>\n<p>x，y 都是原始数据 [ &#39;2010-01-01&#39;, 200 ];</p>\n</blockquote>\n<blockquote>\n<p>x，y 可以使用原始数据的替代字符串 &#39;min&#39;, &#39;max&#39;, &#39;median&#39; , 例如：[ &#39;median&#39;, 200 ]</p>\n</blockquote>\n<blockquote>\n<p>x, y 都是用百分比的形式，在绘图区域定位，字符串中存在 &#39;%&#39;, 例如 [ &#39;50%&#39;, &#39;50%&#39; ] 使得辅助元素居中</p>\n</blockquote>\n<ul>\n<li>function: 回调函数，可以动态的确定辅助元素的位置，应用于数据动态更新，辅助元素的位置根据数据变化的场景</li>\n</ul>\n<pre><code>chart<span class="hljs-selector-class">.guide</span>()<span class="hljs-selector-class">.text</span>({\n  <span class="hljs-attribute">position</span>(xScale, yScale) {\n    return <span class="hljs-selector-attr">[]</span>; <span class="hljs-comment">// 位置信息</span>\n  },\n  <span class="hljs-attribute">content</span>: <span class="hljs-string">\'最大值\'</span>\n});\n</code></pre><h3 id="end-object-array-number-string-func">end?: object | Array<number | string> | func</h3>\n<p>可选，指定辅助图片的结束位置，即图片的右下角，该属性用法同 start。当 start 和 end 属性同时声明时，即指定了图片的宽度和高度。</p>\n<h3 id="src-string">src?: string</h3>\n<p>指定图片的地址，可以是路径，也可以是 base64 编码。</p>\n<h3 id="width-number">width?: number</h3>\n<p>当仅指定了 start 属性时，用于设置图片的宽度。</p>\n<h3 id="height-number">height?: number</h3>\n<p>当仅指定了 start 属性时，用于设置图片的高度。</p>\n<h3 id="offsetx-number">offsetX?: number</h3>\n<p>设置图片 x 方向的偏移量。</p>\n<h3 id="offsety-number">offsetY?: number</h3>\n<p>设置图片 y 方向的偏移量。</p>\n<h2 id="-">辅助背景框</h2>\n<pre><code><span class="hljs-keyword">interface</span> IRegionGuide {\n  <span class="hljs-keyword">type</span>?: <span class="hljs-string">\'region\'</span>;\n  top?: <span class="hljs-built_in">boolean</span>;  <span class="hljs-comment">// 指定 giude 是否绘制在 canvas 最上层，默认为 false, 即绘制在最下层</span>\n  start?: object | <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>&gt; | func;  <span class="hljs-comment">// 辅助框起始位置，值为原始数据值，支持 callback</span>\n  end?: object | <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>&gt; | func;  <span class="hljs-comment">// 辅助框结束位置，值为原始数据值，支持 callback</span>\n  style?: IRegionStyle;\n}\n</code></pre><h3 id="top-boolean">top: boolean</h3>\n<p>指定 guide 是否绘制在 canvas 最上层，默认为 false, 即绘制在最下层。</p>\n<h3 id="start-object-array-function">start: object | array | function</h3>\n<p>指定辅助背景框的起始位置，即背景框的左上角，该值的类型如下：</p>\n<ul>\n<li><p>object: 使用图表 x,y 对应的原始数据例如： { time: &#39;2010-01-01&#39;, value: 200 }</p>\n</li>\n<li><p>array: 数组来配置位置 [ x, y]，根据数组中的值的存在以下几种形式：</p>\n</li>\n</ul>\n<blockquote>\n<p>x，y 都是原始数据 [ &#39;2010-01-01&#39;, 200 ];</p>\n</blockquote>\n<blockquote>\n<p>x，y 可以使用原始数据的替代字符串 &#39;min&#39;, &#39;max&#39;, &#39;median&#39; , 例如：[ &#39;median&#39;, 200 ]</p>\n</blockquote>\n<blockquote>\n<p>x, y 都是用百分比的形式，在绘图区域定位，字符串中存在 &#39;%&#39;, 例如 [ &#39;50%&#39;, &#39;50%&#39; ] 使得辅助元素居中</p>\n</blockquote>\n<ul>\n<li>function: 回调函数，可以动态的确定辅助元素的位置，应用于数据动态更新，辅助元素的位置根据数据变化的场景</li>\n</ul>\n<pre><code>chart<span class="hljs-selector-class">.guide</span>()<span class="hljs-selector-class">.text</span>({\n  <span class="hljs-attribute">position</span>(xScale, yScale){\n    return <span class="hljs-selector-attr">[]</span>; <span class="hljs-comment">// 位置信息</span>\n  },\n  <span class="hljs-attribute">content</span>: <span class="hljs-string">\'最大值\'</span>\n});\n</code></pre><h3 id="end-object-array-number-string-func">end: object | Array<number | string> | func</h3>\n<p>指定辅助背景框的结束位置，即背景框的右下角，该属性用法同 start。</p>\n<h3 id="style-iregionstyle">style: IRegionStyle</h3>\n<p>用于设置辅助背景框的样式。</p>\n<h2 id="-html">辅助html</h2>\n<pre><code><span class="hljs-keyword">interface</span> IHtmlGuide {\n  <span class="hljs-keyword">type</span>?: <span class="hljs-string">\'html\'</span>;\n  position?: object | <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>&gt; | func;  <span class="hljs-comment">// html 的中心位置， 值为原始数据值，支持 callback</span>\n  alignX?: <span class="hljs-built_in">string</span>;\n  alignY?: <span class="hljs-built_in">string</span>;\n  offsetX?: <span class="hljs-built_in">number</span>;\n  offsetY?: <span class="hljs-built_in">number</span>;\n  html?: <span class="hljs-built_in">string</span>;  <span class="hljs-comment">// html 代码</span>\n  zIndex?: <span class="hljs-built_in">number</span>;\n}\n</code></pre><h3 id="position-object-array-number-string-func">position: object | Array<number | string> | func</h3>\n<p>设置 html 的显示位置，该值的类型如下：</p>\n<ul>\n<li>object: 使用图表 x,y 对应的原始数据例如： { time: &#39;2010-01-01&#39;, value: 200 }</li>\n<li>array: 数组来配置位置 [ x, y ]，根据数组中的值的存在以下几种形式：<blockquote>\n<p>x，y 都是原始数据 [ &#39;2010-01-01&#39;, 200 ];</p>\n</blockquote>\n</li>\n</ul>\n<blockquote>\n<p>x，y 可以使用原始数据的替代字符串 &#39;min&#39;, &#39;max&#39;, &#39;median&#39; , 例如：[ &#39;median&#39;, 200 ]</p>\n</blockquote>\n<blockquote>\n<p>x, y 都是用百分比的形式，在绘图区域定位，字符串中存在 &#39;%&#39;, 例如 [ &#39;50%&#39;, &#39;50%&#39; ] 使得辅助元素居中</p>\n</blockquote>\n<ul>\n<li>function: 回调函数，可以动态的确定辅助元素的位置，应用于数据动态更新，辅助元素的位置根据数据变化的场景</li>\n</ul>\n<pre><code>chart<span class="hljs-selector-class">.guide</span>()<span class="hljs-selector-class">.text</span>({\n  <span class="hljs-attribute">position</span>(xScale, yScale) {\n    return <span class="hljs-selector-attr">[]</span>; <span class="hljs-comment">// 位置信息</span>\n  },\n  <span class="hljs-attribute">content</span>: <span class="hljs-string">\'最大值\'</span>\n});\n</code></pre><h3 id="alignx-string">alignX: string</h3>\n<p>html 的水平对齐方式，可取值为： left、middle、right，默认值为 middle。</p>\n<h3 id="aligny-string">alignY?: string</h3>\n<p>html 的垂直对齐方式，可取值为： top、middle、bottom，默认值为 middle。</p>\n<h3 id="offsetx-number">offsetX?: number</h3>\n<p>设置 html 在 x 方向的偏移量。</p>\n<h3 id="offsety-number">offsetY?: number</h3>\n<p>设置 html 在 y 方向的偏移量。</p>\n<h3 id="html-string">html?: string</h3>\n<p>需要显示的 html 内容。</p>\n<h3 id="zindex-number">zIndex?: number</h3>\n<p>html 层级。</p>\n<h2 id="-">辅助圆弧</h2>\n<pre><code><span class="hljs-keyword">interface</span> IArcGuide {\n  <span class="hljs-keyword">type</span>?: <span class="hljs-string">\'arc\'</span>;\n  top?: <span class="hljs-built_in">boolean</span>;  <span class="hljs-comment">// 指定 giude 是否绘制在 canvas 最上层，默认为 false, 即绘制在最下层</span>\n  start?: object | <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>&gt; | func;  <span class="hljs-comment">// 辅助圆弧起始位置，值为原始数据值，支持 callback</span>\n  end?: object | <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>&gt; | func;  <span class="hljs-comment">// 辅助圆弧结束位置，值为原始数据值，支持 callback</span>\n  style?: object;\n}\n</code></pre><h3 id="top-boolean">top?: boolean</h3>\n<p>指定 guide 是否绘制在 canvas 最上层，默认为 false, 即绘制在最下层。</p>\n<h3 id="start-object-array-number-string-func">start?: object | Array<number | string> | func</h3>\n<p>指定辅助圆弧的起始位置，该值的类型如下：</p>\n<ul>\n<li><p>object: 使用图表 x,y 对应的原始数据例如： { time: &#39;2010-01-01&#39;, value: 200 }</p>\n</li>\n<li><p>array: 数组来配置位置 [ x, y ]，根据数组中的值的存在以下几种形式：</p>\n</li>\n</ul>\n<blockquote>\n<p>x，y 都是原始数据 [ &#39;2010-01-01&#39;, 200 ];</p>\n</blockquote>\n<blockquote>\n<p>x，y 可以使用原始数据的替代字符串 &#39;min&#39;, &#39;max&#39;, &#39;median&#39; , 例如：[ &#39;median&#39;, 200 ]</p>\n</blockquote>\n<blockquote>\n<p>x, y 都是用百分比的形式，在绘图区域定位，字符串中存在 &#39;%&#39;, 例如 [ &#39;50%&#39;, &#39;50%&#39; ] 使得辅助元素居中</p>\n</blockquote>\n<ul>\n<li>function: 回调函数，可以动态的确定辅助元素的位置，应用于数据动态更新，辅助元素的位置根据数据变化的场景</li>\n</ul>\n<pre><code>chart<span class="hljs-selector-class">.guide</span>()<span class="hljs-selector-class">.text</span>({\n  <span class="hljs-attribute">position</span>(xScale, yScale) {\n    return <span class="hljs-selector-attr">[]</span>; <span class="hljs-comment">// 位置信息</span>\n  },\n  <span class="hljs-attribute">content</span>: <span class="hljs-string">\'最大值\'</span>\n});\n</code></pre><h3 id="end-object-array-number-string-func">end?: object | Array<number | string> | func</h3>\n<p>指定辅助圆弧的结束位置，该属性用法同 start。</p>\n<h3 id="style-object">style?: object</h3>\n<p>style 的更详细的配置项</p>\n<h2 id="-">数据区间</h2>\n<p>特殊数据区间标注，适用于折线图和面积图</p>\n<pre><code>interface IDataRegionGuide {\n  type?: <span class="hljs-string">\'dataRegion\'</span>;\n  <span class="hljs-attribute">top</span>?: boolean;  <span class="hljs-comment">// 指定 giude 是否绘制在 canvas 最上层，默认为 true, 即绘制在最上层</span>\n  start?: object | Array&lt;number | string&gt; | func;  <span class="hljs-comment">// 标注点起始位置，值为原始数据值，支持 callback ,</span>\n  end?: object | Array&lt;number | string&gt; | func;  <span class="hljs-comment">// 标注点结束位置，值为原始数据值，支持 callback ,</span>\n  <span class="hljs-attribute">content</span>?: string;  <span class="hljs-comment">// 显示的文本内容</span>\n  <span class="hljs-selector-tag">style</span>?: object;  <span class="hljs-comment">//可选，文本/point/line样式</span>\n  <span class="hljs-attribute">display</span>?: object;  <span class="hljs-comment">//可选，是否显示文本/point/line，默认为全部显示</span>\n  lineLength?: number;  <span class="hljs-comment">//可选，line长度，default为30</span>\n  <span class="hljs-attribute">direction</span>?: <span class="hljs-string">\'upward\'</span> | <span class="hljs-string">\'downward\'</span>;   <span class="hljs-comment">//可选，朝向，默认为upwaard</span>\n}\n</code></pre><h2 id="-">特殊数据标注点</h2>\n<p>特殊数据标注点，适用于折线图和面积图。</p>\n<pre><code>interface IDataMarkerGuide {\n  type?: <span class="hljs-string">\'dataMarker\'</span>;\n  <span class="hljs-attribute">top</span>?: boolean;\n  <span class="hljs-attribute">content</span>?: string;\n  <span class="hljs-selector-tag">style</span>?: object;\n  <span class="hljs-attribute">display</span>?: object;\n  lineLength?: number;\n  <span class="hljs-attribute">direction</span>?: <span class="hljs-string">\'upward\'</span> | <span class="hljs-string">\'downward\'</span>;\n}\n</code></pre><h3 id="top-boolean">top?: boolean</h3>\n<p>指定 guide 是否绘制在 canvas 最上层，默认为 false, 即绘制在最下层。</p>\n<h3 id="content-string">content?: string</h3>\n<p>辅助文本的显示内容。</p>\n<h3 id="style-object">style?: object</h3>\n<p>style:{ point:{}, line:{}, text:{} }， point/line/text 样式，更详细的配置项</p>\n<h3 id="display-object">display?: object</h3>\n<p>display:{ point:true | false, line:true | false, text:true | false }， 是否显示 point/line/text。</p>\n<h3 id="linelength-number">lineLength?: number</h3>\n<p>line 的长度，default 为 30。</p>\n<h3 id="direction-upward-downward-">direction?: &#39;upward&#39; | &#39;downward&#39;</h3>\n<p>标注点朝向：&#39;upward&#39; | &#39;downward&#39;, default 为&#39;upward&#39;，即向上</p>\n<h2 id="-">辅助区域过滤</h2>\n<p>辅助区域过滤，将图表中位于矩形选区中的图形元素提取出来，重新着色。</p>\n<pre><code><span class="hljs-keyword">interface</span> IRegionFilter {\n  <span class="hljs-keyword">type</span>?: <span class="hljs-string">\'regionFilter\'</span>;\n  top?: <span class="hljs-built_in">boolean</span>; <span class="hljs-comment">// 指定 giude 是否绘制在 canvas 最上层，默认为 true, 即绘制在最上层</span>\n  start?: object | <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>&gt; | func;  <span class="hljs-comment">// 辅助框起始位置，值为原始数据值，支持 callback</span>\n  end?: object | <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>&gt; | func;  <span class="hljs-comment">// 辅助框结束位置，值为原始数据值，支持 callback</span>\n  color?: <span class="hljs-built_in">string</span>;  <span class="hljs-comment">//染色色值</span>\n  apply?: <span class="hljs-built_in">string</span>[];  <span class="hljs-comment">//可选，设定regionFilter只对特定geom类型起作用</span>\n}\n</code></pre><h3 id="top-boolean">top?: boolean</h3>\n<p>指定 guide 是否绘制在 canvas 最上层，默认为 false, 即绘制在最下层。</p>\n<h3 id="start-object-array-number-string-func">start?: object | Array<number | string> | func</h3>\n<p>指定辅助过滤区域的起始位置，即过滤区域的左上角，该值的类型如下：</p>\n<ul>\n<li>object: 使用图表 x,y 对应的原始数据例如： { time: &#39;2010-01-01&#39;, value: 200 }</li>\n<li><p>array: 数组来配置位置 [ x, y]，根据数组中的值的存在以下几种形式：</p>\n<blockquote>\n<p>x，y 都是原始数据 [ &#39;2010-01-01&#39;, 200 ];</p>\n</blockquote>\n<blockquote>\n<p>x，y 可以使用原始数据的替代字符串 &#39;min&#39;, &#39;max&#39;, &#39;median&#39; , 例如：[ &#39;median&#39;, 200 ]</p>\n</blockquote>\n<blockquote>\n<p>x, y 都是用百分比的形式，在绘图区域定位，字符串中存在 &#39;%&#39;, 例如 [ &#39;50%&#39;, &#39;50%&#39; ] 使得辅助元素居中</p>\n</blockquote>\n</li>\n<li><p>function: 回调函数，可以动态的确定辅助元素的位置，应用于数据动态更新，辅助元素的位置根据数据变化的场景</p>\n</li>\n</ul>\n<h3 id="end-object-array-number-string-func">end?: object | Array<number | string> | func</h3>\n<p>指定辅助过滤区域的结束位置，即过滤区域的右下角，该属性用法同 start。</p>\n<h3 id="color-string">color?: string</h3>\n<p>指定辅助过滤区域内图形元素重新着色的色值。</p>\n<h3 id="apply-string-">apply?: string[]</h3>\n<p>可选,设定 regionFilter 只对特定 geom 类型起作用，如 apply:[&#39;area&#39;],默认 regionFilter 的作用域为整个图表</p>\n<h2 id="-">通用依赖接口</h2>\n<h3 id="-">线条样式</h3>\n<pre><code><span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">ILineText</span> {</span>\n  position?: string | number; <span class="hljs-comment">// \'start\' | \'center\' | \'end\' | \'39%\' | 0.5, // 文本的显示位置</span>\n  autoRotate?: <span class="hljs-keyword">boolean</span>; <span class="hljs-comment">// 是否沿线的角度排布，默认为 true</span>\n  style?: IStyle.ILineStyle;\n  content?: string; <span class="hljs-comment">// 文本的内容</span>\n  offsetX?: number; <span class="hljs-comment">// x 方向的偏移量</span>\n  offsetY?: number; <span class="hljs-comment">// y 方向的偏移量</span>\n}\n</code></pre><h3 id="-">辅助框的图形样式属性</h3>\n<pre><code><span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">IRegionStyle</span> {</span>\n  lineWidth?: number;  <span class="hljs-comment">// 辅助框的边框宽度</span>\n  fill?: string; <span class="hljs-comment">// 辅助框填充的颜色</span>\n  fillOpacity?: number;  <span class="hljs-comment">// 辅助框的背景透明度</span>\n  stroke?: string; <span class="hljs-comment">// 辅助框的边框颜色设置</span>\n}\n</code></pre><h3 id="-">事件</h3>\n<pre><code><span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">IGuideEvent</span> {</span>\n  onMouseDown?: eventFunc;\n  onMouseMove?: eventFunc;\n  onMouseLeave?: eventFunc;\n  onMouseUp?: eventFunc;\n  onClick?: eventFunc;\n  onDbClick?: eventFunc;\n  onTouchStart?: eventFunc;\n  onTouchMove?: eventFunc;\n  onTouchEnd?: eventFunc;\n}\n</code></pre>'},1225:function(module,exports){module.exports='<h1 id="guide">Guide</h1>\n<p>The auxiliary element used to draw a graph, which returns a control class corresponding to a guide instead of a chart object.</p>\n<h1 id="api">API</h1>\n<p>Guide provides array structure and provides several types.</p>\n<h2 id="auxiliary-line">auxiliary line</h2>\n<pre><code><span class="hljs-keyword">interface</span> ILineGuide {\n  <span class="hljs-keyword">type</span>?: <span class="hljs-string">\'line\'</span>;\n  top?: <span class="hljs-built_in">boolean</span>; <span class="hljs-comment">// Specifies whether the guide is drawn on the top of the canvas, and the default is false, that is, drawn at the bottom level.</span>\n  zIndex?: <span class="hljs-built_in">number</span>; <span class="hljs-comment">// Specify guide rendering level</span>\n  start?: object | <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>&gt; | func;  <span class="hljs-comment">// The starting position of the auxiliary line is the original data value, supporting callback</span>\n  end?: object | <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>&gt; | func;  <span class="hljs-comment">// The ending position of the auxiliary line is the original data value, supporting callback</span>\n  lineStyle?: IStyle.ILineStyle;\n  text?: ILineText;\n}\n</code></pre><h3 id="top-boolean">top: boolean</h3>\n<p>Specifies whether the guide is drawn on the top of the canvas, and the default is false, that is, drawn at the bottom level.</p>\n<h3 id="zindex-number">zIndex?: number</h3>\n<p>Rendering level</p>\n<h3 id="start-object-array-number-string-func">start?: object | Array<number | string> | func</h3>\n<p>Specifies the starting position of the auxiliary line. The type of the value is as follows:</p>\n<ul>\n<li><p>object: Use chart x, y corresponding initial data, for example: { time: &#39;2010-01-01&#39;, value: 200 }</p>\n</li>\n<li><p>array: Array to configure the location [x, y], according to the existence of the following values in the array:</p>\n</li>\n</ul>\n<blockquote>\n<p>X and Y are initial data. such as : [ &#39;2010-01-01&#39;, 200 ];</p>\n</blockquote>\n<blockquote>\n<p>X, Y can use the string &#39;min&#39;, &#39;max&#39;, &#39;median&#39; to alternate initial data ,such as : [ &#39;median&#39;, 200 ]</p>\n</blockquote>\n<blockquote>\n<p>X, Y are in the form of percentages, positioned in the drawing area, and there is a &#39;%&#39; in the string, such as [50%&#39;, 50%&#39;] to center the auxiliary element</p>\n</blockquote>\n<ul>\n<li>function: callback, which can dynamically determine the location of auxiliary elements, applied to the scene which data updates dynamicly or the location of auxiliary elements will change according to data changes.</li>\n</ul>\n<pre><code>chart<span class="hljs-selector-class">.guide</span>()<span class="hljs-selector-class">.text</span>({\n  <span class="hljs-attribute">position</span>(xScale, yScale) {\n    return <span class="hljs-selector-attr">[]</span>; <span class="hljs-comment">// location information</span>\n  },\n  <span class="hljs-attribute">content</span>: <span class="hljs-string">\'max\'</span>\n});\n</code></pre><h3 id="end-object-array-number-string-func">end?: object | Array<number | string> | func</h3>\n<p>Specify the end of the auxiliary line and use the same as &#39;start&#39;.</p>\n<h3 id="linestyle-istyle-ilinestyle">lineStyle?: IStyle.ILineStyle</h3>\n<p>Userd to display style for setting auxiliary lines.</p>\n<h3 id="text-ilinetext">text?: ILineText</h3>\n<p>The auxiliary line can have text.</p>\n<h2 id="auxiliary-text">Auxiliary text</h2>\n<pre><code><span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">ITextGuide</span> {</span>\n  type?: <span class="hljs-string">\'text\'</span>;\n  top?: <span class="hljs-keyword">boolean</span>;  <span class="hljs-comment">// Specifies whether the guide is drawn on the top of the canvas, and the default is false, that is, drawn at the bottom level.</span>\n  zIndex?: number; <span class="hljs-comment">// The starting position of the text is the original data value, supporting callback</span>\n  position?: object | Array&lt;number | string&gt; | func;\n  content?: string;  <span class="hljs-comment">// Text content </span>\n  style?: IStyle.ITextStyle;\n  offsetX?: number;  <span class="hljs-comment">// Offset in X direction</span>\n  offsetY?: number;  <span class="hljs-comment">// Offset in Y direction</span>\n}\n</code></pre><h3 id="top-boolean">top: boolean</h3>\n<p>Specifies whether the guide is drawn on the top of the canvas, and the default is false, that is, drawn at the bottom level.</p>\n<h3 id="zindex-number">zIndex?: number</h3>\n<p>rendering level</p>\n<h3 id="position-object-array-number-string-func">position?: object | Array<number | string> | func</h3>\n<p>Specifies the display position of the auxiliary text. The type of the value is as follows:</p>\n<ul>\n<li><p>object: Use chart x, y corresponding initial data, for example: { time: &#39;2010-01-01&#39;, value: 200 }</p>\n</li>\n<li><p>array: Array to configure the location [x, y], according to the existence of the following values in the array:</p>\n</li>\n</ul>\n<blockquote>\n<p>X and Y are initial data. such as : [ &#39;2010-01-01&#39;, 200 ];</p>\n</blockquote>\n<blockquote>\n<p>X, Y can use the string &#39;min&#39;, &#39;max&#39;, &#39;median&#39; to alternate initial data ,such as : [ &#39;median&#39;, 200 ]</p>\n</blockquote>\n<blockquote>\n<p>X, Y are in the form of percentages, positioned in the drawing area, and there is a &#39;%&#39; in the string, such as [50%&#39;, 50%&#39;] to center the auxiliary element</p>\n</blockquote>\n<ul>\n<li>function: callback, which can dynamically determine the location of auxiliary elements, applied to the scene which data updates dynamicly or the location of auxiliary elements will change according to data changes.</li>\n</ul>\n<pre><code>chart<span class="hljs-selector-class">.guide</span>()<span class="hljs-selector-class">.text</span>({\n  <span class="hljs-attribute">position</span>(xScale, yScale) {\n    return <span class="hljs-selector-attr">[]</span>; <span class="hljs-comment">// location information</span>\n  },\n  <span class="hljs-attribute">content</span>: <span class="hljs-string">\'max\'</span>\n});\n</code></pre><h3 id="content-string">content?: string</h3>\n<p>The display content of the auxiliary text.</p>\n<h3 id="style-istyle-itextstyle">style?: IStyle.ITextStyle</h3>\n<p>Display style for setting up auxiliary text</p>\n<h3 id="offsetx-number">offsetX?: number</h3>\n<p>Offset in X direction</p>\n<h3 id="offsety-number">offsetY?: number</h3>\n<p>Offset in Y direction</p>\n<h2 id="auxiliary-picture">Auxiliary picture</h2>\n<pre><code><span class="hljs-keyword">interface</span> IImageGuide {\n  <span class="hljs-keyword">type</span>?: <span class="hljs-string">\'image\'</span>;\n  top?: <span class="hljs-built_in">boolean</span>;  <span class="hljs-comment">// Specifies whether the guide is drawn on the top of the canvas, and the default is false, that is, drawn at the bottom level.</span>\n  zIndex?: <span class="hljs-built_in">number</span>;\n  start?: object | <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>&gt; | func;  <span class="hljs-comment">// The starting position of the picture is the original data value, supporting callback</span>\n  end?: object | <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>&gt; | func;  <span class="hljs-comment">// The starting position of the picture is the original data value, supporting callback</span>\n  src?: <span class="hljs-built_in">string</span>;  <span class="hljs-comment">// Picture path</span>\n  width?: <span class="hljs-built_in">number</span>;\n  height?: <span class="hljs-built_in">number</span>;\n  offsetX?: <span class="hljs-built_in">number</span>;  <span class="hljs-comment">// Offset in X direction</span>\n  offsetY?: <span class="hljs-built_in">number</span>;  <span class="hljs-comment">// Offset in Y direction</span>\n}\n</code></pre><h3 id="top-boolean">top: boolean</h3>\n<p>Specifies whether the guide is drawn on the top of the canvas, and the default is false, that is, drawn at the bottom level.</p>\n<h3 id="zindex-number">zIndex?: number</h3>\n<p>Rendering level</p>\n<h3 id="start-object-array-number-string-func">start?: object | Array<number | string> | func</h3>\n<p>Specifies the starting position of the auxiliary picture, that is, the upper left corner of the picture. The type of the value is as follows:</p>\n<ul>\n<li><p>object: Use chart x, y corresponding initial data, for example: { time: &#39;2010-01-01&#39;, value: 200 }</p>\n</li>\n<li><p>array:  Array to configure the location [x, y], according to the existence of the following values in the array:</p>\n</li>\n</ul>\n<blockquote>\n<p>X and Y are initial data. such as : [ &#39;2010-01-01&#39;, 200 ];</p>\n</blockquote>\n<blockquote>\n<p>X, Y can use the string &#39;min&#39;, &#39;max&#39;, &#39;median&#39; to alternate initial data ,such as : [ &#39;median&#39;, 200 ]</p>\n</blockquote>\n<blockquote>\n<p>X, Y are in the form of percentages, positioned in the drawing area, and there is a &#39;%&#39; in the string, such as [50%&#39;, 50%&#39;] to center the auxiliary element</p>\n</blockquote>\n<ul>\n<li>function: callback, which can dynamically determine the location of auxiliary elements, applied to the scene which data updates dynamicly or the location of auxiliary elements will change according to data changes.</li>\n</ul>\n<pre><code>chart<span class="hljs-selector-class">.guide</span>()<span class="hljs-selector-class">.text</span>({\n  <span class="hljs-attribute">position</span>(xScale, yScale) {\n    return <span class="hljs-selector-attr">[]</span>; <span class="hljs-comment">// location information</span>\n  },\n  <span class="hljs-attribute">content</span>: <span class="hljs-string">\'max\'</span>\n});\n</code></pre><h3 id="end-object-array-number-string-func">end?: object | Array<number | string> | func</h3>\n<p>Optionally, specify the end position of the auxiliary picture, that is, the lower right corner of the image, which is used in the same way as start. When the start and end attributes are declared at the same time, the width and height of the picture are specified.</p>\n<h3 id="src-string">src?: string</h3>\n<p>The address of the specified picture can be either a path or a Base64 encoding.</p>\n<h3 id="width-number">width?: number</h3>\n<p>When the start attribute is specified, it is used to set the width of the picture.</p>\n<h3 id="height-number">height?: number</h3>\n<p>When the start attribute is specified, it is used to set the height of the picture.</p>\n<h3 id="offsetx-number">offsetX?: number</h3>\n<p>Offset in X direction</p>\n<h3 id="offsety-number">offsetY?: number</h3>\n<p>Offset in Y direction</p>\n<h2 id="auxiliary-background-box">Auxiliary background box</h2>\n<pre><code><span class="hljs-keyword">interface</span> IRegionGuide {\n  <span class="hljs-keyword">type</span>?: <span class="hljs-string">\'region\'</span>;\n  top?: <span class="hljs-built_in">boolean</span>;  <span class="hljs-comment">// Specifies whether the guide is drawn on the top of the canvas, and the default is false, that is, drawn at the bottom level.</span>\n  start?: object | <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>&gt; | func;  <span class="hljs-comment">// The starting position of the box is the original data value, supporting callback</span>\n  end?: object | <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>&gt; | func;  <span class="hljs-comment">// The ending position of the box is the original data value, supporting callback</span>\n  style?: IRegionStyle;\n}\n</code></pre><h3 id="top-boolean">top: boolean</h3>\n<p>Specifies whether the guide is drawn on the top of the canvas, and the default is false, that is, drawn at the bottom level.</p>\n<h3 id="start-object-array-function">start: object | array | function</h3>\n<p>Specifies the starting position of the auxiliary background box, that is, the upper left corner of the background box. The type of the value is as follows:</p>\n<ul>\n<li><p>object: Use chart x, y corresponding initial data, for example: { time: &#39;2010-01-01&#39;, value: 200 }</p>\n</li>\n<li><p>array: Array to configure the location [x, y], according to the existence of the following values in the array:</p>\n</li>\n</ul>\n<blockquote>\n<p>X and Y are initial data. such as : [ &#39;2010-01-01&#39;, 200 ];</p>\n</blockquote>\n<blockquote>\n<p>X, Y can use the string &#39;min&#39;, &#39;max&#39;, &#39;median&#39; to alternate initial data ,such as : [ &#39;median&#39;, 200 ]</p>\n</blockquote>\n<blockquote>\n<p>X, Y are in the form of percentages, positioned in the drawing area, and there is a &#39;%&#39; in the string, such as [50%&#39;, 50%&#39;] to center the auxiliary element</p>\n</blockquote>\n<ul>\n<li>function: callback, which can dynamically determine the location of auxiliary elements, applied to the scene which data updates dynamicly or the location of auxiliary elements will change according to data changes.</li>\n</ul>\n<pre><code>chart<span class="hljs-selector-class">.guide</span>()<span class="hljs-selector-class">.text</span>({\n  <span class="hljs-attribute">position</span>(xScale, yScale){\n    return <span class="hljs-selector-attr">[]</span>; <span class="hljs-comment">// location information</span>\n  },\n  <span class="hljs-attribute">content</span>: <span class="hljs-string">\'max\'</span>\n});\n</code></pre><h3 id="end-object-array-number-string-func">end: object | Array<number | string> | func</h3>\n<p>Specifies the end position of the auxiliary background box, that is, the lower right-hand corner of the background box, which is used in the same way as start.</p>\n<h3 id="style-iregionstyle">style: IRegionStyle</h3>\n<p>Used to set up the style of the auxiliary background box.</p>\n<h2 id="auxiliary-html">Auxiliary html</h2>\n<pre><code><span class="hljs-keyword">interface</span> IHtmlGuide {\n  <span class="hljs-keyword">type</span>?: <span class="hljs-string">\'html\'</span>;\n  position?: object | <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>&gt; | func;  <span class="hljs-comment">// The central location of HTML is the original data value, supporting callback</span>\n  alignX?: <span class="hljs-built_in">string</span>;\n  alignY?: <span class="hljs-built_in">string</span>;\n  offsetX?: <span class="hljs-built_in">number</span>;\n  offsetY?: <span class="hljs-built_in">number</span>;\n  html?: <span class="hljs-built_in">string</span>;  <span class="hljs-comment">// html code</span>\n  zIndex?: <span class="hljs-built_in">number</span>;\n}\n</code></pre><h3 id="position-object-array-number-string-func">position: object | Array<number | string> | func</h3>\n<p>Set the display location of HTML. The type of the value is as follows:</p>\n<ul>\n<li>object:  Use chart x, y corresponding initial data, for example: { time: &#39;2010-01-01&#39;, value: 200 }</li>\n<li>array: Array to configure the location [x, y], according to the existence of the following values in the array:<blockquote>\n<p>X and Y are initial data. such as : [ &#39;2010-01-01&#39;, 200 ];</p>\n</blockquote>\n</li>\n</ul>\n<blockquote>\n<p>X, Y can use the string &#39;min&#39;, &#39;max&#39;, &#39;median&#39; to alternate initial data ,such as : [ &#39;median&#39;, 200 ]</p>\n</blockquote>\n<blockquote>\n<p>X, Y are in the form of percentages, positioned in the drawing area, and there is a &#39;%&#39; in the string, such as [50%&#39;, 50%&#39;] to center the auxiliary element</p>\n</blockquote>\n<ul>\n<li>function: callback, which can dynamically determine the location of auxiliary elements, applied to the scene which data updates dynamicly or the location of auxiliary elements will change according to data changes.</li>\n</ul>\n<pre><code>chart<span class="hljs-selector-class">.guide</span>()<span class="hljs-selector-class">.text</span>({\n  <span class="hljs-attribute">position</span>(xScale, yScale) {\n    return <span class="hljs-selector-attr">[]</span>; <span class="hljs-comment">// position information</span>\n  },\n  <span class="hljs-attribute">content</span>: <span class="hljs-string">\'max\'</span>\n});\n</code></pre><h3 id="alignx-string">alignX: string</h3>\n<p>The horizontal alignment of HTML can be set as follows: left, middle, right, the default value is middle.</p>\n<h3 id="aligny-string">alignY?: string</h3>\n<p>The vertical alignment of HTML can be set as follows:  top, middle, bottom the default value is middle。</p>\n<h3 id="offsetx-number">offsetX?: number</h3>\n<p>Set the offset of the HTML in the X direction.</p>\n<h3 id="offsety-number">offsetY?: number</h3>\n<p>Set the offset of the HTML in the Y direction.</p>\n<h3 id="html-string">html?: string</h3>\n<p>The HTML content that needs to be displayed.</p>\n<h3 id="zindex-number">zIndex?: number</h3>\n<p>HTML level.</p>\n<h2 id="auxiliary-arc">Auxiliary arc</h2>\n<pre><code><span class="hljs-keyword">interface</span> IArcGuide {\n  <span class="hljs-keyword">type</span>?: <span class="hljs-string">\'arc\'</span>;\n  top?: <span class="hljs-built_in">boolean</span>;  <span class="hljs-comment">// Specifies whether the guide is drawn on the top of the canvas, and the default is false, that is, drawn at the bottom level.</span>\n  start?: object | <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>&gt; | func;  <span class="hljs-comment">// The starting position of the arc is the original data value, supporting callback</span>\n  end?: object | <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>&gt; | func;  <span class="hljs-comment">// The ending position of the arc is the original data value, supporting callback</span>\n  style?: object;\n}\n</code></pre><h3 id="top-boolean">top?: boolean</h3>\n<p>Specifies whether the guide is drawn on the top of the canvas, and the default is false, that is, drawn at the bottom level.</p>\n<h3 id="start-object-array-number-string-func">start?: object | Array<number | string> | func</h3>\n<p>Specifies the display position of the auxiliary text. The type of the value is as follows:</p>\n<ul>\n<li><p>object: Use chart x, y corresponding initial data, for example: { time: &#39;2010-01-01&#39;, value: 200 }</p>\n</li>\n<li><p>array: Array to configure the location [x, y], according to the existence of the following values in the array:</p>\n</li>\n</ul>\n<blockquote>\n<p>X and Y are initial data. such as : [ &#39;2010-01-01&#39;, 200 ];</p>\n</blockquote>\n<blockquote>\n<p>X, Y can use the string &#39;min&#39;, &#39;max&#39;, &#39;median&#39; to alternate initial data ,such as : [ &#39;median&#39;, 200 ]</p>\n</blockquote>\n<blockquote>\n<p>X, Y are in the form of percentages, positioned in the drawing area, and there is a &#39;%&#39; in the string, such as [50%&#39;, 50%&#39;] to center the auxiliary element</p>\n</blockquote>\n<ul>\n<li>function: callback, which can dynamically determine the location of auxiliary elements, applied to the scene which data updates dynamicly or the location of auxiliary elements will change according to data changes.</li>\n</ul>\n<pre><code>chart<span class="hljs-selector-class">.guide</span>()<span class="hljs-selector-class">.text</span>({\n  <span class="hljs-attribute">position</span>(xScale, yScale) {\n    return <span class="hljs-selector-attr">[]</span>; <span class="hljs-comment">// position information</span>\n  },\n  <span class="hljs-attribute">content</span>: <span class="hljs-string">\'max\'</span>\n});\n</code></pre><h3 id="end-object-array-number-string-func">end?: object | Array<number | string> | func</h3>\n<p>Specifies the end position of the auxiliary arc, which is used in the same way as start.</p>\n<h3 id="style-object">style?: object</h3>\n<p>More detailed configuration items for style</p>\n<h2 id="data-interval">Data interval</h2>\n<p>Special data interval annotation is applicable to line chart and area chart.</p>\n<pre><code>interface IDataRegionGuide {\n  type?: <span class="hljs-string">\'dataRegion\'</span>;\n  <span class="hljs-attribute">top</span>?: boolean;  <span class="hljs-comment">// SSpecifies whether the giude is drawn on the top of the canvas, and the default is true, that is, drawn at the top level.</span>\n  start?: object | Array&lt;number | string&gt; | func;  <span class="hljs-comment">// the starting position of the point, the value is the original data value, support callback.</span>\n  end?: object | Array&lt;number | string&gt; | func;  <span class="hljs-comment">// the ending position of the point, the value is the original data value, support callback.</span>\n  <span class="hljs-attribute">content</span>?: string;  <span class="hljs-comment">// Text content displayed</span>\n  <span class="hljs-selector-tag">style</span>?: object;  <span class="hljs-comment">// Optional, text /point/line style.</span>\n  <span class="hljs-attribute">display</span>?: object;  <span class="hljs-comment">// Optional, whether text /point/line is displayed, default to all display.</span>\n  lineLength?: number;  <span class="hljs-comment">// Optional, line length, default is 30.</span>\n  <span class="hljs-attribute">direction</span>?: <span class="hljs-string">\'upward\'</span> | <span class="hljs-string">\'downward\'</span>;   <span class="hljs-comment">// Optional, orientation, default to upwaard</span>\n}\n</code></pre><h2 id="special-data-annotation-points">Special data annotation points</h2>\n<p>Special data point annotation is applicable to line chart and area chart.</p>\n<pre><code>interface IDataMarkerGuide {\n  type?: <span class="hljs-string">\'dataMarker\'</span>;\n  <span class="hljs-attribute">top</span>?: boolean;\n  <span class="hljs-attribute">content</span>?: string;\n  <span class="hljs-selector-tag">style</span>?: object;\n  <span class="hljs-attribute">display</span>?: object;\n  lineLength?: number;\n  <span class="hljs-attribute">direction</span>?: <span class="hljs-string">\'upward\'</span> | <span class="hljs-string">\'downward\'</span>;\n}\n</code></pre><h3 id="top-boolean">top?: boolean</h3>\n<p>Specifies whether the giude is drawn on the top of the canvas, and the default is true, that is, drawn at the top level.</p>\n<h3 id="content-string">content?: string</h3>\n<p>Text content displayed</p>\n<h3 id="style-object">style?: object</h3>\n<p>style:{ point:{}, line:{}, text:{} }, point/line/text style</p>\n<h3 id="display-object">display?: object</h3>\n<p>display:{ point:true | false, line:true | false, text:true | false }, whether text /point/line is displayed</p>\n<h3 id="linelength-number">lineLength?: number</h3>\n<p>ine length, default is 30.</p>\n<h3 id="direction-upward-downward-">direction?: &#39;upward&#39; | &#39;downward&#39;</h3>\n<p>Marking point orientation: &#39;upward&#39; | &#39;downward&#39;, default to &#39;upward&#39;</p>\n<h2 id="auxiliary-regionfilter">Auxiliary regionFilter</h2>\n<p>Auxiliary regionFilter, extracting the graphics elements in the rectangle selection area and re coloring them.</p>\n<pre><code><span class="hljs-keyword">interface</span> IRegionFilter {\n  <span class="hljs-keyword">type</span>?: <span class="hljs-string">\'regionFilter\'</span>;\n  top?: <span class="hljs-built_in">boolean</span>; <span class="hljs-comment">// Specifies whether the giude is drawn on the top of the canvas, and the default is true, that is, drawn at the top level.</span>\n  start?: object | <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>&gt; | func;  <span class="hljs-comment">// The starting position of the auxiliary area is the original data value, supporting callback</span>\n  end?: object | <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>&gt; | func;  <span class="hljs-comment">// The ending position of the auxiliary area is the original data value, supporting callback</span>\n  color?: <span class="hljs-built_in">string</span>;  <span class="hljs-comment">// dyeing value</span>\n  apply?: <span class="hljs-built_in">string</span>[];  <span class="hljs-comment">// Optionally, setting regionFilter works only for specific geom types.</span>\n</code></pre><h3 id="top-boolean">top?: boolean</h3>\n<p>Specifies whether the giude is drawn on the top of the canvas, and the default is true, that is, drawn at the top level.</p>\n<h3 id="start-object-array-number-string-func">start?: object | Array<number | string> | func</h3>\n<p>Specifies the starting position of the auxiliary regionFilter, that is, the upper left corner of the filtering area. The type of the value is as follows:</p>\n<ul>\n<li>object:  Use chart x, y corresponding initial data, for example:{ time: &#39;2010-01-01&#39;, value: 200 }</li>\n<li><p>array: Array to configure the location [x, y], according to the existence of the following values in the array:</p>\n<blockquote>\n<p>X and Y are initial data. such as : [ &#39;2010-01-01&#39;, 200 ];</p>\n</blockquote>\n<blockquote>\n<p>X, Y can use the string &#39;min&#39;, &#39;max&#39;, &#39;median&#39; to alternate initial data ,such as : [ &#39;median&#39;, 200 ]</p>\n</blockquote>\n<blockquote>\n<p>X, Y are in the form of percentages, positioned in the drawing area, and there is a &#39;%&#39; in the string, such as [50%&#39;, 50%&#39;] to center the auxiliary element</p>\n</blockquote>\n</li>\n<li><p>function: callback, which can dynamically determine the location of auxiliary elements, applied to the scene which data updates dynamicly or the location of auxiliary elements will change according to data changes.</p>\n</li>\n</ul>\n<h3 id="end-object-array-number-string-func">end?: object | Array<number | string> | func</h3>\n<p>Specifies the end of the auxiliary regionFilter, that is, the lower right corner of the filter area, which is used in the same way as start.</p>\n<h3 id="color-string">color?: string</h3>\n<p>Specifies the color value of the image element to be re colored in the auxiliary regionFilter.</p>\n<h3 id="apply-string-">apply?: string[]</h3>\n<p>Optionally, set regionFilter to work only for specific geom types, such as apply:[&#39;area&#39;], and default regionFilter to scope the entire graph</p>\n<h2 id="universal-dependency-interface">Universal dependency interface</h2>\n<h3 id="line-style">line style</h3>\n<pre><code><span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">ILineText</span> {</span>\n  position?: string | number; <span class="hljs-comment">// \'start\' | \'center\' | \'end\' | \'39%\' | 0.5, // Text display location</span>\n  autoRotate?: <span class="hljs-keyword">boolean</span>; <span class="hljs-comment">// Is the angle alignment along the line, the default is true</span>\n  style?: IStyle.ILineStyle;\n  content?: string; <span class="hljs-comment">// text content</span>\n  offsetX?: number; <span class="hljs-comment">// Offset in X direction</span>\n  offsetY?: number; <span class="hljs-comment">// Offset in Y direction</span>\n}\n</code></pre><h3 id="the-graphic-style-attribute-of-the-auxiliary-box">The graphic style attribute of the auxiliary box</h3>\n<pre><code><span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">IRegionStyle</span> {</span>\n  lineWidth?: number;  <span class="hljs-comment">// Border width of auxiliary box</span>\n  fill?: string; <span class="hljs-comment">// The filling color of auxiliary box </span>\n  fillOpacity?: number;  <span class="hljs-comment">// Background opciaty of auxiliary box</span>\n  stroke?: string; <span class="hljs-comment">// Border color settings for auxiliary box</span>\n}\n</code></pre><h3 id="event">Event</h3>\n<pre><code><span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">IGuideEvent</span> {</span>\n  onMouseDown?: eventFunc;\n  onMouseMove?: eventFunc;\n  onMouseLeave?: eventFunc;\n  onMouseUp?: eventFunc;\n  onClick?: eventFunc;\n  onDbClick?: eventFunc;\n  onTouchStart?: eventFunc;\n  onTouchMove?: eventFunc;\n  onTouchEnd?: eventFunc;\n}\n</code></pre>'},1226:function(module,exports){module.exports='<h1 id="legend">Legend</h1>\n<p>图例（legend）是图表的辅助元素，使用颜色、大小、形状区分不同的数据类型，用于图表中数据的筛选。根据设置图形属性映射以及数据的类型自动生成不同的图例。</p>\n<p>shape, color, size 这三个图形属性如果判断接收的参数是数据源的字段时，会自动生成不同的图例；\nshape 属性，会根据不同的 shape 类型生成图例；\ncolor 属性, 会赋予不同的图例项不同的颜色来区分图形；\nsize 属性, 在图例上显示图形的大小。</p>\n<h1 id="api">API</h1>\n<h3 id="datakey-string-">dataKey?: string;</h3>\n<ul>\n<li>描述：数据的 key。</li>\n</ul>\n<h3 id="show-boolean-">show?: boolean;</h3>\n<ul>\n<li>描述：是否显示。</li>\n</ul>\n<h3 id="position-string-">position?: string;</h3>\n<ul>\n<li>描述：设置图例的显示位置，可设置的值有 12 个：left-top,left-center,left-bottom,right-top,right-bottom, right-center,top-left,top-center,top-bottom,bottom-left,bottom-center,bottom-right。也可使用 bottom,top,left,right 设置位置，此时对应的值分别为 bottom-center,top-center,left-bottom,right-bottom。</li>\n</ul>\n<h3 id="title-null-object-">title?: null | object;</h3>\n<ul>\n<li>描述：图例标题的显示样式设置，如果值为 null，表示不展示图例标题，默认不展示。</li>\n</ul>\n<h3 id="custom-boolean-">custom?: boolean;</h3>\n<ul>\n<li>描述：默认为 false，当 custom 为 true，表示不使用默认生成的图例，允许用户自定义图例，包括具体的图例项以及 click、hover 交互。\n自定义图例时需要用户自己声明具体的图例项 items(该属性是一个对象数组，数组中每一项为一个对象类型，结构为： { value: &#39;&#39;, marker:{fill: &#39;red&#39;}})以及图例项的 hover 和 click 事件。</li>\n</ul>\n<h3 id="offset-number-">offset?: number;</h3>\n<ul>\n<li>描述：数值，图例偏移值</li>\n</ul>\n<h3 id="offsetx-number-">offsetX?: number;</h3>\n<ul>\n<li>描述：图例 x 方向的偏移值，数值类型，数值单位为 &#39;px&#39;，默认值为 0。</li>\n</ul>\n<h3 id="offsety-number-">offsetY?: number;</h3>\n<ul>\n<li>描述：图例 Y 方向的偏移值，数值类型，数值单位为 &#39;px&#39;，默认值为 0。</li>\n</ul>\n<h3 id="items-object-">items?: object[];</h3>\n<ul>\n<li>描述：自定义图例的配置。需要用户自己声明具体的图例项（每个图例项结构为 { value: &#39;&#39;, fill: &#39;&#39;, marker: &#39;&#39; }）以及图例项的 hover 和 click 事件。</li>\n</ul>\n<h3 id="itemgap-number-">itemGap?: number;</h3>\n<ul>\n<li>描述：对分类类型的图例生效，表示图例每项之间的间距，如果是水平排布则为左右间距，如果是竖直排布则为上下间距。</li>\n</ul>\n<h3 id="titlegap-number-">titleGap?: number;</h3>\n<ul>\n<li>描述：废弃</li>\n</ul>\n<h3 id="itemmarginbottom-number-">itemMarginBottom?: number;</h3>\n<ul>\n<li>描述：对分类类型的图例生效，表示各个图例项垂直方向的间距。</li>\n</ul>\n<h3 id="itemsgroup-object-">itemsGroup?: object[];</h3>\n<ul>\n<li>描述：废弃</li>\n</ul>\n<h3 id="layout-string-">layout?: string;</h3>\n<ul>\n<li>描述：对分类类型的图例生效，用于设置各个图例项的排列方式，可设置值包括：vertical、horizontal，分别表示垂直和水平排布。</li>\n</ul>\n<h3 id="allowallcanceled-boolean-">allowAllCanceled?: boolean;</h3>\n<ul>\n<li>描述：对分类类型的图例生效，表示是否允许所有图例项被取消选中，默认为 false，即必须保留一个被选中的图例项。</li>\n</ul>\n<h3 id="backpadding-number-">backPadding?: number[];</h3>\n<ul>\n<li>描述：废弃</li>\n</ul>\n<h3 id="itemwidth-number-">itemWidth?: number;</h3>\n<ul>\n<li>描述：对分类类型的图例生效，设置图例项的宽度，当图例有很多图例项，并且用户想要这些图例项能垂直对齐时，此时这个属性可帮用户实现此效果。</li>\n</ul>\n<h3 id="uncheckcolor-string-">unCheckColor?: string;</h3>\n<ul>\n<li>描述：对分类类型的图例生效，用于取消选中的图例文本颜色。</li>\n</ul>\n<h3 id="background-object-">background?: object;</h3>\n<ul>\n<li>描述：对分类类型的图例生效，用于设置图例的背景样式。</li>\n</ul>\n<pre><code>{\n  <span class="hljs-attribute">fill</span>: <span class="hljs-string">\'#000\'</span>,\n  fillOpacity: <span class="hljs-number">0.3</span>\n}\n</code></pre><h3 id="itemformatter-formatterfunc-">itemFormatter?: formatterFunc;</h3>\n<ul>\n<li>描述：回调函数，用于格式化图例每项的文本显示。</li>\n</ul>\n<pre><code>itemFormatter(<span class="hljs-keyword">val</span>) {\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">val</span>; <span class="hljs-comment">// val 为每个图例项的文本值</span>\n}\n</code></pre><h3 id="marker-string-func-">marker?: string | func;</h3>\n<ul>\n<li>描述：对分类类型的图例生效，用于设置图例的 marker 样式，默认按照 geom 的类型显示。</li>\n</ul>\n<p>当为 string 类型时，即表示使用默认提供的类型，支持的类型如下：</p>\n<p>todo</p>\n<p>marker 也支持自定义 shape，使用方式如下，</p>\n<pre><code>/**\n * 自定义 marker 形状\n * <span class="hljs-title">@param</span>  {number} <span class="hljs-keyword">x</span>   该 marker 的横轴坐标\n * <span class="hljs-title">@param</span>  {number} y   该 marker 的纵轴坐标\n * <span class="hljs-title">@param</span>  {number} r   该 marker 的半径大小\n * <span class="hljs-title">@return</span> {<span class="hljs-keyword">null</span>}\n */\nmarker(<span class="hljs-keyword">x</span>, y, r) {}\n</code></pre><p>以下代码绘制了如图所示的 marker：</p>\n<pre><code>marker(x, y, r) {\n  return [\n    [ <span class="hljs-string">\'M\'</span>, x - r, y ],\n    [ <span class="hljs-string">\'L\'</span>, x + r, y ]\n  ];\n}\n</code></pre><h3 id="textstyle-istyle-itextstyle-">textStyle?: IStyle.ITextStyle;</h3>\n<ul>\n<li>描述：用于设置图例项的文本样式。</li>\n</ul>\n<pre><code><span class="hljs-attribute">textStyle</span>: {\n  <span class="hljs-attribute">textAlign</span>: <span class="hljs-string">\'center\'</span>, <span class="hljs-comment">// 文本对齐方向，可取值为： start middle end</span>\n  <span class="hljs-attribute">fill</span>: <span class="hljs-string">\'#404040\'</span>, <span class="hljs-comment">// 文本的颜色</span>\n  <span class="hljs-attribute">fontSize</span>: <span class="hljs-string">\'12\'</span>, <span class="hljs-comment">// 文本大小</span>\n  <span class="hljs-attribute">fontWeight</span>: <span class="hljs-string">\'bold\'</span>, <span class="hljs-comment">// 文本粗细</span>\n  <span class="hljs-attribute">rotate</span>: <span class="hljs-number">30</span>, <span class="hljs-comment">// 文本旋转角度，以角度为单位，仅当 autoRotate 为 false 时生效</span>\n  <span class="hljs-attribute">textBaseline</span>: <span class="hljs-string">\'top\'</span> <span class="hljs-comment">// 文本基准线，可取 top middle bottom，默认为middle</span>\n}\n</code></pre><h3 id="checkable-boolean-">checkable?: boolean;</h3>\n<ul>\n<li>描述：废弃</li>\n</ul>\n<h3 id="clickable-boolean-">clickable?: boolean;</h3>\n<ul>\n<li>描述：对分类类型的图例生效，设置图例项是否允许点击，默认为 true，即允许点击。</li>\n</ul>\n<h3 id="hoverable-boolean-">hoverable?: boolean;</h3>\n<ul>\n<li>描述：对分类类型的图例生效，设置是否开启鼠标 hover 至图例的交互效果，默认为 true，即开启动画。</li>\n</ul>\n<h3 id="usehtml-boolean-">useHtml?: boolean;</h3>\n<ul>\n<li>描述：针对分类类型图例，用于开启是否使用 html 渲染图例，默认为 false，true 表示使用 html 渲染图例。</li>\n</ul>\n<h3 id="autowrap-boolean-">autoWrap?: boolean;</h3>\n<ul>\n<li>描述：废弃。</li>\n</ul>\n<h3 id="autoposition-boolean-">autoPosition?: boolean;</h3>\n<ul>\n<li>描述：废弃。</li>\n</ul>\n<h3 id="container-any-">container?: any;</h3>\n<ul>\n<li>描述：当 useHtml 为 true 时生效，用于指定生成图例的 dom 容器，那么该值必须为 dom 容器的 id 值为分类类型的话，则支持传入索引值。</li>\n</ul>\n<h3 id="containertpl-string-">containerTpl?: string;</h3>\n<ul>\n<li>描述：当 useHtml 为 true 时生效，用于指定图例容器的模板，默认值如下：</li>\n</ul>\n<pre><code>containerTpl: <span class="hljs-string">\'&lt;div class="</span>g2-legend<span class="hljs-string">" style="</span>position:absolute;top:<span class="hljs-number">20</span>px;right:<span class="hljs-number">60</span>px;width:auto;<span class="hljs-string">"&gt;\'</span>\n  + <span class="hljs-string">\'&lt;h4 class="</span>g2-legend-title<span class="hljs-string">"&gt;&lt;/h4&gt;\'</span>\n  + <span class="hljs-string">\'&lt;ul class="</span>g2-legend-<span class="hljs-built_in">list</span><span class="hljs-string">" style="</span><span class="hljs-built_in">list</span>-style-<span class="hljs-built_in">type</span>:none;margin:<span class="hljs-number">0</span>;padding:<span class="hljs-number">0</span>;<span class="hljs-string">"&gt;&lt;/ul&gt;\'</span>\n  + <span class="hljs-string">\'&lt;/div&gt;\'</span>;\n</code></pre><h3 id="itemtpl-string-func-">itemTpl?: string | func;</h3>\n<ul>\n<li>描述：当 useHtml 为 true 时生效，用于指定生成图例的图例项 html 模板，默认值如下：</li>\n</ul>\n<pre><code><span class="xml">itemTpl: \'<span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"g2-legend-list-item item-</span></span></span><span class="hljs-template-variable">{index}</span><span class="xml"><span class="hljs-tag"><span class="hljs-string"> </span></span></span><span class="hljs-template-variable">{checked}</span><span class="xml"><span class="hljs-tag"><span class="hljs-string">"</span> <span class="hljs-attr">data-color</span>=<span class="hljs-string">"</span></span></span><span class="hljs-template-variable">{originColor}</span><span class="xml"><span class="hljs-tag"><span class="hljs-string">"</span> <span class="hljs-attr">data-value</span>=<span class="hljs-string">"</span></span></span><span class="hljs-template-variable">{originValue}</span><span class="xml"><span class="hljs-tag"><span class="hljs-string">"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"cursor: pointer;font-size: 14px;"</span>&gt;</span>\'\n  + \'<span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"g2-legend-marker"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"width:10px;height:10px;border-radius:50%;display:inline-block;margin-right:10px;background-color: </span></span></span><span class="hljs-template-variable">{color}</span><span class="xml"><span class="hljs-tag"><span class="hljs-string">;"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span>\'\n  + \'<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"g2-legend-text"</span>&gt;</span></span><span class="hljs-template-variable">{value}</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\'\n  + \'<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>\';</span>\n</code></pre><h3 id="selectedmode-string-">selectedMode?: string;</h3>\n<ul>\n<li>针对分类类型图例，当 clickable 为 true 时该配置项生效，用于设置图例的选中交互模式，可配置的属性:</li>\n</ul>\n<blockquote>\n<p>selectedMode: &#39;single&#39;：表示开启单选模式；</p>\n</blockquote>\n<blockquote>\n<p>selectedMode: &#39;multiple&#39;：表示开启多选模式，默认为 multiple。</p>\n</blockquote>\n<h3 id="reversed-boolean-">reversed?: boolean;</h3>\n<ul>\n<li>描述：废弃</li>\n</ul>\n<h3 id="slidable-boolean-">slidable?: boolean;</h3>\n<ul>\n<li>描述：针对连续图例，用于设置连续图例是否允许滑动，默认为 true，即开启滑动操作。</li>\n</ul>\n<h3 id="width-number-">width?: number;</h3>\n<ul>\n<li>描述：针对连续图例，用于设置图例的宽度。</li>\n</ul>\n<h3 id="height-number-">height?: number;</h3>\n<ul>\n<li>描述：针对连续图例，用于设置图例的高度。</li>\n</ul>\n<h3 id="legendmarker-any-">legendMarker?: any;</h3>\n<ul>\n<li>描述：废弃。</li>\n</ul>\n<h3 id="legendlistitem-any-">legendListItem?: any;</h3>\n<ul>\n<li>描述：废弃。</li>\n</ul>\n<h3 id="attachlast-boolean-">attachLast?: boolean;</h3>\n<ul>\n<li>描述：是否启用尾部跟随图例(tail-legend)，尾部跟随图例自动跟随 geom 的最后一个数据点，适用的图表类型为 line、stackLine、area、stackArea。 默认为 false，即不启用。</li>\n</ul>\n'},1227:function(module,exports){module.exports='<h1 id="legend">Legend</h1>\n<p>Legend is the auxiliary element of graph. It uses color, size and shape to distinguish different data types for data filtering in graph. Different legend is generated automatically based on the set of graph attribute mapping and data type.</p>\n<p>shape, color and size, these three graphics attributes automatically generate different legends if they determine that the received parameters are fields of the data source.</p>\n<p>shape,the legend is generated according to different shape types.\ncolor,It will give different illustrations and different colors to distinguish graphics.\nsize,Displays the size of the graph in legend.</p>\n<h1 id="api">API</h1>\n<h3 id="datakey-string-">dataKey?: string;</h3>\n<ul>\n<li>Description: the key of data.</li>\n</ul>\n<h3 id="show-boolean-">show?: boolean;</h3>\n<ul>\n<li>Description: show or not.</li>\n</ul>\n<h3 id="position-string-">position?: string;</h3>\n<ul>\n<li>Description: Set the display position of the legend. There are 12 values that can be set: left-top,left-center,left-bottom,right-top,right-bottom, right-center,top-left,top-center,top-bottom,bottom-left,bottom-center,bottom-right.You can also use bottom, top, left, right to set the location, then the corresponding values are bottom-center,top-center,left-bottom,right-bottom.</li>\n</ul>\n<h3 id="title-null-object-">title?: null | object;</h3>\n<ul>\n<li>Description: Legend title display style settings, if the value is null, that does not display legend title, the default is not displayed.</li>\n</ul>\n<h3 id="custom-boolean-">custom?: boolean;</h3>\n<ul>\n<li>Description: The default is false, and when custom is true, it means that the default generated legend is not used, allowing users to customize the legend, including specific legend items and click, hover interaction.Customizing a legend requires the user to declare specific legend items (this property is an array of objects, each of which is an object type, structured as: {value:&#39;&#39;, marker: {fill: &#39;red&#39;}}), and the hover and click events for the legend items.</li>\n</ul>\n<h3 id="offset-number-">offset?: number;</h3>\n<ul>\n<li>Description: Legend offset value</li>\n</ul>\n<h3 id="offsetx-number-">offsetX?: number;</h3>\n<ul>\n<li>Description: The offset value of the legend x, numeric type, numeric unit &#39;px&#39;, and the default value is 0.</li>\n</ul>\n<h3 id="offsety-number-">offsetY?: number;</h3>\n<ul>\n<li>Description: The offset value of the legend y, numeric type, numeric unit &#39;px&#39;, and the default value is 0.</li>\n</ul>\n<h3 id="items-object-">items?: object[];</h3>\n<ul>\n<li>Description: Customizing a legend requires the user to declare specific legend items (this property is an array of objects, each of which is an object type, structured as: {value:&#39;&#39;, marker: {fill: &#39;red&#39;}}), and the hover and click events for the legend items.</li>\n</ul>\n<h3 id="itemgap-number-">itemGap?: number;</h3>\n<ul>\n<li>Description: For legends of classification types, indicating the spacing between each item of the legend. If the legend is horizontally arranged, it is left and right spacing. If it is vertically arranged, it is upper and lower spacing.</li>\n</ul>\n<h3 id="titlegap-number-">titleGap?: number;</h3>\n<ul>\n<li>Description: Discarded</li>\n</ul>\n<h3 id="itemmarginbottom-number-">itemMarginBottom?: number;</h3>\n<ul>\n<li>Description: The legend of the classification type takes effect, indicating the distance between the vertical directions of each legend.</li>\n</ul>\n<h3 id="itemsgroup-object-">itemsGroup?: object[];</h3>\n<ul>\n<li>Description: Discarded</li>\n</ul>\n<h3 id="layout-string-">layout?: string;</h3>\n<ul>\n<li>Description: Effective for legends of classification type, used to set the arrangement of each legend item, can be set values include: vertical, horizontal, indicating vertical and horizontal arrangement.</li>\n</ul>\n<h3 id="allowallcanceled-boolean-">allowAllCanceled?: boolean;</h3>\n<ul>\n<li>Description: Effective for legends of classification types, indicates whether all legend items are allowed to be unchecked, defaulting to false, that is, one selected legend item must be retained.</li>\n</ul>\n<h3 id="backpadding-number-">backPadding?: number[];</h3>\n<ul>\n<li>Description: Discarded</li>\n</ul>\n<h3 id="itemwidth-number-">itemWidth?: number;</h3>\n<ul>\n<li>Description: The legend of the classification type takes effect. Set the width of the legend item, when the legend has many legend items, and the user wants these legend items to be vertical alignment, this property can help users achieve this effect.</li>\n</ul>\n<h3 id="uncheckcolor-string-">unCheckColor?: string;</h3>\n<ul>\n<li>Description: The legend of the classification type takes effect. Used to cancel the color of legend text.</li>\n</ul>\n<h3 id="background-object-">background?: object;</h3>\n<ul>\n<li>Description: The legend of the classification type takes effect.Used to set the background style used of the legend.</li>\n</ul>\n<pre><code>{\n  <span class="hljs-attribute">fill</span>: <span class="hljs-string">\'#000\'</span>,\n  fillOpacity: <span class="hljs-number">0.3</span>\n}\n</code></pre><h3 id="itemformatter-formatterfunc-">itemFormatter?: formatterFunc;</h3>\n<ul>\n<li>Description: Callback function which is used to format each text of legend.</li>\n</ul>\n<pre><code>itemFormatter(<span class="hljs-keyword">val</span>) {\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">val</span>; <span class="hljs-comment">// Val is the text value for each legend item.</span>\n}\n</code></pre><h3 id="marker-string-func-">marker?: string | func;</h3>\n<ul>\n<li>Description: Effective for legends of classification types, used to set the marker style of legends, displayed by default according to the type of geom.</li>\n</ul>\n<p>When string type is used, it means that the type supplied by default is supported. The type of support is as follows:</p>\n<p>todo</p>\n<p>marker also supports custom shape, which is used as follows.</p>\n<pre><code>/**\n * custom the shape of marker \n * @<span class="hljs-keyword">param</span>  {number} <span class="hljs-keyword">x</span>   <span class="hljs-keyword">The</span> <span class="hljs-keyword">maker</span>\'s x axis coordinate\n * @<span class="hljs-keyword">param</span>  {number} <span class="hljs-keyword">y</span>   <span class="hljs-keyword">The</span> <span class="hljs-keyword">maker</span>\'s y axis coordinate\n * @<span class="hljs-keyword">param</span>  {number} <span class="hljs-keyword">r</span>   <span class="hljs-keyword">The</span> <span class="hljs-keyword">maker</span>\'s radius\n * @<span class="hljs-keyword">return</span> {null}\n */\nmarker(x, y, r) {}\n</code></pre><p>The following code draws marker as shown in the picture:</p>\n<pre><code>marker(x, y, r) {\n  return [\n    [ <span class="hljs-string">\'M\'</span>, x - r, y ],\n    [ <span class="hljs-string">\'L\'</span>, x + r, y ]\n  ];\n}\n</code></pre><h3 id="textstyle-istyle-itextstyle-">textStyle?: IStyle.ITextStyle;</h3>\n<ul>\n<li>Description: Text style for setting legend items.</li>\n</ul>\n<pre><code><span class="hljs-attribute">textStyle</span>: {\n  <span class="hljs-attribute">textAlign</span>: <span class="hljs-string">\'center\'</span>, <span class="hljs-comment">// The alignment direction of the text , it can be set as follows: start middle end</span>\n  <span class="hljs-attribute">fill</span>: <span class="hljs-string">\'#404040\'</span>, <span class="hljs-comment">// The color of text</span>\n  <span class="hljs-attribute">fontSize</span>: <span class="hljs-string">\'12\'</span>, <span class="hljs-comment">// The fontSize of text</span>\n  <span class="hljs-attribute">fontWeight</span>: <span class="hljs-string">\'bold\'</span>, <span class="hljs-comment">// The fontWeight of text</span>\n  <span class="hljs-attribute">rotate</span>: <span class="hljs-number">30</span>, <span class="hljs-comment">// The rotation angle of the text is taken as an angle, only when autoRotate is false.</span>\n  <span class="hljs-attribute">textBaseline</span>: <span class="hljs-string">\'top\'</span> <span class="hljs-comment">// The text baseline which can be set as top middle bottom, and the default is middle.</span>\n}\n</code></pre><h3 id="checkable-boolean-">checkable?: boolean;</h3>\n<ul>\n<li>Description: Discarded</li>\n</ul>\n<h3 id="clickable-boolean-">clickable?: boolean;</h3>\n<ul>\n<li>Description: For the legend of the classification type, set whether the legend item is allowed to click, the default is true, that is, allow to click.</li>\n</ul>\n<h3 id="hoverable-boolean-">hoverable?: boolean;</h3>\n<ul>\n<li>Description: For legends of classification type, set whether to turn on the mouse hover to the interactive effect of the legend, the default is true, that is, to turn on animation.</li>\n</ul>\n<h3 id="usehtml-boolean-">useHtml?: boolean;</h3>\n<ul>\n<li>Description: For classified type legends, it is used to open whether to use HTML to render legends, default to false, true means to use HTML to render legends.</li>\n</ul>\n<h3 id="autowrap-boolean-">autoWrap?: boolean;</h3>\n<ul>\n<li>Description: Discarded</li>\n</ul>\n<h3 id="autoposition-boolean-">autoPosition?: boolean;</h3>\n<ul>\n<li>Description: Discarded</li>\n</ul>\n<h3 id="container-any-">container?: any;</h3>\n<ul>\n<li>Description: When useHtml is true and is used to specify the DOM container that generates the legend, the incoming index value is supported if the value must be the ID value of the DOM container for the classification type.</li>\n</ul>\n<h3 id="containertpl-string-">containerTpl?: string;</h3>\n<ul>\n<li>Description: When useHtml is true, it will be used to specify templates for the legend container. The default values are as follows:</li>\n</ul>\n<pre><code>containerTpl: <span class="hljs-string">\'&lt;div class="</span>g2-legend<span class="hljs-string">" style="</span>position:absolute;top:<span class="hljs-number">20</span>px;right:<span class="hljs-number">60</span>px;width:auto;<span class="hljs-string">"&gt;\'</span>\n  + <span class="hljs-string">\'&lt;h4 class="</span>g2-legend-title<span class="hljs-string">"&gt;&lt;/h4&gt;\'</span>\n  + <span class="hljs-string">\'&lt;ul class="</span>g2-legend-<span class="hljs-built_in">list</span><span class="hljs-string">" style="</span><span class="hljs-built_in">list</span>-style-<span class="hljs-built_in">type</span>:none;margin:<span class="hljs-number">0</span>;padding:<span class="hljs-number">0</span>;<span class="hljs-string">"&gt;&lt;/ul&gt;\'</span>\n  + <span class="hljs-string">\'&lt;/div&gt;\'</span>;\n</code></pre><h3 id="itemtpl-string-func-">itemTpl?: string | func;</h3>\n<ul>\n<li>Description: Effective when useHtml is true, used to specific the legend item HTML template which is to generate the legend. The default value is as follows:</li>\n</ul>\n<pre><code><span class="xml">itemTpl: \'<span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"g2-legend-list-item item-</span></span></span><span class="hljs-template-variable">{index}</span><span class="xml"><span class="hljs-tag"><span class="hljs-string"> </span></span></span><span class="hljs-template-variable">{checked}</span><span class="xml"><span class="hljs-tag"><span class="hljs-string">"</span> <span class="hljs-attr">data-color</span>=<span class="hljs-string">"</span></span></span><span class="hljs-template-variable">{originColor}</span><span class="xml"><span class="hljs-tag"><span class="hljs-string">"</span> <span class="hljs-attr">data-value</span>=<span class="hljs-string">"</span></span></span><span class="hljs-template-variable">{originValue}</span><span class="xml"><span class="hljs-tag"><span class="hljs-string">"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"cursor: pointer;font-size: 14px;"</span>&gt;</span>\'\n  + \'<span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"g2-legend-marker"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"width:10px;height:10px;border-radius:50%;display:inline-block;margin-right:10px;background-color: </span></span></span><span class="hljs-template-variable">{color}</span><span class="xml"><span class="hljs-tag"><span class="hljs-string">;"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span>\'\n  + \'<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"g2-legend-text"</span>&gt;</span></span><span class="hljs-template-variable">{value}</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\'\n  + \'<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>\';</span>\n</code></pre><h3 id="selectedmode-string-">selectedMode?: string;</h3>\n<ul>\n<li>For classified type legends, this configuration entry takes effect when the clickable is true to set the selected interaction mode of the legend, configurable properties:</li>\n</ul>\n<blockquote>\n<p>selectedMode: &#39;single&#39;: means opening the mode of individual election</p>\n</blockquote>\n<blockquote>\n<p>selectedMode: &#39;multiple&#39;: means opening multi select mode, defaults to multiple</p>\n</blockquote>\n<h3 id="reversed-boolean-">reversed?: boolean;</h3>\n<ul>\n<li>Description: Discarded</li>\n</ul>\n<h3 id="slidable-boolean-">slidable?: boolean;</h3>\n<ul>\n<li>Description: For consecutive legends, it is used to set whether the consecutive legends allow sliding , default to true, that is, to open sliding operation.</li>\n</ul>\n<h3 id="width-number-">width?: number;</h3>\n<ul>\n<li>Description: For consecutive legend, it is used to set the width of the legend.</li>\n</ul>\n<h3 id="height-number-">height?: number;</h3>\n<ul>\n<li>Description: For consecutive legend, it is used to set the height of the legend.</li>\n</ul>\n<h3 id="legendmarker-any-">legendMarker?: any;</h3>\n<ul>\n<li>Description: Discarded</li>\n</ul>\n<h3 id="legendlistitem-any-">legendListItem?: any;</h3>\n<ul>\n<li>Description: Discarded</li>\n</ul>\n<h3 id="attachlast-boolean-">attachLast?: boolean;</h3>\n<ul>\n<li>Description: Whether tail-legend is enabled or not, the tail-legend automatically follows the last data point of the geom, and the applicable chart types are line, stackLine, area, stackArea. The default is false, which is not enabled.</li>\n</ul>\n'},1228:function(module,exports){module.exports='<h1 id="scale">Scale</h1>\n<p>度量 Scale，是数据空间到图形空间的转换桥梁，负责原始数据到 [0, 1] 区间数值的相互转换工作。针对不同的数据类型对应不同类型的度量。</p>\n<h1 id="-">类型</h1>\n<p>度量的类型是由原始数据的值类型所决定的，所以在介绍度量的类型之前，需要了解下 BizCharts 对数据的分类方式。</p>\n<p>根据数据的类型，支持以下几种度量类型：</p>\n<ul>\n<li>identity，常量类型的数值，也就是说数据的某个字段是不变的常量；</li>\n<li>linear，连续的数字 [1, 2, 3, 4, 5]；</li>\n<li>cat，分类, [&#39;男&#39;, &#39;女&#39;]；</li>\n<li>time，连续的时间类型；</li>\n<li>timeCat，非连续的时间，比如股票的时间不包括周末或者未开盘的日期；</li>\n<li>log，连续非线性的 Log 数据，将 [1, 10, 100, 1000] 转换成 [0, 1, 2, 3]（假设底数是 10）；</li>\n<li>pow，连续非线性的 pow 数据，将 [2, 4, 8, 16, 32] 转换成 [1, 2, 3, 4, 5]。</li>\n</ul>\n<h1 id="api">API</h1>\n<p>\b 支持多种类型 ILinearScale | ICatScale | ILogScale | IPowScale | ITimeScale | ITimeCatScale</p>\n<h3 id="ilinearscale">ILinearScale</h3>\n<p>连续的数字</p>\n<pre><code>interface ICommonScale {\n  dataKey: string;\n  type?: string;\n  formatter?: string | formatterFunc;\n  range?: number[];\n  alias?: string;\n  tickCount?: number;\n  ticks?: number[];\n}\n<span class="hljs-built_in">\ninterface </span>ILinearCommonScale {\n  nice?: boolean;\n  min?: number;\n  max?: number;\n  tickInterval?: number;\n}\n<span class="hljs-built_in">\ntype </span>ILinearScale = ICommonScale &amp; ILinearCommonScale;\n</code></pre><h3 id="icatscale">ICatScale</h3>\n<p>分类</p>\n<pre><code>interface ISCatScale {\n  values?: string;\n}\n<span class="hljs-built_in">\ntype </span>ICatScale = ILinearCommonScale &amp; ISCatScale;\n</code></pre><h3 id="ilogscale">ILogScale</h3>\n<p>连续非线性的 Log</p>\n<pre><code>interface ISLogScale {\n  base?: number;\n}\n<span class="hljs-built_in">\ntype </span>ILogScale = ICommonScale &amp; ILinearCommonScale &amp;  ISLogScale;\n</code></pre><h3 id="ipowscale">IPowScale</h3>\n<p>连续非线性的 pow 数据</p>\n<pre><code>ISPowScale {\n  exponent?: number;\n}\n<span class="hljs-built_in">\ntype </span>IPowScale = ICommonScale &amp; ILinearCommonScale &amp;  ISPowScale;\n</code></pre><h3 id="itimescale">ITimeScale</h3>\n<p>连续的时间类型</p>\n<pre><code>interface ISTimeScale {\n  mask?: string;\n}\n<span class="hljs-built_in">\ntype </span>ITimeScale = ICommonScale &amp; ILinearCommonScale &amp;  ISTimeScale;\n</code></pre><h3 id="itimecatscale">ITimeCatScale</h3>\n<p>非连续的时间</p>\n<pre><code><span class="hljs-keyword">type</span> <span class="hljs-type">ITimeCatScale </span>= ILinearCommonScale &amp;  ISTimeCatScale;\n</code></pre><h2 id="-">通用依赖接口</h2>\n<h3 id="type-string-">type?: string;</h3>\n<ul>\n<li>描述：指定不同的度量类型，支持的 type 在上面已经列出。</li>\n</ul>\n<h3 id="formatter-string-formatterfunc-">formatter?: string | formatterFunc;</h3>\n<ul>\n<li>描述：回调函数，用于格式化坐标轴刻度点的文本显示，会影响数据在坐标轴 axis、图例 legend、tooltip 上的显示。</li>\n</ul>\n<h3 id="range-number-">range?: number[];</h3>\n<ul>\n<li>描述：输出数据的范围，默认[0, 1]，格式为 [min, max]，min 和 max 均为 0 至 1 范围的数据。</li>\n</ul>\n<h3 id="alias-string-">alias?: string;</h3>\n<ul>\n<li>描述：该数据字段的显示别名，一般用于将字段的英文名称转换成中文名。</li>\n</ul>\n<h3 id="tickcount-number-">tickCount?: number;</h3>\n<ul>\n<li>描述：坐标轴上刻度点的个数，不同的度量类型对应不同的默认值。</li>\n</ul>\n<h3 id="ticks-number-">ticks?: number[];</h3>\n<ul>\n<li>描述：用于指定坐标轴上刻度点的文本信息，当用户设置了 ticks 就会按照 ticks 的个数和文本来显示。</li>\n</ul>\n<h3 id="nice-boolean-">nice?: boolean;</h3>\n<ul>\n<li>描述：是否将 ticks 进行优化，变更数据的最小值、最大值，使得每个 tick 都是用户易于理解的数据</li>\n</ul>\n<h3 id="min-number-">min?: number;</h3>\n<ul>\n<li>描述：最小值</li>\n</ul>\n<h3 id="max-number-">max?: number;</h3>\n<ul>\n<li>描述：最大值</li>\n</ul>\n<h3 id="tickinterval-number-">tickInterval?: number;</h3>\n<ul>\n<li>描述：用于指定坐标轴各个标度点的间距，是原始数据之间的间距差值，time 类型需要转换成时间戳，tickCount 和 tickInterval 不可以同时声明。</li>\n</ul>\n<h3 id="values-string-">values?: string;</h3>\n<ul>\n<li>描述：具体的分类的值，一般用于指定具体的顺序和枚举的对应关系</li>\n</ul>\n<h3 id="base-number-">base?: number;</h3>\n<ul>\n<li>描述：Log 的基数，默认是 2</li>\n</ul>\n<h3 id="exponent-number-">exponent?: number;</h3>\n<ul>\n<li>描述：指数，默认 2</li>\n</ul>\n<h3 id="mask-string-">mask?: string;</h3>\n<ul>\n<li>描述：数据的格式化格式 默认：&#39;yyyy-mm-dd&#39;,</li>\n</ul>\n<h3 id="sync-boolean">sync?: boolean</h3>\n<ul>\n<li>描述：当 chart 存在不同数据源的 view 时，用于统一相同数据属性的值域范围。 todo</li>\n</ul>\n'},1229:function(module,exports){module.exports='<h1 id="scale">Scale</h1>\n<p>Scale is a bridge between data space and graphical space, responsible for the conversion of initial data to [0,1] interval values. Different types of metrics correspond to different data types.</p>\n<h1 id="type">Type</h1>\n<p>The type of measurement is determined by the value type of the initial data, so before introduce the type of measurement, we need to know how BizCharts classifies the data.</p>\n<p>Depending on the type of data, the following types of metrics are supported.</p>\n<ul>\n<li>identity, the constant type value, that is to say, a certain field of the data is an invariant constant;</li>\n<li>linear, continuous numbers [1, 2, 3, 4, 5];</li>\n<li>cat, classification, [&#39;man&#39;, &#39;woman&#39;];</li>\n<li>time, continuous time type;</li>\n<li>timeCat, discontinuous time, such as stock time, excluding weekends or open dates;</li>\n<li>log, continuous nonlinear Log data. convert [1, 10, 100, 1000] to [0, 1, 2, 3]（suppose the base number is 10）;</li>\n<li>pow, continuous nonlinear Pow data. convert [2, 4, 8, 16, 32] to [1, 2, 3, 4, 5].</li>\n</ul>\n<h1 id="api">API</h1>\n<p>\b Support multiple types ILinearScale | ICatScale | ILogScale | IPowScale | ITimeScale | ITimeCatScale</p>\n<h3 id="ilinearscale">ILinearScale</h3>\n<p>Continuous figures</p>\n<pre><code>interface ICommonScale {\n  dataKey: string;\n  type?: string;\n  formatter?: string | formatterFunc;\n  range?: number[];\n  alias?: string;\n  tickCount?: number;\n  ticks?: number[];\n}\n<span class="hljs-built_in">\ninterface </span>ILinearCommonScale {\n  nice?: boolean;\n  min?: number;\n  max?: number;\n  tickInterval?: number;\n}\n<span class="hljs-built_in">\ntype </span>ILinearScale = ICommonScale &amp; ILinearCommonScale;\n</code></pre><h3 id="icatscale">ICatScale</h3>\n<p>Classification</p>\n<pre><code>interface ISCatScale {\n  values?: string;\n}\n<span class="hljs-built_in">\ntype </span>ICatScale = ILinearCommonScale &amp; ISCatScale;\n</code></pre><h3 id="ilogscale">ILogScale</h3>\n<p>Continuous nonlinear Log data</p>\n<pre><code>interface ISLogScale {\n  base?: number;\n}\n<span class="hljs-built_in">\ntype </span>ILogScale = ICommonScale &amp; ILinearCommonScale &amp;  ISLogScale;\n</code></pre><h3 id="ipowscale">IPowScale</h3>\n<p>Continuous nonlinear Pow data</p>\n<pre><code>ISPowScale {\n  exponent?: number;\n}\n<span class="hljs-built_in">\ntype </span>IPowScale = ICommonScale &amp; ILinearCommonScale &amp;  ISPowScale;\n</code></pre><h3 id="itimescale">ITimeScale</h3>\n<p>Continuous time type</p>\n<pre><code>interface ISTimeScale {\n  mask?: string;\n}\n<span class="hljs-built_in">\ntype </span>ITimeScale = ICommonScale &amp; ILinearCommonScale &amp;  ISTimeScale;\n</code></pre><h3 id="itimecatscale">ITimeCatScale</h3>\n<p>Discontinuous time type</p>\n<pre><code><span class="hljs-keyword">type</span> <span class="hljs-type">ITimeCatScale </span>= ILinearCommonScale &amp;  ISTimeCatScale;\n</code></pre><h2 id="universal-dependency-interface">Universal dependency interface</h2>\n<h3 id="type-string-">type?: string;</h3>\n<ul>\n<li>Description: Different types of metrics are specified, and the supported type is listed above.</li>\n</ul>\n<h3 id="formatter-string-formatterfunc-">formatter?: string | formatterFunc;</h3>\n<ul>\n<li>Description: callback, userd to display the text for formatting coordinate axis scale points which will affect the display of data on axis, legend, tooltip.</li>\n</ul>\n<h3 id="range-number-">range?: number[];</h3>\n<ul>\n<li>Description: The range of output data, default [0, 1], is in the form of [min, max], min and Max are data in the range of 0 to 1.</li>\n</ul>\n<h3 id="alias-string-">alias?: string;</h3>\n<ul>\n<li>Description: The display alias of the data field is commonly which is used to convert the English name of the field to Chinese name.</li>\n</ul>\n<h3 id="tickcount-number-">tickCount?: number;</h3>\n<ul>\n<li>Description: The number of points on the coordinate axis , and different measurement types correspond to different default values.</li>\n</ul>\n<h3 id="ticks-number-">ticks?: number[];</h3>\n<ul>\n<li>Description: Used to specify the text information of scale points on the coordinate axis which is displayed according to the number and text of ticks when the user sets the ticks.</li>\n</ul>\n<h3 id="nice-boolean-">nice?: boolean;</h3>\n<ul>\n<li>Description: Whether ticks optimized to change the minimum and maximum values of the data so that each tick is easily understood by the user</li>\n</ul>\n<h3 id="min-number-">min?: number;</h3>\n<ul>\n<li>Description: minimum</li>\n</ul>\n<h3 id="max-number-">max?: number;</h3>\n<ul>\n<li>Description: maximum</li>\n</ul>\n<h3 id="tickinterval-number-">tickInterval?: number;</h3>\n<ul>\n<li>Description: The interval between the scales on the specified axis is the difference between the original data. The time type needs to be converted to a timestamp. The tickCount and tickInterval cannot be declared simultaneously.</li>\n</ul>\n<h3 id="values-string-">values?: string;</h3>\n<ul>\n<li>Description: The values of specific classifications are generally used to specify the corresponding relationship between specific orders and enumerations.</li>\n</ul>\n<h3 id="base-number-">base?: number;</h3>\n<ul>\n<li>Description: The base of Log and default to 2.</li>\n</ul>\n<h3 id="exponent-number-">exponent?: number;</h3>\n<ul>\n<li>Description: The exponent and default to 2.</li>\n</ul>\n<h3 id="mask-string-">mask?: string;</h3>\n<ul>\n<li>Description: The format of data is default:&#39;yyyy-mm-dd&#39;.</li>\n</ul>\n<h3 id="sync-boolean">sync?: boolean</h3>\n<ul>\n<li>Description: When chart has view of different data sources, the range of values used to unify the same data attributes. todo</li>\n</ul>\n'},123:function(module,exports,__webpack_require__){"use strict";exports.__esModule=!0;var _utils=__webpack_require__(15);exports.default=function(instance){instance.registerHelper("blockHelperMissing",function(context,options){var inverse=options.inverse,fn=options.fn;if(!0===context)return fn(this);if(!1===context||null==context)return inverse(this);if(_utils.isArray(context))return context.length>0?(options.ids&&(options.ids=[options.name]),instance.helpers.each(context,options)):inverse(this);if(options.data&&options.ids){var data=_utils.createFrame(options.data);data.contextPath=_utils.appendContextPath(options.data.contextPath,options.name),options={data:data}}return fn(context,options)})},module.exports=exports.default},1230:function(module,exports){module.exports='<h1 id="series">Series</h1>\n<p>图形，一般指数据直接生成的图形。</p>\n<h1 id="api">API</h1>\n<h3 id="quicktype-string-">quickType?: string;</h3>\n<ul>\n<li>描述：提供常见的图形。支持如下：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>type</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>line</td>\n<td>线型图，点按照 x 轴连接成一条线，构成线图</td>\n</tr>\n<tr>\n<td>smoothLine</td>\n<td>平滑线型图</td>\n</tr>\n<tr>\n<td>dashLine</td>\n<td>虚线型图</td>\n</tr>\n<tr>\n<td>stackLine</td>\n<td>堆积线型图</td>\n</tr>\n<tr>\n<td>area</td>\n<td>面积图, 填充线图跟坐标系之间构成区域图，也可以指定上下范围。</td>\n</tr>\n<tr>\n<td>smoothArea</td>\n<td>平滑面积</td>\n</tr>\n<tr>\n<td>stackArea</td>\n<td>堆积面积</td>\n</tr>\n<tr>\n<td>bar</td>\n<td>柱状图</td>\n</tr>\n<tr>\n<td>stackBar</td>\n<td>堆叠柱状图</td>\n</tr>\n<tr>\n<td>dodgeBar</td>\n<td>分组柱状图</td>\n</tr>\n<tr>\n<td>point</td>\n<td>点，用于点图的构建</td>\n</tr>\n<tr>\n<td>funnel</td>\n<td>对称漏斗图</td>\n</tr>\n<tr>\n<td>pyramid</td>\n<td>漏斗图</td>\n</tr>\n<tr>\n<td>schema</td>\n<td>k 线图，箱型图。</td>\n</tr>\n<tr>\n<td>box</td>\n<td>箱型图</td>\n</tr>\n<tr>\n<td>candle</td>\n<td>烛形图</td>\n</tr>\n<tr>\n<td>polygon</td>\n<td>多边形，可以用于构建热力图、地图等图表类型。，todo</td>\n</tr>\n<tr>\n<td>contour</td>\n<td>todo</td>\n</tr>\n<tr>\n<td>heatmap</td>\n<td>热力图</td>\n</tr>\n<tr>\n<td>edge</td>\n<td>边，适用于树图、流程图、关系图。</td>\n</tr>\n<tr>\n<td>errorBar</td>\n<td>todo</td>\n</tr>\n<tr>\n<td>jitterPoint</td>\n<td>扰动点图</td>\n</tr>\n<tr>\n<td>path</td>\n<td>路径，无序的点连接而成的一条线。</td>\n</tr>\n<tr>\n<td>interval</td>\n<td>使用矩形或者弧形，用面积来表示大小关系的图形，一般构成柱状图、饼图等图表。</td>\n</tr>\n<tr>\n<td>stackInterval</td>\n<td>堆叠</td>\n</tr>\n<tr>\n<td>dodgeInterval</td>\n<td>分组</td>\n</tr>\n<tr>\n<td>sector</td>\n<td>todo</td>\n</tr>\n</tbody>\n</table>\n<h3 id="position-string-string-">position?: string | string[];</h3>\n<ul>\n<li>描述：将数据值映射到图形的位置上的方法。</li>\n</ul>\n<p>使用 * 连接，position 属性会对多个字段进行数据的映射，如：cutprice，xy 等，用于二维坐标系图表的绘制。</p>\n<p>以 chart.point().position(&#39;xy&#39;) 为例，point 代表图形，即最后需要生成点图，而 position 代表位置，position(&#39;xy&#39;) 代表数据在图形中的位置由 x 和 y 这两个维度的变量决定，x * y 的数据处理结果可以理解为：\n[(x1, y1),(x2, y2),(x3, y3),...,(xN, yN),]这样的数值对，最后就会被转换为画布上对应的坐标点。</p>\n<p>另外，也可以以数组格式传入：</p>\n<pre><code>&lt;<span class="hljs-symbol">Series</span> psoition={[ <span class="hljs-string">\'fieldA\'</span>, <span class="hljs-string">\'fieldB\'</span> ]}/&gt;\n</code></pre><h3 id="gemo-string-">gemo?: string;</h3>\n<ul>\n<li>描述：可与 adjust 自由组合。 支持 point path line area interval polygon schema edge heatmap pointStack pointJitter pointDodge intervalStack intervalDodge intervalSymmetric areaStack schemaDodge</li>\n</ul>\n<p>尽量使用 quickType 自由组合需要理解内部的实现规则</p>\n<h3 id="adjust-string-string-object-">adjust?: string | string[] | object[];</h3>\n<ul>\n<li>描述：声明几何标记对象的数据调整方式，可用于绘制层叠图、扰动图、分组图等。支持单一的数据调整方式也支持各种数据调整方式的组合。 支持的调整类型包括： &#39;stack&#39;, &#39;dodge&#39;, &#39;jitter&#39;, &#39;symmetric&#39;。</li>\n</ul>\n<pre><code>&lt;<span class="hljs-type">Series</span>\n  <span class="hljs-class"><span class="hljs-keyword">type</span></span>= <span class="hljs-string">"point"</span>\n  adjust= {<span class="hljs-symbol">\'stac</span>k\'}\n  <span class="hljs-comment">// or</span>\n  adjust= {[<span class="hljs-symbol">\'dodg</span>e\', <span class="hljs-symbol">\'stac</span>k\']}\n  <span class="hljs-comment">// or</span>\n  adjust= {[\n    {\n      <span class="hljs-class"><span class="hljs-keyword">type</span></span>: <span class="hljs-symbol">\'dodg</span>e\',\n      marginRatio: <span class="hljs-number">0</span>, <span class="hljs-comment">// 数值范围为 0 至 1，用于调整分组中各个柱子的间距</span>\n      dodgeBy: <span class="hljs-symbol">\'x</span>x\', <span class="hljs-comment">// 声明按照 xx 字段进行分组，一般不需要声明</span>\n    }\n  ]}\n/&gt;\n</code></pre><h3 id="color-any-">color?: any;</h3>\n<ul>\n<li><p>描述：将数据值映射到图形的颜色上的方法。</p>\n</li>\n<li><p>常量\n只支持接收一个参数，value 可以是：</p>\n</li>\n<li><p>映射至颜色属性的数据源字段名，如果数据源中不存在这个字段名的话，则按照常量进行解析，这个时候会使用 G2 默认提供的颜色。</p>\n</li>\n<li>也可以直接指定某一个具体的颜色值 color，如 &#39;#fff&#39;, &#39;white&#39; 等。</li>\n</ul>\n<pre><code>&lt;Series <span class="hljs-attribute">color</span>=<span class="hljs-string">\'red\'</span>/&gt;\n</code></pre><ul>\n<li>字段\n&#39;field&#39;，field 为数据字段名，内部会使用主题中的默认颜色进行数据值到颜色值的映射；</li>\n</ul>\n<pre><code>&lt;Series <span class="hljs-attribute">color</span>=<span class="hljs-string">\'z\'</span>/&gt;\n</code></pre><ul>\n<li>颜色范围\n[&#39;field&#39;, colors]，将数据值映射至指定的颜色值 colors（可以是字符串也可以是数组），此时用于通常映射分类数据；</li>\n</ul>\n<pre><code>&lt;<span class="hljs-symbol">Series</span> color={[<span class="hljs-string">\'z\'</span>, [ <span class="hljs-string">\'red\'</span>, <span class="hljs-string">\'blue\'</span> ]]}/&gt;\n</code></pre><ul>\n<li>连续颜色渐变\n[&#39;z&#39;, &#39;l(270) 0:#173162 1:#3663a1&#39;]，指定颜色的渐变路径，用于映射连续的数据；</li>\n</ul>\n<pre><code><span class="hljs-comment">// 使用渐变色</span>\n&lt;Series color={[\'z\', \'red-blue\']}/&gt;\n\n<span class="hljs-comment">// 使用渐变色，l 后面传入角度，0 代表起始颜色，1 代表结束颜色</span>\n&lt;Series color={[\'z\', \'l(270) 0:#<span class="hljs-number">173162</span> 1:#<span class="hljs-number">3663</span>a1\']}/&gt;\n</code></pre><ul>\n<li>回调函数\n[&#39;field&#39;, callback)]，使用回调函数进行颜色值的自定义；可以使用多个字段使用*号连接 注意： color 属性的回调函数一般返回的单个颜色，因为 G2 中所有的 shape 仅支持单个颜色 color 属性的回调函数也可以返回数组，数组中有多个颜色，但是这时候需要 shape 支持多颜色的解析，详细情况查看自定义 shape。</li>\n</ul>\n<pre><code>&lt;Series\n  color={[<span class="hljs-string">\'z\'</span>, <span class="hljs-function"><span class="hljs-params">(value)</span> =&gt;</span> {\n    <span class="hljs-keyword">if</span>(value === <span class="hljs-number">1</span>) {\n      <span class="hljs-keyword">return</span> <span class="hljs-string">\'red\'</span>\n    }\n\n    <span class="hljs-keyword">return</span> <span class="hljs-string">\'blue\'</span>;\n  }]}\n/&gt;\n</code></pre><h3 id="shape-any-">shape?: any;</h3>\n<ul>\n<li>描述：将数据值映射到图形的形状上的方法。\n只支持接收一个参数，指定几何图像对象绘制的形状。下表列出了不同的 geom 几何图形对象支持的 shape 形状：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>geom 类型</th>\n<th>shape 类型</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>point</td>\n<td>&#39;circle&#39;, &#39;square&#39;, &#39;bowtie&#39;, &#39;diamond&#39;, &#39;hexagon&#39;, &#39;triangle&#39;, &#39;triangle-down&#39;, &#39;hollowCircle&#39;, &#39;hollowSquare&#39;, &#39;hollowBowtie&#39;, &#39;hollowDiamond&#39;,&#39;hollowHexagon&#39;&#39;hollowTriangle&#39;, &#39;hollowTriangle-down&#39;,&#39;cross&#39;, &#39;tick&#39;, &#39;plus&#39;, &#39;hyphen&#39;, &#39;line&#39;</td>\n<td>hollow 开头的图形都是空心的。</td>\n</tr>\n<tr>\n<td>line</td>\n<td>&#39;line&#39;,&#39;smooth&#39;,&#39;dot&#39;,&#39;dash&#39;,&#39;spline&#39;</td>\n<td>--</td>\n</tr>\n<tr>\n<td>area</td>\n<td>&#39;area&#39;,&#39;smooth&#39;,&#39;line&#39;,&#39;smoothLine&#39;</td>\n<td>--</td>\n</tr>\n<tr>\n<td>interval</td>\n<td>&#39;rect&#39;,&#39;hollowRect&#39;,&#39;line&#39;,&#39;tick&#39; hollowRect</td>\n<td>是空心的矩形，line 和 tick 都是线段</td>\n</tr>\n<tr>\n<td>polygon</td>\n<td>&#39;polygon&#39;,&#39;hollow&#39;</td>\n<td>polygon 多边形、hollow 空心多边形。</td>\n</tr>\n<tr>\n<td>schema</td>\n<td>&#39;box&#39;,&#39;candle&#39;</td>\n<td>目前仅支持箱型图、K 线图</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>字段\ndim 为映射至颜色属性的数据源字段名, 将指定的字段映射到内置的 shapes 数组中；。</li>\n</ul>\n<pre><code>&lt;Series <span class="hljs-attribute">shape</span>=<span class="hljs-string">\'z\'</span>/&gt;\n</code></pre><ul>\n<li>自定义 shape\n[&#39;field&#39;, shapes]，用户自己提供 shapes 数据，来进行数据映射；</li>\n</ul>\n<pre><code>&lt;Series <span class="hljs-built_in">shape</span>={[<span class="hljs-string">\'z\'</span>, [<span class="hljs-string">\'circle\'</span>, <span class="hljs-string">\'rect\'</span>]}/&gt;\n</code></pre><ul>\n<li>常量\n将所有数据值映射到固定的 shape。</li>\n</ul>\n<pre><code>&lt;Series <span class="hljs-attribute">shape</span>=<span class="hljs-string">\'point\'</span>/&gt;\n</code></pre><p>提供以下默认形状：</p>\n<pre><code><span class="hljs-keyword">const</span> shapes = {\n  <span class="hljs-built_in">point</span>: [ <span class="hljs-string">\'hollowCircle\'</span>, <span class="hljs-string">\'hollowSquare\'</span>, <span class="hljs-string">\'hollowDiamond\'</span>, <span class="hljs-string">\'hollowBowtie\'</span>, <span class="hljs-string">\'hollowTriangle\'</span>, <span class="hljs-string">\'hollowHexagon\'</span>, <span class="hljs-string">\'cross\'</span>, <span class="hljs-string">\'tick\'</span>, <span class="hljs-string">\'plus\'</span>, <span class="hljs-string">\'hyphen\'</span>, <span class="hljs-string">\'line\'</span> ],\n  <span class="hljs-built_in">line</span>: [ <span class="hljs-string">\'line\'</span>, <span class="hljs-string">\'dash\'</span>, <span class="hljs-string">\'dot\'</span> ],\n  area: [ <span class="hljs-string">\'area\'</span> ]\n};\n</code></pre><h3 id="size-any-">size?: any;</h3>\n<ul>\n<li>描述：将数据值映射到图形的大小上的方法。</li>\n</ul>\n<blockquote>\n<p>对于不同的几何标记含义不完全一致：</p>\n<ol>\n<li>对于 point 点来说，size 对应着点的半径；</li>\n<li>对于 line 线来说，size 对应着线的粗细；</li>\n<li>对于 interval 柱状图来说，size 对应着柱子的宽度。</li>\n</ol>\n</blockquote>\n<ul>\n<li>常量\n指定像素大小。</li>\n</ul>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-name">Series</span> <span class="hljs-attr">size</span>=<span class="hljs-string">{3}/</span>&gt;</span>\n</code></pre><ul>\n<li>字段\n指定映射到 size 的字段，使用内置的默认大小范围为 [1, 10]；</li>\n</ul>\n<pre><code>&lt;Series <span class="hljs-built_in">size</span>={<span class="hljs-string">\'z\'</span>}/&gt;\n</code></pre><ul>\n<li>设置范围\n指定映射到 size 字段外，还提供了 size 的最大值和最小值范围；</li>\n</ul>\n<pre><code>&lt;<span class="hljs-symbol">Series</span> size={[<span class="hljs-string">\'z\'</span>, [<span class="hljs-number">1</span>, <span class="hljs-number">10</span>]]}/&gt;\n</code></pre><h3 id="opacity-any-">opacity?: any;</h3>\n<ul>\n<li>描述：将数据值映射到图形的透明度上的方法。</li>\n</ul>\n<pre><code>&lt;Series opacity=<span class="hljs-string">\'field\'</span><span class="hljs-regexp">/&gt; /</span>/ 使用字段映射到透明度\n\n&lt;Series opacity={<span class="hljs-number">0.2</span>}<span class="hljs-regexp">/&gt; /</span>/ 常量，但是数值范围为 <span class="hljs-number">0</span> - <span class="hljs-number">1</span>\n\n&lt;Series opacity={[<span class="hljs-string">\'z\'</span>, <span class="hljs-function"><span class="hljs-params">(z)</span>=&gt;</span>{ <span class="hljs-regexp">//</span> 回调函数\n  <span class="hljs-keyword">if</span>(z &gt; <span class="hljs-number">1000</span>)\n    <span class="hljs-keyword">return</span> <span class="hljs-number">0.6</span>;\n  <span class="hljs-keyword">return</span> <span class="hljs-number">0.1</span>;\n}]}/&gt;\n</code></pre><h3 id="label-any-">label?: any;</h3>\n<ul>\n<li><p>描述：将数据值映射到图形的文本上的方法。</p>\n</li>\n<li><p>字段</p>\n</li>\n</ul>\n<pre><code>&lt;Series <span class="hljs-keyword">label</span>=<span class="hljs-string">\'field\'</span>/&gt;  <span class="hljs-comment">// 使用字段映射到文本</span>\n</code></pre><ul>\n<li>字段配置\n设置显示文本的配置信息。field 代表数据源中的数据字段名。</li>\n</ul>\n<pre><code>&lt;Series <span class="hljs-keyword">label</span><span class="bash">={[<span class="hljs-string">\'x\'</span>, {\n</span>  offset: <span class="hljs-number">10</span>\n  textStyle: {\n    fill: <span class="hljs-string">\'red\'</span>\n  }\n}]}/&gt;\n</code></pre><ul>\n<li>回调函数\n使用回调函数控制文本显示。</li>\n</ul>\n<pre><code>&lt;Series label={[<span class="hljs-string">\'x*y*z\'</span>, <span class="hljs-function"><span class="hljs-params">(x, y, z)</span> =&gt;</span> {\n  <span class="hljs-keyword">return</span>; <span class="hljs-regexp">//</span> something\n}]}/&gt;\n</code></pre><h3 id="tooltip-any-">tooltip?: any;</h3>\n<ul>\n<li>描述：将数据值映射到 Tooltip 上。</li>\n</ul>\n<pre><code>&lt;Series <span class="hljs-built_in">tooltip</span>={<span class="hljs-literal">false</span>} /&gt;\n\n&lt;Series\n  <span class="hljs-built_in">tooltip</span>={[<span class="hljs-string">\'dim1*dim2\'</span>, (dim1, dim2)=&gt;{\n    <span class="hljs-keyword">return</span> {\n      name:<span class="hljs-string">\'xxx\'</span>,\n      value:dim1 + <span class="hljs-string">\':\'</span> + dim2\n    }\n  }]}\n/&gt;\n\n&lt;Series <span class="hljs-built_in">tooltip</span>={<span class="hljs-string">\'dim1*dim2...*dimN\'</span>} /&gt;\n</code></pre><h3 id="style-any-">style?: any;</h3>\n<ul>\n<li>描述：配置几何图形的样式。 当 style 的值是 Object 时，该 Object 中只能设置固定样式。 当 style 的值是 Array 时，可以通过回调函数根据具体的数据去动态配置样式。</li>\n</ul>\n<pre><code>&lt;Series\n  style={{\n    lineWidth:<span class="hljs-number">1</span>\n  }}\n  <span class="hljs-regexp">//</span>或者\n  style={[<span class="hljs-string">\'x*y\'</span>, {\n    lineWidth:<span class="hljs-number">1</span>,\n    stroke:<span class="hljs-function"><span class="hljs-params">(sales, city)</span>=&gt;</span>{\n      <span class="hljs-keyword">if</span>(city === <span class="hljs-string">\'hangzhou\'</span> &amp;&amp; sales &gt; <span class="hljs-number">1000</span>)\n        <span class="hljs-keyword">return</span> <span class="hljs-string">"#ff0000"</span>;\n      <span class="hljs-keyword">return</span> <span class="hljs-string">"#00ff00"</span>;\n    }\n   }]}\n/&gt;\n</code></pre><h3 id="select-any-">select?: any;</h3>\n<ul>\n<li>描述：开启、关闭以及设置 shape 对于鼠标 click 事件的响应效果， 默认仅为饼图开启了选中效果。</li>\n</ul>\n<pre><code>&lt;Series <span class="hljs-keyword">select</span>={<span class="hljs-literal">false</span>} /&gt;\n</code></pre><h3 id="active-boolean-">active?: boolean;</h3>\n<ul>\n<li>描述：开启以及关闭 shape 对于鼠标 hover 时的响应效果， 默认为各个 shape 内置了 active 效果 。</li>\n</ul>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-name">Series</span> <span class="hljs-attr">active</span>=<span class="hljs-string">{false}</span> /&gt;</span>\n</code></pre><h3 id="animate-object-">animate?: object;</h3>\n<ul>\n<li>描述：动画配置。</li>\n</ul>\n<pre><code>const animate = {\n<span class="hljs-symbol">  appear:</span> {\n    <span class="hljs-comment">// 初始入场动画配置</span>\n  }\n<span class="hljs-symbol">  enter:</span> {\n    <span class="hljs-comment">// 更新时出现动画配置</span>\n  },\n<span class="hljs-symbol">  leave:</span> {\n    <span class="hljs-comment">// 更新时销毁动画配置</span>\n  },\n<span class="hljs-symbol">  update:</span> {\n    <span class="hljs-comment">// 更新时改变动画配置</span>\n  }\n};\n<span class="hljs-params">&lt;Series animate={animate} /&gt;</span>\n</code></pre><h3 id="onmousedown-eventfunc-">onMouseDown?: eventFunc;</h3>\n<ul>\n<li>描述：见 event</li>\n</ul>\n<h3 id="onmousemove-eventfunc-">onMouseMove?: eventFunc;</h3>\n<ul>\n<li>描述：见 event</li>\n</ul>\n<h3 id="onmouseleave-eventfunc-">onMouseLeave?: eventFunc;</h3>\n<ul>\n<li>描述：见 event</li>\n</ul>\n<h3 id="onmouseup-eventfunc-">onMouseUp?: eventFunc;</h3>\n<ul>\n<li>描述：见 event</li>\n</ul>\n<h3 id="onclick-eventfunc-">onClick?: eventFunc;</h3>\n<ul>\n<li>描述：见 event</li>\n</ul>\n<h3 id="ondbclick-eventfunc-">onDbClick?: eventFunc;</h3>\n<ul>\n<li>描述：见 event</li>\n</ul>\n<h3 id="ontouchstart-eventfunc-">onTouchStart?: eventFunc;</h3>\n<ul>\n<li>描述：见 event</li>\n</ul>\n<h3 id="ontouchmove-eventfunc-">onTouchMove?: eventFunc;</h3>\n<ul>\n<li>描述：见 event</li>\n</ul>\n<h3 id="ontouchend-eventfunc-">onTouchEnd?: eventFunc;</h3>\n<ul>\n<li>描述：见 event</li>\n</ul>\n<h3 id="onlabelmousedown-eventfunc-">onLabelMouseDown?: eventFunc;</h3>\n<ul>\n<li>描述：见 event</li>\n</ul>\n<h3 id="onlabelmousemove-eventfunc-">onLabelMouseMove?: eventFunc;</h3>\n<ul>\n<li>描述：见 event</li>\n</ul>\n<h3 id="onlabelmouseleave-eventfunc-">onLabelMouseLeave?: eventFunc;</h3>\n<ul>\n<li>描述：见 event</li>\n</ul>\n<h3 id="onlabelmouseup-eventfunc-">onLabelMouseUp?: eventFunc;</h3>\n<ul>\n<li>描述：见 event</li>\n</ul>\n<h3 id="onlabelclick-eventfunc-">onLabelClick?: eventFunc;</h3>\n<ul>\n<li>描述：见 event</li>\n</ul>\n<h3 id="onlabeldbclick-eventfunc-">onLabelDbClick?: eventFunc;</h3>\n<ul>\n<li>描述：见 event</li>\n</ul>\n<h3 id="onlabletouchstart-eventfunc-">onLableTouchStart?: eventFunc;</h3>\n<ul>\n<li>描述：见 event</li>\n</ul>\n<h3 id="onlabeltouchmove-eventfunc-">onLabelTouchMove?: eventFunc;</h3>\n<ul>\n<li>描述：见 event</li>\n</ul>\n<h3 id="onlabeltouchend-eventfunc-">onLabelTouchEnd?: eventFunc;</h3>\n<ul>\n<li>描述：见 event</li>\n</ul>\n'},1231:function(module,exports){module.exports='<h1 id="series">Series</h1>\n<p> Series,generally refers to data directly generated graphics.</p>\n<h1 id="api">API</h1>\n<h3 id="quicktype-string-">quickType?: string;</h3>\n<ul>\n<li>Description: Provide common graphics. Support is as follows:</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>type</th>\n<th>instruction</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>line</td>\n<td>A linear graph ,which is connected to a line according to the X axis to form a line graph.</td>\n</tr>\n<tr>\n<td>smoothLine</td>\n<td>Smooth linear graph</td>\n</tr>\n<tr>\n<td>dashLine</td>\n<td>Dashed linear graph</td>\n</tr>\n<tr>\n<td>stackLine</td>\n<td>Stacked linear graph</td>\n</tr>\n<tr>\n<td>area</td>\n<td>Area graph, fill line graph and coordinate system constitute a regional map, you can also specify the upper and lower range.</td>\n</tr>\n<tr>\n<td>smoothArea</td>\n<td>Smooth area graph</td>\n</tr>\n<tr>\n<td>stackArea</td>\n<td>Stacked area graph</td>\n</tr>\n<tr>\n<td>bar</td>\n<td>Bar graph</td>\n</tr>\n<tr>\n<td>stackBar</td>\n<td>Stacked bar graph</td>\n</tr>\n<tr>\n<td>dodgeBar</td>\n<td>Grouped bar graph</td>\n</tr>\n<tr>\n<td>point</td>\n<td>Point,which is for point map construction</td>\n</tr>\n<tr>\n<td>funnel</td>\n<td>Symmetrical funnel graph</td>\n</tr>\n<tr>\n<td>pyramid</td>\n<td>funnel graph</td>\n</tr>\n<tr>\n<td>schema</td>\n<td>K-line chart, box graph</td>\n</tr>\n<tr>\n<td>box</td>\n<td>box graph</td>\n</tr>\n<tr>\n<td>candle</td>\n<td>Candle graph</td>\n</tr>\n<tr>\n<td>polygon</td>\n<td>Polygons which can be used to build chart types such as thermodynamic charts and maps, todo</td>\n</tr>\n<tr>\n<td>contour</td>\n<td>todo</td>\n</tr>\n<tr>\n<td>heatmap</td>\n<td>Thermodynamic graph</td>\n</tr>\n<tr>\n<td>edge</td>\n<td>Edges which are suitable for tree graph, flowcharts, and relation schema</td>\n</tr>\n<tr>\n<td>errorBar</td>\n<td>todo</td>\n</tr>\n<tr>\n<td>jitterPoint</td>\n<td>Perturbation point graph</td>\n</tr>\n<tr>\n<td>path</td>\n<td>path,a line formed by connecting disordered points</td>\n</tr>\n<tr>\n<td>interval</td>\n<td>Use rectangular or arc, with the area to represent the size of the relationship between the graphics, generally composed of bar charts, pie charts and other charts.</td>\n</tr>\n<tr>\n<td>stackInterval</td>\n<td>stack</td>\n</tr>\n<tr>\n<td>dodgeInterval</td>\n<td>grouped</td>\n</tr>\n<tr>\n<td>sector</td>\n<td>todo</td>\n</tr>\n</tbody>\n</table>\n<h3 id="position-string-string-">position?: string | string[];</h3>\n<ul>\n<li>Description: A method of mapping data values to the positions of graphics.</li>\n</ul>\n<p>Using * joins, position attributes map data from multiple fields, such as cutprice, xy, etc., for drawing two-dimensional coordinate charts.</p>\n<p>Take chart.point().position(&#39;xy&#39;) as an example. Point represents the graph, that is, the final point graph needs to be generated. Position represents the position of the data in the graph. The position(&#39;xy&#39;) represents the position of the data in the graph determined by the variables of the two dimensions X and y. The data processing results of X * y can be understood as:\n[(x1, y1), (x2, y2), (x3, y3),..., (xN, yN),] these numerical pairs are converted to the corresponding coordinate points on the canvas.</p>\n<p>In addition, it can also be imported in array format:</p>\n<pre><code>&lt;<span class="hljs-symbol">Series</span> psoition={[ <span class="hljs-string">\'fieldA\'</span>, <span class="hljs-string">\'fieldB\'</span> ]}/&gt;\n</code></pre><h3 id="gemo-string-">gemo?: string;</h3>\n<ul>\n<li>Description: It can be combined freely with adjust. Support: point path line area interval polygon schema edge heatmap pointStack pointJitter pointDodge intervalStack intervalDodge intervalSymmetric areaStack schemaDodge</li>\n</ul>\n<p>Try to use quickType , free combination need to understand internal implementation rules.</p>\n<h3 id="adjust-string-string-object-">adjust?: string | string[] | object[];</h3>\n<ul>\n<li>Description: The data adjustment method of declaring geometric labeled objects ,which can be used to draw cascade graph, perturbation graph, grouping graph and so on. Supporting a single data adjustment mode also supports the combination of various data adjustment methods. The supporting types of adjustment include: &#39;stack&#39;, &#39;dodge&#39;, &#39;jitter&#39;, &#39;symmetric&#39;.</li>\n</ul>\n<pre><code>&lt;Series\n  <span class="hljs-built_in">type</span>= <span class="hljs-string">"point"</span>\n  adjust= {<span class="hljs-string">\'stack\'</span>}\n  // <span class="hljs-built_in">or</span>\n  adjust= {[<span class="hljs-string">\'dodge\'</span>, <span class="hljs-string">\'stack\'</span>]}\n  // <span class="hljs-built_in">or</span>\n  adjust= {[\n    {\n      <span class="hljs-built_in">type</span>: <span class="hljs-string">\'dodge\'</span>,\n      marginRatio: <span class="hljs-number">0</span>, // The numerical <span class="hljs-built_in">range</span> <span class="hljs-keyword">is</span> <span class="hljs-number">0</span> <span class="hljs-keyword">to</span> <span class="hljs-number">1</span>, which <span class="hljs-keyword">is</span> used <span class="hljs-keyword">to</span> adjust the spacing between columns in the group.\n      dodgeBy: <span class="hljs-string">\'xx\'</span>, // Declarations are grouped according <span class="hljs-keyword">to</span> the <span class="hljs-string">\'xx\'</span> field, <span class="hljs-built_in">and</span> generally <span class="hljs-keyword">do</span> not need <span class="hljs-keyword">to</span> <span class="hljs-keyword">be</span> declared.\n    }\n  ]}\n/&gt;\n</code></pre><h3 id="color-any-">color?: any;</h3>\n<ul>\n<li><p>Description: A method of mapping data values onto the color of a graph. </p>\n</li>\n<li><p>Constant\nOnly one parameter is supported. Value can be:</p>\n</li>\n<li><p>Data source field names mapped to color attributes, it will be resolved by constants and use the color provided by G2 by default if the field name does not exist in the data source.</p>\n</li>\n<li>You can also specify a specific color value color, such as &#39;#fff&#39;, &#39;white&#39;, etc.</li>\n</ul>\n<pre><code>&lt;Series <span class="hljs-attribute">color</span>=<span class="hljs-string">\'red\'</span>/&gt;\n</code></pre><ul>\n<li>Data field\n&#39;field&#39;, Field is the name of the data field, and the default color in the topic is used internally to map the data value to the color value.</li>\n</ul>\n<pre><code>&lt;Series <span class="hljs-attribute">color</span>=<span class="hljs-string">\'z\'</span>/&gt;\n</code></pre><ul>\n<li>Color range\n[&#39;field&#39;, colors], maps the data value to the specified color value colors (either a string or an array), which is used to map categorized data in general.</li>\n</ul>\n<pre><code>&lt;<span class="hljs-symbol">Series</span> color={[<span class="hljs-string">\'z\'</span>, [ <span class="hljs-string">\'red\'</span>, <span class="hljs-string">\'blue\'</span> ]]}/&gt;\n</code></pre><ul>\n<li>Continuous color gradient\n[&#39;z&#39;, &#39;l(270) 0:#173162 1:#3663a1&#39;], specifies a gradient path for colors to map continuous data.</li>\n</ul>\n<pre><code><span class="hljs-comment">// Using gradient color</span>\n&lt;Series color={[\'z\', \'red-blue\']}/&gt;\n\n<span class="hljs-comment">// Using gradient color, the angle after L is introduced, the 0 represents the start color, and the 1 represents the end color.</span>\n&lt;Series color={[\'z\', \'l(270) 0:#<span class="hljs-number">173162</span> 1:#<span class="hljs-number">3663</span>a1\']}/&gt;\n</code></pre><ul>\n<li>callback\n[&#39;field&#39;, callback)], callback functions can be used to customize color values; multiple fields can be used to connect notes by *, be careful: The callback function for the color attribute typically returns a single color, because all the shapes in G2 support only a single color attribute, it can also return an array with multiple colors, but this needs shape to support multi color parsing, and to view custom shape in detail.</li>\n</ul>\n<pre><code>&lt;Series\n  color={[<span class="hljs-string">\'z\'</span>, <span class="hljs-function"><span class="hljs-params">(value)</span> =&gt;</span> {\n    <span class="hljs-keyword">if</span>(value === <span class="hljs-number">1</span>) {\n      <span class="hljs-keyword">return</span> <span class="hljs-string">\'red\'</span>\n    }\n\n    <span class="hljs-keyword">return</span> <span class="hljs-string">\'blue\'</span>;\n  }]}\n/&gt;\n</code></pre><h3 id="shape-any-">shape?: any;</h3>\n<ul>\n<li>Description: A method for mapping data values onto shapes of graphs.\nIt only supports receiving a parameter specifying the shape drawn by a geometric image object. The following table lists the shapes supported by different geometry objects:</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>geom type</th>\n<th>shape type</th>\n<th>explain</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>point</td>\n<td>&#39;circle&#39;, &#39;square&#39;, &#39;bowtie&#39;, &#39;diamond&#39;, &#39;hexagon&#39;, &#39;triangle&#39;, &#39;triangle-down&#39;, &#39;hollowCircle&#39;, &#39;hollowSquare&#39;, &#39;hollowBowtie&#39;, &#39;hollowDiamond&#39;,&#39;hollowHexagon&#39;&#39;hollowTriangle&#39;, &#39;hollowTriangle-down&#39;,&#39;cross&#39;, &#39;tick&#39;, &#39;plus&#39;, &#39;hyphen&#39;, &#39;line&#39;</td>\n<td>The shapes at the beginning of hollow are all hollow</td>\n</tr>\n<tr>\n<td>line</td>\n<td>&#39;line&#39;,&#39;smooth&#39;,&#39;dot&#39;,&#39;dash&#39;,&#39;spline&#39;</td>\n<td>--</td>\n</tr>\n<tr>\n<td>area</td>\n<td>&#39;area&#39;,&#39;smooth&#39;,&#39;line&#39;,&#39;smoothLine&#39;</td>\n<td>--</td>\n</tr>\n<tr>\n<td>interval</td>\n<td>&#39;rect&#39;,&#39;hollowRect&#39;,&#39;line&#39;,&#39;tick&#39; hollowRect</td>\n<td>It&#39;s a hollow rectangle, line and tick are line segments</td>\n</tr>\n<tr>\n<td>polygon</td>\n<td>&#39;polygon&#39;,&#39;hollow&#39;</td>\n<td>Polygon: polygons, hollow: hollow polygons</td>\n</tr>\n<tr>\n<td>schema</td>\n<td>&#39;box&#39;,&#39;candle&#39;</td>\n<td>At present, only box and K-line diagrams are supported</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>Data field\nDim is the name of the data source field that maps to the color attribute, mapping the specified field to the built-in shapes array.</li>\n</ul>\n<pre><code>&lt;Series <span class="hljs-attribute">shape</span>=<span class="hljs-string">\'z\'</span>/&gt;\n</code></pre><ul>\n<li>Custom shape\n[&#39;field&#39;, shapes], users provide shapes data to map data.</li>\n</ul>\n<pre><code>&lt;Series <span class="hljs-built_in">shape</span>={[<span class="hljs-string">\'z\'</span>, [<span class="hljs-string">\'circle\'</span>, <span class="hljs-string">\'rect\'</span>]}/&gt;\n</code></pre><ul>\n<li>Constant\nMap all data values to fixed shape.</li>\n</ul>\n<pre><code>&lt;Series <span class="hljs-attribute">shape</span>=<span class="hljs-string">\'point\'</span>/&gt;\n</code></pre><p>The following default shapes are provided:</p>\n<pre><code><span class="hljs-keyword">const</span> shapes = {\n  <span class="hljs-built_in">point</span>: [ <span class="hljs-string">\'hollowCircle\'</span>, <span class="hljs-string">\'hollowSquare\'</span>, <span class="hljs-string">\'hollowDiamond\'</span>, <span class="hljs-string">\'hollowBowtie\'</span>, <span class="hljs-string">\'hollowTriangle\'</span>, <span class="hljs-string">\'hollowHexagon\'</span>, <span class="hljs-string">\'cross\'</span>, <span class="hljs-string">\'tick\'</span>, <span class="hljs-string">\'plus\'</span>, <span class="hljs-string">\'hyphen\'</span>, <span class="hljs-string">\'line\'</span> ],\n  <span class="hljs-built_in">line</span>: [ <span class="hljs-string">\'line\'</span>, <span class="hljs-string">\'dash\'</span>, <span class="hljs-string">\'dot\'</span> ],\n  area: [ <span class="hljs-string">\'area\'</span> ]\n};\n</code></pre><h3 id="size-any-">size?: any;</h3>\n<ul>\n<li>Description: A method of mapping data values to the size of graphics.</li>\n</ul>\n<blockquote>\n<p>The meanings of different geometric markers are not identical:</p>\n<ol>\n<li>For point, size corresponds to the radius of points;</li>\n<li>For line, size corresponds to the thickness of the line;</li>\n<li>For interval bar graph, size corresponds to the width of the column.</li>\n</ol>\n</blockquote>\n<ul>\n<li>Constant\nSpecify pixel size.</li>\n</ul>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-name">Series</span> <span class="hljs-attr">size</span>=<span class="hljs-string">{3}/</span>&gt;</span>\n</code></pre><ul>\n<li>Data field\nSpecifies the fields that are mapped to size, using the default size range of [1, 10];</li>\n</ul>\n<pre><code>&lt;Series <span class="hljs-built_in">size</span>={<span class="hljs-string">\'z\'</span>}/&gt;\n</code></pre><ul>\n<li>Set range\nSpecifies that the maximum and minimum ranges of size are also provided by mapping to the size field.</li>\n</ul>\n<pre><code>&lt;<span class="hljs-symbol">Series</span> size={[<span class="hljs-string">\'z\'</span>, [<span class="hljs-number">1</span>, <span class="hljs-number">10</span>]]}/&gt;\n</code></pre><h3 id="opacity-any-">opacity?: any;</h3>\n<ul>\n<li>Description: A method of mapping data values to the opacity of graphics.</li>\n</ul>\n<pre><code>&lt;Series opacity=<span class="hljs-string">\'field\'</span>/&gt; <span class="hljs-comment">// Use field mapping to opacity</span>\n\n&lt;Series opacity={<span class="hljs-number">0.2</span>}/&gt; <span class="hljs-comment">// Constant, but the numerical range is 0 to 1</span>\n\n&lt;Series opacity={[<span class="hljs-string">\'z\'</span>, (z)=&gt;{ <span class="hljs-comment">// callback</span>\n  <span class="hljs-keyword">if</span>(z &gt; <span class="hljs-number">1000</span>)\n    <span class="hljs-keyword">return</span> <span class="hljs-number">0.6</span>;\n  <span class="hljs-keyword">return</span> <span class="hljs-number">0.1</span>;\n}]}/&gt;\n</code></pre><h3 id="label-any-">label?: any;</h3>\n<ul>\n<li>Description: A method for mapping data values onto the label of a graph.</li>\n<li>Data field</li>\n</ul>\n<pre><code>&lt;Series <span class="hljs-keyword">label</span>=<span class="hljs-symbol">\'field</span>\'/&gt;  // Mapping fields <span class="hljs-keyword">to</span> <span class="hljs-keyword">label</span>\n</code></pre><ul>\n<li>Field configuration\nSets configuration information for displaying label. Field represents the data field name in the data source.</li>\n</ul>\n<pre><code>&lt;Series <span class="hljs-keyword">label</span><span class="bash">={[<span class="hljs-string">\'x\'</span>, {\n</span>  offset: <span class="hljs-number">10</span>\n  textStyle: {\n    fill: <span class="hljs-string">\'red\'</span>\n  }\n}]}/&gt;\n</code></pre><ul>\n<li>Callback\nUse callback function to control label display.</li>\n</ul>\n<pre><code>&lt;Series label={[<span class="hljs-string">\'x*y*z\'</span>, <span class="hljs-function"><span class="hljs-params">(x, y, z)</span> =&gt;</span> {\n  <span class="hljs-keyword">return</span>; <span class="hljs-regexp">//</span> something\n}]}/&gt;\n</code></pre><h3 id="tooltip-any-">tooltip?: any;</h3>\n<ul>\n<li>Description: Mapping data values onto Tooltip.</li>\n</ul>\n<pre><code>&lt;Series <span class="hljs-built_in">tooltip</span>={<span class="hljs-literal">false</span>} /&gt;\n\n&lt;Series\n  <span class="hljs-built_in">tooltip</span>={[<span class="hljs-string">\'dim1*dim2\'</span>, (dim1, dim2)=&gt;{\n    <span class="hljs-keyword">return</span> {\n      name:<span class="hljs-string">\'xxx\'</span>,\n      value:dim1 + <span class="hljs-string">\':\'</span> + dim2\n    }\n  }]}\n/&gt;\n\n&lt;Series <span class="hljs-built_in">tooltip</span>={<span class="hljs-string">\'dim1*dim2...*dimN\'</span>} /&gt;\n</code></pre><h3 id="style-any-">style?: any;</h3>\n<ul>\n<li>Description: Configuring the style of geometric. When the value of style is Object, only a fixed style can be set in the Object. When the value of style is Array, you can dynamically configure the style based on the specific data through the callback function.</li>\n</ul>\n<pre><code>&lt;Series\n  style={{\n    lineWidth:<span class="hljs-number">1</span>\n  }}\n  <span class="hljs-regexp">//</span>或者\n  style={[<span class="hljs-string">\'x*y\'</span>, {\n    lineWidth:<span class="hljs-number">1</span>,\n    stroke:<span class="hljs-function"><span class="hljs-params">(sales, city)</span>=&gt;</span>{\n      <span class="hljs-keyword">if</span>(city === <span class="hljs-string">\'hangzhou\'</span> &amp;&amp; sales &gt; <span class="hljs-number">1000</span>)\n        <span class="hljs-keyword">return</span> <span class="hljs-string">"#ff0000"</span>;\n      <span class="hljs-keyword">return</span> <span class="hljs-string">"#00ff00"</span>;\n    }\n   }]}\n/&gt;\n</code></pre><h3 id="select-any-">select?: any;</h3>\n<ul>\n<li>Description: Turn on, off, and set the shape response to the mouse click event. By default, only the pie chart is selected.</li>\n</ul>\n<pre><code>&lt;Series <span class="hljs-keyword">select</span>={<span class="hljs-literal">false</span>} /&gt;\n</code></pre><h3 id="active-boolean-">active?: boolean;</h3>\n<ul>\n<li>Description: Opening and closing the shape response to the mouse hover, by default for each Shape built-in active effect.</li>\n</ul>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-name">Series</span> <span class="hljs-attr">active</span>=<span class="hljs-string">{false}</span> /&gt;</span>\n</code></pre><h3 id="animate-object-">animate?: object;</h3>\n<ul>\n<li>Description: Animation configuration.</li>\n</ul>\n<pre><code>const animate = {\n<span class="hljs-symbol">  appear:</span> {\n    <span class="hljs-comment">// Initial entry animation configuration</span>\n  }\n<span class="hljs-symbol">  enter:</span> {\n    <span class="hljs-comment">// Animation configuration when updating</span>\n  },\n<span class="hljs-symbol">  leave:</span> {\n    <span class="hljs-comment">// Destroy animation configuration when updating</span>\n  },\n<span class="hljs-symbol">  update:</span> {\n    <span class="hljs-comment">// Change the animation configuration when updating</span>\n  }\n};\n<span class="hljs-params">&lt;Series animate={animate} /&gt;</span>\n</code></pre><h3 id="onmousedown-eventfunc-">onMouseDown?: eventFunc;</h3>\n<ul>\n<li>Description: See event</li>\n</ul>\n<h3 id="onmousemove-eventfunc-">onMouseMove?: eventFunc;</h3>\n<ul>\n<li>Description: See event</li>\n</ul>\n<h3 id="onmouseleave-eventfunc-">onMouseLeave?: eventFunc;</h3>\n<ul>\n<li>Description: See event</li>\n</ul>\n<h3 id="onmouseup-eventfunc-">onMouseUp?: eventFunc;</h3>\n<ul>\n<li>Description: See event</li>\n</ul>\n<h3 id="onclick-eventfunc-">onClick?: eventFunc;</h3>\n<ul>\n<li>Description: See event</li>\n</ul>\n<h3 id="ondbclick-eventfunc-">onDbClick?: eventFunc;</h3>\n<ul>\n<li>Description: See event</li>\n</ul>\n<h3 id="ontouchstart-eventfunc-">onTouchStart?: eventFunc;</h3>\n<ul>\n<li>Description: See event</li>\n</ul>\n<h3 id="ontouchmove-eventfunc-">onTouchMove?: eventFunc;</h3>\n<ul>\n<li>Description: See event</li>\n</ul>\n<h3 id="ontouchend-eventfunc-">onTouchEnd?: eventFunc;</h3>\n<ul>\n<li>Description: See event</li>\n</ul>\n<h3 id="onlabelmousedown-eventfunc-">onLabelMouseDown?: eventFunc;</h3>\n<ul>\n<li>Description: See event</li>\n</ul>\n<h3 id="onlabelmousemove-eventfunc-">onLabelMouseMove?: eventFunc;</h3>\n<ul>\n<li>Description: See event</li>\n</ul>\n<h3 id="onlabelmouseleave-eventfunc-">onLabelMouseLeave?: eventFunc;</h3>\n<ul>\n<li>Description: See event</li>\n</ul>\n<h3 id="onlabelmouseup-eventfunc-">onLabelMouseUp?: eventFunc;</h3>\n<ul>\n<li>Description: See event</li>\n</ul>\n<h3 id="onlabelclick-eventfunc-">onLabelClick?: eventFunc;</h3>\n<ul>\n<li>Description: See event</li>\n</ul>\n<h3 id="onlabeldbclick-eventfunc-">onLabelDbClick?: eventFunc;</h3>\n<ul>\n<li>Description: See event</li>\n</ul>\n<h3 id="onlabletouchstart-eventfunc-">onLableTouchStart?: eventFunc;</h3>\n<ul>\n<li>Description: See event</li>\n</ul>\n<h3 id="onlabeltouchmove-eventfunc-">onLabelTouchMove?: eventFunc;</h3>\n<ul>\n<li>Description: See event</li>\n</ul>\n<h3 id="onlabeltouchend-eventfunc-">onLabelTouchEnd?: eventFunc;</h3>\n<ul>\n<li>Description: See event</li>\n</ul>\n'},1232:function(module,exports){module.exports='<h1 id="shape">Shape</h1>\n<p>在 <Series shape={shapeType} /> 中指定几何图形时，可以使用内置的 shape，也可以通过 Shape 来自定义 shape。</p>\n<h1 id="-">使用方法</h1>\n<pre><code><span class="hljs-keyword">import</span> { Shape } <span class="hljs-keyword">from</span> <span class="hljs-string">\'viser\'</span>;\n<span class="hljs-comment">//往 interval 几何标记对象（决定了图表类型，即柱状图、饼图等）上注册名字为 shapeName 的 Shape</span>\n<span class="hljs-keyword">const</span> shapeObj = Shape.registerShape(geomName, <span class="hljs-string">\'shapeName\'</span>, {\n  <span class="hljs-attr">getPoints</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">pointInfo</span>) </span>{\n    <span class="hljs-comment">// 获取 shape 绘制的关键点</span>\n  },\n  <span class="hljs-attr">draw</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">cfg, container</span>) </span>{\n    <span class="hljs-comment">// 自定义最终绘制的逻辑</span>\n  }\n});\n\nReactDOM.render(<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Chart</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">Series</span> <span class="hljs-attr">type</span>=<span class="hljs-string">\'interval\'</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">\'shapeName\'</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">Chart</span>&gt;</span> , container);</span>\n</code></pre><h1 id="-">内部方法</h1>\n<h3 id="draw">draw</h3>\n<ul>\n<li>描述：用来定义如何连接这些关键点的。</li>\n</ul>\n<p>cfg 参数包含经过图形映射后的所有数据以及该数据对应的原始数据，结构如下图所示：</p>\n<p><img src="https://zos.alipayobjects.com/skylark/505c6cb1-fde7-4714-98b6-43cb77099f19/attach/3378/332f7e3e64bc48f5/image.png"/></p>\n<p>原始数据存储于 cfg.origin._origin 中，通过 getPoints 计算出的图形关键点都储存于 points 中。而 cfg 对象中的 color、size、shape 都是通过映射之后的图形属性数据，可以直接使用。</p>\n<h3 id="getpoints">getPoints</h3>\n<ul>\n<li>描述：用于计算绘制每种 shape 的关键点，在 G2 中每种几何形状都是由特定的几个关键点通过线连接而成。传入的参数 pointInfo 数据结构如下，所有的数值都是归一化后的结果（即 0 至 1 范围内的数据）：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>geom 类型</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>point</td>\n<td>点的绘制很简单，只要获取它的坐标以及大小即可，其中的 size 属性代表的是点的半径。 <img src="https://zos.alipayobjects.com/skylark/940c75cf-8400-415a-9e2d-040ce46e6a03/attach/3378/269e0e2c77a555a5/image.png"/></td>\n</tr>\n<tr>\n<td>line</td>\n<td>线其实是由无数个点组成，在 G2 中我们将参与绘制的各个数据转换成坐标上的点然后通过线将逐个点连接而成形成线图，其中的 size 属性代表的是线的粗细。 <img src="https://zos.alipayobjects.com/skylark/f9b84b83-1cc8-4b81-9319-f643ef0e280a/attach/3378/d49e02be2f48a136/image.png"/></td>\n</tr>\n<tr>\n<td>area</td>\n<td>area 面其实是在 line 线的基础之上形成的, 它将折线图中折线与自变量坐标轴之间的区域使用颜色或者纹理填充。 <img src="https://zos.alipayobjects.com/skylark/dbcd60f3-7662-4ebd-8e0e-85d7d754d0c7/attach/3378/f67277978d5d8e3e/image.png"/></td>\n</tr>\n<tr>\n<td>interval</td>\n<td>interval 默认的图形形状是矩形，而矩形实际是由四个点组成的，我们根据 pointInfo 中的 x、y、size 以及 y0 这四个值来计算出这四个点，然后顺时针连接而成。 <img src="https://zos.alipayobjects.com/skylark/f36a2e27-13e8-4d55-8c93-b698e15bcc1f/attach/3378/94a6515e2eb60265/image.png"/></td>\n</tr>\n<tr>\n<td>polygon</td>\n<td>polygon 多边形其实也是由多个点连接而成，在 pointInfo 中 x 和 y 都是数组结构。 <img src="https://zos.alipayobjects.com/skylark/b4f6981c-ccd3-4237-97bd-dd88950758ea/attach/3378/ed2b5c05a1ff3581/image.png"/></td>\n</tr>\n<tr>\n<td>schema</td>\n<td>schema 作为一种自定义的几何图形，在 G2 中默认提供了 box 和 candle 两种 shape，分别用于绘制箱型图和股票图，注意这两种形状的矩形部分四个点的连接顺序都是顺时针，并且起始点均为左下角，这样就可以无缝转换至极坐标。<img src="https://zos.alipayobjects.com/skylark/8afa13da-95d1-4282-a08b-f1c421b0d972/attach/3378/d82c45d3a526bd80/image.png"/></td>\n</tr>\n<tr>\n<td>edge</td>\n<td>edge 边同 line 线一致，区别就是 edge 是一个线段，连接边的两个端点即可。</td>\n</tr>\n</tbody>\n</table>\n<h3 id="parsepath">parsePath</h3>\n<ul>\n<li>描述：将形状的关键点连接之后形成的 path，如果依然是归一化后的数据的话，就可以调用该方法将其转化了画布上的坐标值</li>\n</ul>\n<p>path: String</p>\n<p>连接各个关键的路径，例如：&#39;M0 0C0,0,0.0315...5785,0,0.675,0,0.675z&#39;。</p>\n<p>isCircle: Boolean</p>\n<p>是否是极坐标。如果是极坐标，该方法会自动进行转曲。</p>\n<h1 id="api">API</h1>\n<h3 id="x-number-">x?: number;</h3>\n<ul>\n<li>描述：该点归一化后的 x 坐标</li>\n</ul>\n<h3 id="y-number-number-">y?: number &amp; number[];</h3>\n<ul>\n<li>描述：该点归一化后的 y 坐标</li>\n</ul>\n<h3 id="y0-number-">y0?: number;</h3>\n<ul>\n<li>描述：整个数据集 y 轴对应数据的最小值，也是归一化后的数据，注意如果 y 对应的源数据是数组则 y 也将是个数组</li>\n</ul>\n<h3 id="size-number-">size?: number;</h3>\n<ul>\n<li>描述： 形状的尺寸，不同的 shape 该含义不同，0 - 1 范围的数据</li>\n</ul>\n<h1 id="-">案例</h1>\n<p>可查看 demo 中心的 其他图表-&gt;圆角堆叠柱状图 。 案例很多。</p>\n'},1233:function(module,exports){module.exports='<h1 id="shape">Shape</h1>\n<p>When you specify a geometry in <Series shape={shapeType}/>, you can use built-in shapes or customize shapes through Shape.</p>\n<h1 id="usage-method">Usage method</h1>\n<pre><code><span class="hljs-keyword">import</span> { Shape } <span class="hljs-keyword">from</span> <span class="hljs-string">\'viser\'</span>;\n<span class="hljs-comment">// Register Shape with the name shapeName on the interval geometric markup object (which determines the type of chart, i.e. bar chart, pie chart, etc.)</span>\n<span class="hljs-keyword">const</span> shapeObj = Shape.registerShape(geomName, <span class="hljs-string">\'shapeName\'</span>, {\n  <span class="hljs-attr">getPoints</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">pointInfo</span>) </span>{\n    <span class="hljs-comment">// Get the key points of shape drawing</span>\n  },\n  <span class="hljs-attr">draw</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">cfg, container</span>) </span>{\n    <span class="hljs-comment">// Custom final draw logic</span>\n  }\n});\n\nReactDOM.render(<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Chart</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">Series</span> <span class="hljs-attr">type</span>=<span class="hljs-string">\'interval\'</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">\'shapeName\'</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">Chart</span>&gt;</span> , container);</span>\n</code></pre><h1 id="internal-method">Internal method</h1>\n<h3 id="draw">draw</h3>\n<ul>\n<li>Description: It is used to define how to connect these key points.</li>\n</ul>\n<p>cfg parameter contains all data through the original data and the mapping of the data corresponding to the structure as shown below:</p>\n<p><img src="https://zos.alipayobjects.com/skylark/505c6cb1-fde7-4714-98b6-43cb77099f19/attach/3378/332f7e3e64bc48f5/image.png"/></p>\n<p>The original data is stored in cfg.origin._origin, and the key points calculated by getPoints are stored in points. The color, size, shape in the cfg object are all the graphics attribute data after mapping, which can be used directly.</p>\n<h3 id="getpoints">getPoints</h3>\n<ul>\n<li>Description: The key points used to calculate and draw each shape, each geometry in G2 is composed of a specific number of key points connected by lines. The incoming parameter pointInfo data structure is as follows, and all values are normalized (i.e., data in the range 0 to 1):</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>geom type</th>\n<th>explain</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>point</td>\n<td>Point drawing is simple, just get its coordinates and size, where the size attribute represents the radius of the point. <img src="https://zos.alipayobjects.com/skylark/940c75cf-8400-415a-9e2d-040ce46e6a03/attach/3378/269e0e2c77a555a5/image.png"/></td>\n</tr>\n<tr>\n<td>line</td>\n<td>Lines are actually made up of innumerable points. In G2, we convert the data we draw into points on coordinates and then join them one by one to form a line graph. The size attribute represents the thickness of the line. <img src="https://zos.alipayobjects.com/skylark/f9b84b83-1cc8-4b81-9319-f643ef0e280a/attach/3378/d49e02be2f48a136/image.png"/></td>\n</tr>\n<tr>\n<td>area</td>\n<td>Areas are actually formed on the basis of lines, which fill the area between the line breaks and the independent coordinate axis with color or texture. <img src="https://zos.alipayobjects.com/skylark/dbcd60f3-7662-4ebd-8e0e-85d7d754d0c7/attach/3378/f67277978d5d8e3e/image.png"/></td>\n</tr>\n<tr>\n<td>interval</td>\n<td>The default shape of the interval is a rectangle, and the rectangle is actually made up of four points, which we calculate from the values x, y, size, and y0 in pointInfo, and then join clockwise. <img src="https://zos.alipayobjects.com/skylark/f36a2e27-13e8-4d55-8c93-b698e15bcc1f/attach/3378/94a6515e2eb60265/image.png"/></td>\n</tr>\n<tr>\n<td>polygon</td>\n<td>Polygons are actually connected by multiple points, and x and y are array structures in pointInfo. <img src="https://zos.alipayobjects.com/skylark/b4f6981c-ccd3-4237-97bd-dd88950758ea/attach/3378/ed2b5c05a1ff3581/image.png"/></td>\n</tr>\n<tr>\n<td>schema</td>\n<td>As a custom geometry, schema provides two kinds of shapes: box and candle by default in G2 for drawing boxes and stock graphs respectively. Note that the order of connection of the four points in the rectangular part of the two shapes is clockwise, and the starting point is the lower left corner, so that it can be seamlessly converted to polar coordinates.<img src="https://zos.alipayobjects.com/skylark/8afa13da-95d1-4282-a08b-f1c421b0d972/attach/3378/d82c45d3a526bd80/image.png"/></td>\n</tr>\n<tr>\n<td>edge</td>\n<td>The edge is the same as the line. The difference is that edge is a line segment, and the two endpoints can be connected.</td>\n</tr>\n</tbody>\n</table>\n<h3 id="parsepath">parsePath</h3>\n<ul>\n<li>Description: The path formed by joining the key points of the shape, if it is still normalized data, can be invoked to convert it to the coordinate values on the canvas</li>\n</ul>\n<p>path: String</p>\n<p>Connect all the critical paths, such as&#39;M0 0C0,0,0.0315... 5785,0,0.675,0,0.675z&#39;.</p>\n<p>isCircle: Boolean</p>\n<p>Whether it is polar coordinates. If it is polar coordinates, the method will automatically rotate.</p>\n<h1 id="api">API</h1>\n<h3 id="x-number-">x?: number;</h3>\n<ul>\n<li>Description: The normalized x coordinates of the point.</li>\n</ul>\n<h3 id="y-number-number-">y?: number &amp; number[];</h3>\n<ul>\n<li>Description: The normalized y coordinates of the point.</li>\n</ul>\n<h3 id="y0-number-">y0?: number;</h3>\n<ul>\n<li>Description: The minimum value of the data set corresponding to the Y axis ,which is also the normalized data. Note that if the source data corresponding to y is an array, y will also be an array.</li>\n</ul>\n<h3 id="size-number-">size?: number;</h3>\n<ul>\n<li>Description: The size of the shape, the different shape has different meaning, range of data is 0 to 1.</li>\n</ul>\n<h1 id="-">案例</h1>\n<p>You can view other charts in the demo Center - &gt; fillet stacked bar graph. There are many cases.</p>\n'},1234:function(module,exports){module.exports='<h1 id="slider">Slider</h1>\n<p>用于数据范围的选择插件，尤其适用于大数据量的图表绘制，帮助用户更好地关注某一范围的数据可视化结果。</p>\n<h2 id="api">API</h2>\n<h3 id="xaxis-string-">xAxis: string;</h3>\n<ul>\n<li>描述：必须声明，我们的 Slider 是带有背景图表的滑动条组件，该字段用于声明该背景图表的横轴映射字段，同时该字段也是数据过滤字段。</li>\n</ul>\n<h3 id="yaxis-string-">yAxis: string;</h3>\n<ul>\n<li>描述：必须声明，我们的 Slider 是带有背景图表的滑动条组件，该字段用于声明该背景图表的纵轴轴映射字段。</li>\n</ul>\n<h3 id="data-any-">data: any[];</h3>\n<ul>\n<li>描述：必须声明，数据源。</li>\n</ul>\n<h3 id="container-any-">container?: any;</h3>\n<ul>\n<li>描述：对应 slider 的 DOM 容器，可以传入该 DOM 的 id 或者直接传入容器的 html 节点对象。</li>\n</ul>\n<h3 id="width-number-string-">width?: number | string;</h3>\n<ul>\n<li>描述：设置 slider 组件的宽度，默认为 auto，表示自适应容器的宽度。</li>\n</ul>\n<h3 id="height-number-string-">height?: number | string;</h3>\n<ul>\n<li>描述：设置 slider 组件的高度，默认为 26，单位为 &#39;px&#39;。</li>\n</ul>\n<h3 id="padding-number-number-">padding?: number | number[];</h3>\n<ul>\n<li>描述：设置 slider 组件所在画布 canvas 的内边距，用于与图表对齐（默认图表的 canvas 容器也是带了内边距），默认值同 G2 默认主题的 padding 相同，[ 20, 20, 95, 80 ]。</li>\n</ul>\n<h3 id="start-string-">start?: string;</h3>\n<ul>\n<li>描述：声明滑动条起始滑块的位置对应的数据值，默认为最小值。</li>\n</ul>\n<h3 id="end-string-">end?: string;</h3>\n<ul>\n<li>描述：声明滑动条结束滑块的位置对应的数据值，默认为最大值。</li>\n</ul>\n<h3 id="minspan-number-">minSpan?: number;</h3>\n<ul>\n<li>描述：</li>\n</ul>\n<h3 id="maxspan-number-">maxSpan?: number;</h3>\n<ul>\n<li>描述：</li>\n</ul>\n<h3 id="scales-any-">scales?: any;</h3>\n<ul>\n<li>描述：用于对 xAxis 和 yAxis 字段进行列定义，用于同操作的图表中对应的列定义相同。</li>\n</ul>\n<p>示例代码：</p>\n<pre><code>{\n  <span class="hljs-selector-attr">[`${xAxis}`]</span>: {\n    <span class="hljs-attribute">type</span>: <span class="hljs-string">\'time\'</span>,\n    <span class="hljs-attribute">mask</span>: <span class="hljs-string">\'MM-DD\'</span>\n  }\n}\n</code></pre><h3 id="backgroundchart-any-">backgroundChart?: any;</h3>\n<ul>\n<li>描述：slider 滑块的背景图表配置，可配置其图表类型以及颜色：</li>\n</ul>\n<pre><code>{\n  <span class="hljs-attribute">type</span>: [ <span class="hljs-string">\'area\'</span> ], // 图表的类型，可以是字符串也可是是数组\n  color: <span class="hljs-string">\'#CCD6EC\'</span>\n}\n</code></pre><h3 id="onchange-opts-any-">onChange?: (opts: any) =&gt; {};</h3>\n<ul>\n<li>描述：当滑动条滑块发生变化时，触发该回调函数，主要用于更新 ds 的状态量。该回调函数会提供一个参数，该参数是一个对象，包含如下属性：</li>\n</ul>\n<pre><code>onChange: <span class="hljs-function"><span class="hljs-params">(obj)</span> =&gt;</span> {\n  const { startValue, endValue, startText, endText } = obj;\n}\n</code></pre><ul>\n<li>startValue 起点滑块当前对应的原始数据值，如果是 time 或者 timeCat 类型时，该值为时间戳，请注意。</li>\n<li>endValue 终点滑块当前对应的原始数据值，如果是 time 或者 timeCat 类型时，该值为时间戳，请注意。</li>\n<li>startText 起点滑块当前的显示文本值</li>\n<li>endText 终点滑块当前的显示文本值</li>\n</ul>\n<blockquote>\n<p>说明：之所以区分 text 和 value，是因为大部分情况下用户会对数值进行格式化，所以在设置状态量和更新状态量时，需要保证前后数值类型的一致。</p>\n</blockquote>\n<h3 id="handlestyle-any">handleStyle?: any</h3>\n<p>todo</p>\n<ul>\n<li>描述：slider 滑块的样式配置，可配置的属性如下：</li>\n</ul>\n<pre><code>{\n  <span class="hljs-selector-tag">img</span>: <span class="hljs-string">\'https://gw.alipayobjects.com/zos/rmsportal/QXtfhORGlDuRvLXFzpsQ.png\'</span>, <span class="hljs-comment">// 可以是图片地址也可以是 data urls</span>\n  <span class="hljs-attribute">width</span>: <span class="hljs-number">5</span>,\n  <span class="hljs-attribute">height</span>: <span class="hljs-number">26</span>\n}\n</code></pre><h3 id="textstyle-any">textStyle?: any</h3>\n<p>todo</p>\n<ul>\n<li>描述：slider 辅助文本字体样式配置。</li>\n</ul>\n<h3 id="backgroundstyle-any">backgroundStyle?: any</h3>\n<p>todo</p>\n<ul>\n<li>描述：slider 整体背景样式。</li>\n</ul>\n<h3 id="fillerstyle-any">fillerStyle?: any</h3>\n<p>todo</p>\n<ul>\n<li>描述：选中区域的样式配置，默认配置如下：</li>\n</ul>\n<pre><code>{\n  <span class="hljs-attribute">fill</span>: <span class="hljs-string">\'#BDCCED\'</span>,\n  fillOpacity: <span class="hljs-number">0.3</span>\n}\n</code></pre>'},1235:function(module,exports){module.exports='<h1 id="slider">Slider</h1>\n<p>Selection plug-ins for data ranges, especially for large data volume charting, help users better focus on a range of data visualization results.</p>\n<h2 id="api">API</h2>\n<h3 id="xaxis-string-">xAxis: string;</h3>\n<ul>\n<li>Description: required , Our Slider is a slider component with a background graph that declares the horizontal-axis mapping field of the background graph, which is also a data filtering field.</li>\n</ul>\n<h3 id="yaxis-string-">yAxis: string;</h3>\n<ul>\n<li>Description: required , Our Slider is a slider component with a background graph that declares the vertical-axis mapping field of the background graph.</li>\n</ul>\n<h3 id="data-any-">data: any[];</h3>\n<ul>\n<li>Description: required , Data source.</li>\n</ul>\n<h3 id="container-any-">container?: any;</h3>\n<ul>\n<li>Description: For the DOM container of the slider, either the ID of the DOM or the HTML node object of the container can be passed directly in.</li>\n</ul>\n<h3 id="width-number-string-">width?: number | string;</h3>\n<ul>\n<li>Description: Set the width of the slider component, defaults to auto, which indicates self-adaption the width of the container.</li>\n</ul>\n<h3 id="height-number-string-">height?: number | string;</h3>\n<ul>\n<li>Description: The height of the slider component is set to 26 by default,the unit is&#39;px&#39;.</li>\n</ul>\n<h3 id="padding-number-number-">padding?: number | number[];</h3>\n<ul>\n<li>Description: Set the inner margin of the canvas on which the slider component resides for alignment with the chart (the default canvas container for the chart also has an inner margin), and the default value is the same as the padding for the G2 default theme, [20, 20, 95, 80].</li>\n</ul>\n<h3 id="start-string-">start?: string;</h3>\n<ul>\n<li>Description: Declare the data value corresponding to the position of the slider at the beginning of the slider.The default is the minimum value.</li>\n</ul>\n<h3 id="end-string-">end?: string;</h3>\n<ul>\n<li>Description: Declare the data value corresponding to the position of the slider at the end of the slider.The default is the maximum value.</li>\n</ul>\n<h3 id="minspan-number-">minSpan?: number;</h3>\n<ul>\n<li>Description: </li>\n</ul>\n<h3 id="maxspan-number-">maxSpan?: number;</h3>\n<ul>\n<li>Description: </li>\n</ul>\n<h3 id="scales-any-">scales?: any;</h3>\n<ul>\n<li>Description: Used to define columns for xAxis and yAxis fields. The corresponding columns in the chart for the same operation are defined identically.</li>\n</ul>\n<p>Example code:</p>\n<pre><code>{\n  <span class="hljs-selector-attr">[`${xAxis}`]</span>: {\n    <span class="hljs-attribute">type</span>: <span class="hljs-string">\'time\'</span>,\n    <span class="hljs-attribute">mask</span>: <span class="hljs-string">\'MM-DD\'</span>\n  }\n}\n</code></pre><h3 id="backgroundchart-any-">backgroundChart?: any;</h3>\n<ul>\n<li>Description: The background chart configuration of the slider which can be configured with its chart type and color:</li>\n</ul>\n<pre><code>{\n  <span class="hljs-attribute">type</span>: [ <span class="hljs-string">\'area\'</span> ], <span class="hljs-comment">// The type of a chart,which can be a string or an array.</span>\n  <span class="hljs-attribute">color</span>: <span class="hljs-string">\'#CCD6EC\'</span>\n}\n</code></pre><h3 id="onchange-opts-any-">onChange?: (opts: any) =&gt; {};</h3>\n<ul>\n<li>Description: When the slider changes, the callback function is triggered, which is mainly used to update the state of DS. The callback function will provide a parameter that is an object with the following attributes:</li>\n</ul>\n<pre><code>onChange: <span class="hljs-function"><span class="hljs-params">(obj)</span> =&gt;</span> {\n  const { startValue, endValue, startText, endText } = obj;\n}\n</code></pre><ul>\n<li>startValue: The starting slider currently corresponds to the original data value, which is a timestamp if  type is the time or timeCat.</li>\n<li>endValue: The ending slider currently corresponds to the original data value, which is a timestamp if  type is the time or timeCat.</li>\n<li>startText: The current display text of the start slider</li>\n<li>endText: The current display text  of the end slider</li>\n</ul>\n<blockquote>\n<p>Instruction: Text and value are distinguished because in most cases the user formats the value, so when setting and updating the state variables, it is necessary to ensure the consistency of the value types before and after.</p>\n</blockquote>\n<h3 id="handlestyle-any">handleStyle?: any</h3>\n<p>todo</p>\n<ul>\n<li>Description: The configuration of the slider ,which can be configured as follows:</li>\n</ul>\n<pre><code>{\n  <span class="hljs-selector-tag">img</span>: <span class="hljs-string">\'https://gw.alipayobjects.com/zos/rmsportal/QXtfhORGlDuRvLXFzpsQ.png\'</span>, <span class="hljs-comment">// It can be picture address or data URLs.</span>\n  <span class="hljs-attribute">width</span>: <span class="hljs-number">5</span>,\n  <span class="hljs-attribute">height</span>: <span class="hljs-number">26</span>\n}\n</code></pre><h3 id="textstyle-any">textStyle?: any</h3>\n<p>todo</p>\n<ul>\n<li>Description: The font style configuration for Slider assists text.</li>\n</ul>\n<h3 id="backgroundstyle-any">backgroundStyle?: any</h3>\n<p>todo</p>\n<ul>\n<li>Description: The overall background style for slider.</li>\n</ul>\n<h3 id="fillerstyle-any">fillerStyle?: any</h3>\n<p>todo</p>\n<ul>\n<li>Description: The configuration of the selected area ,which is configured by default as follows:</li>\n</ul>\n<pre><code>{\n  <span class="hljs-attribute">fill</span>: <span class="hljs-string">\'#BDCCED\'</span>,\n  fillOpacity: <span class="hljs-number">0.3</span>\n}\n</code></pre>'},1236:function(module,exports){module.exports='<h1 id="style">Style</h1>\n<p>常见样式, 类似于 css， 不做详细说明</p>\n<h1 id="api">API</h1>\n<h3 id="-">文本样式</h3>\n<pre><code><span class="hljs-keyword">interface</span> ITextStyle {\n  fontSize?: <span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>;\n  fontFamily?: <span class="hljs-built_in">string</span>;\n  fontWeight?: <span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>;\n  textAlign?: <span class="hljs-built_in">string</span>;\n  fill?: <span class="hljs-built_in">string</span>;\n  lineHeight?: <span class="hljs-built_in">number</span>;\n  textBaseline?: <span class="hljs-built_in">string</span>;\n  rotate?: <span class="hljs-built_in">number</span>;\n  shadowBlur?: <span class="hljs-built_in">number</span>;\n  shadowColor?: <span class="hljs-built_in">string</span>;\n}\n</code></pre><h3 id="-">线条样式</h3>\n<pre><code><span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">ILineStyle</span> {</span>\n  stroke?: string;\n  strokeOpacity?: number;\n  lineWidth?: number;\n  lineHeight?: number;\n  lineDash?: number[];\n  length?: number;\n  textAlign?: string;\n}\n</code></pre>'},1237:function(module,exports){module.exports='<h1 id="style">Style</h1>\n<p>Common styles, similar to CSS, do not elaborate.</p>\n<h1 id="api">API</h1>\n<h3 id="text-style">Text style</h3>\n<pre><code><span class="hljs-keyword">interface</span> ITextStyle {\n  fontSize?: <span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>;\n  fontFamily?: <span class="hljs-built_in">string</span>;\n  fontWeight?: <span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>;\n  textAlign?: <span class="hljs-built_in">string</span>;\n  fill?: <span class="hljs-built_in">string</span>;\n  lineHeight?: <span class="hljs-built_in">number</span>;\n  textBaseline?: <span class="hljs-built_in">string</span>;\n  rotate?: <span class="hljs-built_in">number</span>;\n  shadowBlur?: <span class="hljs-built_in">number</span>;\n  shadowColor?: <span class="hljs-built_in">string</span>;\n}\n</code></pre><h3 id="line-style">Line style</h3>\n<pre><code><span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">ILineStyle</span> {</span>\n  stroke?: string;\n  strokeOpacity?: number;\n  lineWidth?: number;\n  lineHeight?: number;\n  lineDash?: number[];\n  length?: number;\n  textAlign?: string;\n}\n</code></pre>'},1238:function(module,exports){module.exports='<h1 id="tooltip">Tooltip</h1>\n<p>提示信息(tooltip)组件，是指当鼠标悬停在图表上的某点时，以提示框的形式展示该点的数据，比如该点的值，数据单位等。</p>\n<h2 id="api">API</h2>\n<h3 id="x-number-">x?: number;</h3>\n<ul>\n<li>描述：</li>\n</ul>\n<h3 id="y-number-">y?: number;</h3>\n<ul>\n<li>描述：</li>\n</ul>\n<h3 id="items-object-">items?: object[];</h3>\n<ul>\n<li>描述：</li>\n</ul>\n<h3 id="show-boolean-">show?: boolean;</h3>\n<ul>\n<li>描述：是否展示提示信息</li>\n</ul>\n<h3 id="triggeron-triggertype-">triggerOn?: triggerType;</h3>\n<ul>\n<li><p>描述：tooltip 的触发方式，可配置的值为：&#39;mousemove&#39;、&#39;click&#39;、&#39;none&#39;，默认为 mousemove。</p>\n</li>\n<li><p>&#39;mousemove&#39;: 鼠标移动触发；</p>\n</li>\n<li>&#39;click&#39;: 鼠标点击出发；</li>\n<li>&#39;none&#39;: 不触发 tooltip，用户通过 chart.showTooltip() 和 chart.hideTooltip() 来控制 tooltip 的显示和隐藏。</li>\n</ul>\n<h3 id="showtitle-boolean-">showTitle?: boolean;</h3>\n<ul>\n<li>描述：是否展示提示信息的标题，默认为 true，即展示，通过设置为 false 来隐藏标题。</li>\n</ul>\n<h3 id="title-string-">title?: string;</h3>\n<ul>\n<li>描述：设置 tooltip 的标题展示的数据字段，设置该字段后，该标题即会展示该字段对应的数值。showTitle 为 false 时，该设置不生效。</li>\n</ul>\n<h3 id="crosshairs-boolean-icrosshairs-">crosshairs?: boolean | ICrosshairs;</h3>\n<ul>\n<li>描述：是一个对象类型，用于设置 tooltip 的辅助线或者辅助框。</li>\n</ul>\n<p>默认我们为 geom 为 ‘line’, ‘area’, ‘path’, ‘areaStack’ 开启了垂直辅助线；geom 为‘interval’ 默认会展示矩形背景框。</p>\n<p>可支持配置如下：</p>\n<pre><code><span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">ICrosshairs</span> {</span>\n  type?: string;  <span class="hljs-comment">// rect 表示矩形框，x 表示水平辅助线，y 表示垂直辅助线，cross 表示十字辅助线</span>\n  style?: IStyle.ILineStyle;\n}\n</code></pre><h3 id="offset-number-">offset?: number;</h3>\n<ul>\n<li>描述：设置 tooltip 距离鼠标的偏移量。</li>\n</ul>\n<h3 id="inplot-boolean-">inPlot?: boolean;</h3>\n<ul>\n<li>描述：设置是否将 tooltip 限定在绘图区域内，默认为 true，即限定在绘图区域内。</li>\n</ul>\n<h3 id="follow-boolean-">follow?: boolean;</h3>\n<ul>\n<li>描述：设置 tooltip 是否跟随鼠标移动。默认为 true，即跟随。</li>\n</ul>\n<h3 id="shared-boolean-">shared?: boolean;</h3>\n<ul>\n<li>描述：是否展示多条 tooltip, 默认值:true; false 表示只展示单条 tooltip。</li>\n</ul>\n<h3 id="enterable-boolean-">enterable?: boolean;</h3>\n<ul>\n<li>描述：用于控制是否允许鼠标进入 tooltip，默认为 false，即不允许进入。</li>\n</ul>\n<h3 id="position-string-">position?: string;</h3>\n<ul>\n<li>描述：该属性设置之后，就会在固定位置展示 tooltip，可设置的值为：left、right、top、bottom。</li>\n</ul>\n<h3 id="hidemarkers-boolean-">hideMarkers?: boolean;</h3>\n<ul>\n<li>描述：对于 line、area、path 这三种几何图形，在渲染 tooltip 时会自动渲染 tooltipMarker ，通过声明该属性值为 true 来关闭 tooltipMarker。</li>\n</ul>\n<h3 id="containertpl-string-">containerTpl?: string;</h3>\n<ul>\n<li>描述：tooltip 默认的容器模板，默认值如下：</li>\n</ul>\n<pre><code>containerTpl= \'&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">"g2-tooltip"</span>&gt;\'\n  + \'&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">"g2-tooltip-title"</span> style=<span class="hljs-string">"margin-bottom: 4px;"</span>&gt;&lt;/<span class="hljs-keyword">div</span>&gt;\'\n  + \'&lt;ul <span class="hljs-built_in">class</span>=<span class="hljs-string">"g2-tooltip-list"</span>&gt;&lt;/ul&gt;\'\n  + \'&lt;/<span class="hljs-keyword">div</span>&gt;\',\n</code></pre><p>如默认结构不满足需求，可以自定义该模板，但是自定义模板时必须包含各个 dom 节点的 class，样式可以自定义。</p>\n<h3 id="itemtpl-string-">itemTpl?: string;</h3>\n<ul>\n<li>描述：tooltip 每项记录的默认模板，默认值如下：</li>\n</ul>\n<pre><code><span class="xml">itemTpl: \'<span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-index</span>=</span></span><span class="hljs-template-variable">{index}</span><span class="xml"><span class="hljs-tag">&gt;</span>\'\n  + \'<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"background-color:</span></span></span><span class="hljs-template-variable">{color}</span><span class="xml"><span class="hljs-tag"><span class="hljs-string">;width:8px;height:8px;border-radius:50%;display:inline-block;margin-right:8px;"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\'\n  + \'</span><span class="hljs-template-variable">{name}</span><span class="xml">: </span><span class="hljs-template-variable">{value}</span><span class="xml">\'\n  + \'<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>\'</span>\n</code></pre><p>如默认结构不满足需求，可以自定义该模板，但是自定义模板时必须包含各个 dom 节点的 class，样式可以自定义。</p>\n<h3 id="g2tooltip-any-">g2Tooltip?: any;</h3>\n<ul>\n<li>描述：设置 tooltip 容器的 CSS 样式。</li>\n</ul>\n<h3 id="g2tooltiptitle-any-">g2TooltipTitle?: any;</h3>\n<ul>\n<li>描述：设置 tooltip 标题的 CSS 样式。</li>\n</ul>\n<h3 id="g2tooltiplist-any-">g2TooltipList?: any;</h3>\n<ul>\n<li>描述：设置 tooltip 列表容器的 CSS 样式。</li>\n</ul>\n<h3 id="g2tooltiplistitem-any-">g2TooltipListItem?: any;</h3>\n<ul>\n<li>描述：设置 tooltip 列表容器中每一项的 CSS 样式。</li>\n</ul>\n<h3 id="g2tooltipmarker-any-">g2TooltipMarker?: any;</h3>\n<ul>\n<li>设置tooltip 列表容器中每一项 marker 的 CSS 样式。</li>\n</ul>\n<h3 id="onshow-eventfunc-">onShow?: eventFunc;</h3>\n<ul>\n<li>描述：</li>\n</ul>\n<h3 id="onhide-eventfunc-">onHide?: eventFunc;</h3>\n<ul>\n<li>描述：</li>\n</ul>\n<h3 id="onchange-eventfunc-">onChange?: eventFunc;</h3>\n<ul>\n<li>描述：</li>\n</ul>\n<h3 id="defaultpoint-any-">defaultPoint?: any;</h3>\n<ul>\n<li>描述：</li>\n</ul>\n'},1239:function(module,exports){module.exports='<h1 id="tooltip">Tooltip</h1>\n<p>The tooltip component is a tooltip box that displays the data of a point when the mouse hovers over it, such as the value of the point, the unit of data, etc.</p>\n<h2 id="api">API</h2>\n<h3 id="x-number-">x?: number;</h3>\n<ul>\n<li>Description:</li>\n</ul>\n<h3 id="y-number-">y?: number;</h3>\n<ul>\n<li>Description:</li>\n</ul>\n<h3 id="items-object-">items?: object[];</h3>\n<ul>\n<li>Description:</li>\n</ul>\n<h3 id="show-boolean-">show?: boolean;</h3>\n<ul>\n<li>Description: whether show the tooltip or not.</li>\n</ul>\n<h3 id="triggeron-triggertype-">triggerOn?: triggerType;</h3>\n<ul>\n<li><p>Description: Tooltip can be triggered with these configurable values: &#39;mousemove&#39;,&#39;click&#39;,&#39;none&#39;, defaulting to mousemove.</p>\n</li>\n<li><p>&#39;mousemove&#39;: trigger with mouse move.</p>\n</li>\n<li>&#39;click&#39;: trigger with mouse click.</li>\n<li>&#39;none&#39;: Don&#39;t trigger tooltip, The user controls tooltip&#39;s display and hiding through &#39;chart.showTooltip()&#39; and &#39;chart.hideTooltip()&#39;.</li>\n</ul>\n<h3 id="showtitle-boolean-">showTitle?: boolean;</h3>\n<ul>\n<li>Description: Whether to display the title of the tooltip, default to true, that is, display, by setting it to false to hide the title.</li>\n</ul>\n<h3 id="title-string-">title?: string;</h3>\n<ul>\n<li>Description: Set the data field displayed by the title of the tooltip, and when this field is set, the title displays the corresponding value of the field. When showTitle is false, the settings do not work.</li>\n</ul>\n<h3 id="crosshairs-boolean-icrosshairs-">crosshairs?: boolean | ICrosshairs;</h3>\n<ul>\n<li>Description: It is an object type that is used to set up the auxiliary line or auxiliary box of tooltip.</li>\n</ul>\n<p>By default, we open vertical auxiliary lines for geom as &#39;line&#39;,&#39;area&#39;,&#39;path&#39;,&#39;areaStack&#39;; and geom displays a rectangular background box for &#39;interval&#39; by default.</p>\n<p>The supporting configuration is as follows:</p>\n<pre><code><span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">ICrosshairs</span> {</span>\n  type?: string;  <span class="hljs-comment">// \'rect\' represents a rectangle, \'X\' represents a horizontal auxiliary line, \'Y \'represents a vertical auxiliary line, and \'cross\' represents a cross auxiliary line.</span>\n  style?: IStyle.ILineStyle;\n}\n</code></pre><h3 id="offset-number-">offset?: number;</h3>\n<ul>\n<li>Description: Set the tooltip offset from the mouse.</li>\n</ul>\n<h3 id="inplot-boolean-">inPlot?: boolean;</h3>\n<ul>\n<li>Description: Set whether to restrict tooltip to the drawing area, defaults to true, that is, it is restricted to the drawing area.</li>\n</ul>\n<h3 id="follow-boolean-">follow?: boolean;</h3>\n<ul>\n<li>Description: Set whether tooltip to follow the mouse movement. The default is true, that is, follow.</li>\n</ul>\n<h3 id="shared-boolean-">shared?: boolean;</h3>\n<ul>\n<li>Description: Whether to display multiple tooltip, default value is true, false indicates only one tooltip.</li>\n</ul>\n<h3 id="enterable-boolean-">enterable?: boolean;</h3>\n<ul>\n<li>Description: To control whether the mouse is allowed to enter tooltip, the default is false, which is not allowed to enter.</li>\n</ul>\n<h3 id="position-string-">position?: string;</h3>\n<ul>\n<li>Description: After this property is set, tooltip is displayed in a fixed location with the settable values: left, right, top, bottom.</li>\n</ul>\n<h3 id="hidemarkers-boolean-">hideMarkers?: boolean;</h3>\n<ul>\n<li>Description: For line, area, and path geometries, tooltipMarker is automatically rendered when tooltip is rendered, and the tooltipMarker is closed by declaring the property value true.</li>\n</ul>\n<h3 id="containertpl-string-">containerTpl?: string;</h3>\n<ul>\n<li>Description: Tooltip default container template with default values as follows:</li>\n</ul>\n<pre><code>containerTpl= \'&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">"g2-tooltip"</span>&gt;\'\n  + \'&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">"g2-tooltip-title"</span> style=<span class="hljs-string">"margin-bottom: 4px;"</span>&gt;&lt;/<span class="hljs-keyword">div</span>&gt;\'\n  + \'&lt;ul <span class="hljs-built_in">class</span>=<span class="hljs-string">"g2-tooltip-list"</span>&gt;&lt;/ul&gt;\'\n  + \'&lt;/<span class="hljs-keyword">div</span>&gt;\',\n</code></pre><p>If the default structure does not meet the requirements, you can customize the template, but when you customize the template, you must include the class of each DOM node, and the style can be customized.</p>\n<h3 id="itemtpl-string-">itemTpl?: string;</h3>\n<ul>\n<li>Description: The default template for each item is tooltip. The default values are as follows:</li>\n</ul>\n<pre><code><span class="xml">itemTpl: \'<span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-index</span>=</span></span><span class="hljs-template-variable">{index}</span><span class="xml"><span class="hljs-tag">&gt;</span>\'\n  + \'<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"background-color:</span></span></span><span class="hljs-template-variable">{color}</span><span class="xml"><span class="hljs-tag"><span class="hljs-string">;width:8px;height:8px;border-radius:50%;display:inline-block;margin-right:8px;"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\'\n  + \'</span><span class="hljs-template-variable">{name}</span><span class="xml">: </span><span class="hljs-template-variable">{value}</span><span class="xml">\'\n  + \'<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>\'</span>\n</code></pre><p>If the default structure does not meet the requirements, you can customize the template, but when you customize the template, you must include the class of each DOM node, and the style can be customized.</p>\n<h3 id="g2tooltip-any-">g2Tooltip?: any;</h3>\n<ul>\n<li>Description: Set the CSS style of the tooltip container.</li>\n</ul>\n<h3 id="g2tooltiptitle-any-">g2TooltipTitle?: any;</h3>\n<ul>\n<li>Description: Sets the CSS style of the tooltip title.</li>\n</ul>\n<h3 id="g2tooltiplist-any-">g2TooltipList?: any;</h3>\n<ul>\n<li>Description: Set the CSS style of the tooltip list container.</li>\n</ul>\n<h3 id="g2tooltiplistitem-any-">g2TooltipListItem?: any;</h3>\n<ul>\n<li>Description: Set the CSS style of each item in the tooltip list container.</li>\n</ul>\n<h3 id="g2tooltipmarker-any-">g2TooltipMarker?: any;</h3>\n<ul>\n<li>Description: Set the CSS style of each marker in the tooltip list container.</li>\n</ul>\n<h3 id="onshow-eventfunc-">onShow?: eventFunc;</h3>\n<ul>\n<li>Description:</li>\n</ul>\n<h3 id="onhide-eventfunc-">onHide?: eventFunc;</h3>\n<ul>\n<li>Description:</li>\n</ul>\n<h3 id="onchange-eventfunc-">onChange?: eventFunc;</h3>\n<ul>\n<li>Description:</li>\n</ul>\n<h3 id="defaultpoint-any-">defaultPoint?: any;</h3>\n<ul>\n<li>Description:</li>\n</ul>\n'},124:function(module,exports,__webpack_require__){"use strict";exports.__esModule=!0;var _utils=__webpack_require__(15),_exception=__webpack_require__(24),_exception2=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(_exception);exports.default=function(instance){instance.registerHelper("each",function(context,options){function execIteration(field,index,last){data&&(data.key=field,data.index=index,data.first=0===index,data.last=!!last,contextPath&&(data.contextPath=contextPath+field)),ret+=fn(context[field],{data:data,blockParams:_utils.blockParams([context[field],field],[contextPath+field,null])})}if(!options)throw new _exception2.default("Must pass iterator to #each");var fn=options.fn,inverse=options.inverse,i=0,ret="",data=void 0,contextPath=void 0;if(options.data&&options.ids&&(contextPath=_utils.appendContextPath(options.data.contextPath,options.ids[0])+"."),_utils.isFunction(context)&&(context=context.call(this)),options.data&&(data=_utils.createFrame(options.data)),context&&"object"==typeof context)if(_utils.isArray(context))for(var j=context.length;i<j;i++)i in context&&execIteration(i,i,i===context.length-1);else{var priorKey=void 0;for(var key in context)context.hasOwnProperty(key)&&(void 0!==priorKey&&execIteration(priorKey,i-1),priorKey=key,i++);void 0!==priorKey&&execIteration(priorKey,i-1,!0)}return 0===i&&(ret=inverse(this)),ret})},module.exports=exports.default},1240:function(module,exports){module.exports='<h1 id="view">View</h1>\n<p>视图，由 Chart 生成和管理，拥有自己独立的数据源、坐标系和图层，用于异构数据的可视化以及图表组合，一个 Chart 由一个或者多个视图 View 组成。因此 view 上的 api 同 chart 基本相同。</p>\n<h1 id="api">API</h1>\n<h3 id="data-any-">data?: any;</h3>\n<ul>\n<li>描述：视图的数据源，同时也可以使用 view.source(data) 方法设置数据源。</li>\n</ul>\n<h3 id="viewid-string-">viewId?: string;</h3>\n<ul>\n<li>描述：视图 id，唯一标识视图</li>\n</ul>\n<h3 id="dataview-any-">dataView?: any;</h3>\n<ul>\n<li>描述：deprecate</li>\n</ul>\n<h3 id="coord-icoord-">coord?: ICoord;</h3>\n<ul>\n<li>描述：使用同 Chart 的 coord 属性。</li>\n</ul>\n<h3 id="scale-iscale-">scale?: IScale;</h3>\n<ul>\n<li>描述：使用同 Chart 的 scale 属性。</li>\n</ul>\n<h3 id="axis-iaxis-">axis?: IAxis;</h3>\n<ul>\n<li>描述：使用同 Chart 的 axis 属性。</li>\n</ul>\n<h3 id="guide-iguide-">guide?: IGuide;</h3>\n<ul>\n<li>描述：使用同 Chart 的 guide 属性。</li>\n</ul>\n<h3 id="series-iseries-">series?: ISeries;</h3>\n<ul>\n<li>描述：使用同 Chart 的 series 属性。</li>\n</ul>\n<h3 id="tooltip-itooltip-">tooltip?: ITooltip;</h3>\n<ul>\n<li>描述：使用同 Chart 的 tooltip 属性。</li>\n</ul>\n<h3 id="start-any-">start?: any;</h3>\n<ul>\n<li>描述：绘制区域的起始坐标，结构如下：</li>\n</ul>\n<pre><code>{\n  <span class="hljs-attribute">x</span>: <span class="hljs-number">0</span>, // x 取值范围为 <span class="hljs-number">0</span> - <span class="hljs-number">1</span>\n  y: <span class="hljs-number">0</span> // y 取值范围为 <span class="hljs-number">0</span> - <span class="hljs-number">1</span>\n}\n</code></pre><p>对于 view，我们的起始点是从左上角开始的。</p>\n<h3 id="end-any-">end?: any;</h3>\n<ul>\n<li>描述：绘制区域的终点坐标，结构如下：</li>\n</ul>\n<pre><code>{\n  <span class="hljs-attribute">x</span>: <span class="hljs-number">0</span>, // x 取值范围为 <span class="hljs-number">0</span> -<span class="hljs-number">1</span>\n  y: <span class="hljs-number">0</span> // y 取值范围为 <span class="hljs-number">0</span> -<span class="hljs-number">1</span>\n}\n</code></pre><h3 id="animate-boolean">animate?: boolean</h3>\n<p>todo</p>\n<ul>\n<li>描述：视图是否执行动画，默认执行。<blockquote>\n<p>注意：chart 下创建的 view 将默认使用 chart 的 列定义、坐标轴 axis 配置、坐标系 coord 配置，即如果 view 不自己定义则默认同 chart 的配置相同；如果 view 自己定义了相应的配置，则以自己的为准。</p>\n</blockquote>\n</li>\n</ul>\n'},1241:function(module,exports){module.exports='<h1 id="view">View</h1>\n<p>View, generated and managed by Chart, has its own independent data sources, coordinate systems and layers for heterogeneous data visualization and chart composition. A Chart consists of one or more Views. So the API on View is basically the same as Chart.</p>\n<h1 id="api">API</h1>\n<h3 id="data-any-">data?: any;</h3>\n<ul>\n<li>Description: The data source of the view can also be set up using the method: view.source(data).</li>\n</ul>\n<h3 id="viewid-string-">viewId?: string;</h3>\n<ul>\n<li>Description: View ID, the unique identification of View</li>\n</ul>\n<h3 id="dataview-any-">dataView?: any;</h3>\n<ul>\n<li>Description: deprecate</li>\n</ul>\n<h3 id="coord-icoord-">coord?: ICoord;</h3>\n<ul>\n<li>Description: Use the coord property the same as Chart.</li>\n</ul>\n<h3 id="scale-iscale-">scale?: IScale;</h3>\n<ul>\n<li>Description: Use the scale property the same as Chart.</li>\n</ul>\n<h3 id="axis-iaxis-">axis?: IAxis;</h3>\n<ul>\n<li>Description: Use the axis property the same as Chart.</li>\n</ul>\n<h3 id="guide-iguide-">guide?: IGuide;</h3>\n<ul>\n<li>Description: Use the guide property the same as Chart.</li>\n</ul>\n<h3 id="series-iseries-">series?: ISeries;</h3>\n<ul>\n<li>Description: Use the series property the same as Chart.</li>\n</ul>\n<h3 id="tooltip-itooltip-">tooltip?: ITooltip;</h3>\n<ul>\n<li>Description: Use the tooltip property the same as Chart.</li>\n</ul>\n<h3 id="start-any-">start?: any;</h3>\n<ul>\n<li>Description: Draw the initial coordinates of the region. The structure is as follows:</li>\n</ul>\n<pre><code>{\n<span class="hljs-symbol">  x:</span> <span class="hljs-number">0</span>, <span class="hljs-comment">// X has a range of 0-1.</span>\n<span class="hljs-symbol">  y:</span> <span class="hljs-number">0</span> <span class="hljs-comment">// Y has a range of 0-1.</span>\n}\n</code></pre><p>For view, our starting point is from the upper left corner.</p>\n<h3 id="end-any-">end?: any;</h3>\n<ul>\n<li>Description: Draw the end coordinates of the area. The structure is as follows:</li>\n</ul>\n<pre><code>{\n<span class="hljs-symbol">  x:</span> <span class="hljs-number">0</span>, <span class="hljs-comment">// X has a range of (0,1).</span>\n<span class="hljs-symbol">  y:</span> <span class="hljs-number">0</span> <span class="hljs-comment">// Y has a range of (0,1).</span>\n}\n</code></pre><h3 id="animate-boolean">animate?: boolean</h3>\n<p>todo</p>\n<ul>\n<li>Description: Whether animations are executed by view, default to be executed.<blockquote>\n<p>Be careful: The view created under the chart will default to the column definition, axis configuration, coordinate system coord configuration of the chart. That is, if the view is not self-defined, it defaults to the same configuration as the chart; if the view itself defines the corresponding configuration, then its own.</p>\n</blockquote>\n</li>\n</ul>\n'},1242:function(module,exports){module.exports="<p>todo</p>\n"},1243:function(module,exports){module.exports="<p>todo</p>\n"},1244:function(module,exports){module.exports='<h2 id="-">特点</h2>\n<p>这里我们讨论下 viser 和 g2 的差异之处，这里我们以 viser-react 举例，以便于您的理解。</p>\n<h3 id="-">组件分类</h3>\n<p>Viser 中所有的子组件分为几类：</p>\n<ul>\n<li>容器组件：Chart, View, FacetView, Facet, LiteChart；</li>\n<li>标准组件：Coord, Tooltip, Legend, Guide, Axis, Series；</li>\n<li>图形组件：Pie, Sector, Line, SmoothLine, DashLine, Area, StackArea, SmoothArea, Bar, StackBar, DodgeBar, Interval, StackInterval, DodgeInterval, Point, JitterPoint, Funnel, Pyramid, Schema, Box, Candle, Polygon, Contour, Heatmap, Edge, Sankey。</li>\n</ul>\n<p>容器组件代表它们是可以对应一组渲染，比如 Chart 容器包含组件绘制的所有步骤，而 G2 的图表可以由多个<a href="https://antv.alipay.com/zh-cn/g2/3.x/tutorial/how-to-create-view.html">视图 View 构成</a>，同时各个视图可以拥有各自的数据源，那么 View 也会包含组件绘制的一部分步骤。此外 <a href="https://antv.alipay.com/zh-cn/g2/3.x/tutorial/facet.html">Facet</a>, FacetView 是类似的，具体可以参考 demo 中的写法。</p>\n<p>标准组件对应 <a href="https://antv.alipay.com/zh-cn/g2/3.x/tutorial/understanding-g2-charts.html">G2 的图表组成</a> 包括了 Axis, Legend, Geom, Tooltip 和 Guide。对应到 viser 是 Axis, Legend, Series, Tooltip 和 Guide，另外将 Coord 也设置为组件。其中，Series 来代替 Geom，原因是大部分其它图表库更强调 Series 概念，G2 从图形语法层面将这一概念抽象成 Geom。</p>\n<p>图形组件是对 Series 类型的扩展，其实就是所有 <a href="https://antv.alipay.com/zh-cn/g2/3.x/tutorial/geom.html">geom 类型</a>。将它们具象化成组件，以方便在使用时理解。虽然我们还是可以用 Series 来做为组件，但推荐直接使用具体的图形名称来表示组件，例如 Bar 和 Line 等。这样方便语义化的使用。具体举例，比如：</p>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * G2\n */</span>\nchart.<span class="hljs-built_in">line</span>().<span class="hljs-built_in">position</span>(<span class="hljs-string">\'year*value\'</span>);\n</code></pre>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * Viser-react\n */</span>\n&lt;Line <span class="hljs-built_in">position</span>=<span class="hljs-string">"year*value"</span> /&gt;\n</code></pre>\n<h3 id="datakey-">dataKey 字段映射</h3>\n<p>对于字段映射的方式，viser 使用 <code>dataKey</code> 的方式来设置，与其它属性并列，比如在设置 <code>scale</code> 时，g2 的 <code>key</code> 就是数据的列字段，而 viser 里就是 <code>dataKey</code> 来表示：</p>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * G2\n */</span>\n<span class="hljs-selector-tag">chart</span><span class="hljs-selector-class">.scale</span>({\n  <span class="hljs-attribute">x</span>: { sync: true },\n  <span class="hljs-selector-tag">y</span>: { <span class="hljs-attribute">sync</span>: true },\n});\n</code></pre>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * Viser-react\n */</span>\n<span class="hljs-keyword">const</span> scale = [{\n  <span class="hljs-attr">dataKey</span>: <span class="hljs-string">\'x\'</span>,\n  <span class="hljs-attr">sync</span>: <span class="hljs-literal">true</span>,\n}, {\n  <span class="hljs-attr">dataKey</span>: <span class="hljs-string">\'y\'</span>,\n  <span class="hljs-attr">sync</span>: <span class="hljs-literal">true</span>,\n}];\n<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Chart</span> <span class="hljs-attr">scale</span>=<span class="hljs-string">{scale}</span> {<span class="hljs-attr">...others</span>}&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">Chart</span>&gt;</span></span>\n</code></pre>\n<p>其它，类似于 Legend, Axis 部分的字段映射使用同样的方式，用 <code>dataKey</code> 代表列字段。但在 Series 中并不是对单个字段映射，而且它是属性的一部分，因为我们的处理方式不同，使用数组的方式来表达。比如 <code>label</code> 属性中列字段是 <code>name</code>，并有配置，那么我们在 viser 中使用就直接使用一个数组来代表：</p>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * G2\n */</span>\n<span class="hljs-selector-tag">nodeView</span><span class="hljs-selector-class">.polygon</span>()\n<span class="hljs-selector-class">.position</span>(<span class="hljs-string">\'x*y\'</span>)\n<span class="hljs-selector-class">.color</span>(<span class="hljs-string">\'id\'</span>)\n<span class="hljs-selector-class">.label</span>(<span class="hljs-string">\'name\'</span>, {\n  <span class="hljs-attribute">labelEmit</span>: true,\n  <span class="hljs-attribute">textStyle</span>: {\n    <span class="hljs-attribute">fill</span>: <span class="hljs-string">\'#8c8c8c\'</span>\n  }\n});\n</code></pre>\n<pre><code class="lang-js">/*\n * Viser-react\n */\nconst <span class="hljs-keyword">label</span><span class="bash"> = [\n</span>  <span class="hljs-string">\'name\'</span>, {\n    labelEmit: true,\n    textStyle: {\n      fill: <span class="hljs-string">\'#8c8c8c\'</span>\n    },\n  }\n];\n&lt;Polygon position=<span class="hljs-string">\'x*y\'</span> color=<span class="hljs-string">\'id\'</span> <span class="hljs-keyword">label</span><span class="bash">={label} /&gt;</span>\n</code></pre>\n<h3 id="coord-">Coord 的角度</h3>\n<p><a href="https://antv.alipay.com/zh-cn/g2/3.x/tutorial/coord.html">Coord</a> 默认的 <code>startAngle</code> 和 <code>endAngle</code> 是用弧度表示的，比如角度是 180 度，那么弧度用 js 表示就是 <code>2 * Math.PI</code>。对于使用者来说，还是角度更简单和直观，因此，viser 使用角度来替代弧度。</p>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * G2\n */</span>\nchart.coord(<span class="hljs-string">\'polar\'</span>, {\n  startAngle: <span class="hljs-number">2</span> * Math.<span class="hljs-built-in">PI</span>,\n})\n</code></pre>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * Viser-react\n */</span>\n&lt;<span class="hljs-type">Coord</span> <span class="hljs-class"><span class="hljs-keyword">type</span></span>=<span class="hljs-string">"polar"</span> startAngle={<span class="hljs-number">180</span>} /&gt;\n</code></pre>\n<h3 id="coord-">Coord 的方向</h3>\n<p>Coord 组件用于表示 g2 中 coord 的相关内容。针对直角坐标系的图表，我们提供了 <code>direction</code> 这一优化后的参数用来展现 g2 中的 <code>transpose</code>, <code>reflect</code> 和 <code>scale</code> 这几个属性。根据 X 轴，Y 轴的位置，我们提供了 8 种坐标系的排列，分别有 BL, BR, LT, LB, RB, RT, TL, TR。B 代表 bottom, T 代表 top，L 代表 left，R 代表 right。具体举例，比如：</p>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * G2\n */</span>\n<span class="hljs-selector-tag">chart</span><span class="hljs-selector-class">.coord</span>()<span class="hljs-selector-class">.transpose</span>()<span class="hljs-selector-class">.scale</span>(1, <span class="hljs-selector-tag">-1</span>);\n</code></pre>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * Viser-react\n */</span>\n&lt;<span class="hljs-type">Coord</span> <span class="hljs-class"><span class="hljs-keyword">type</span></span>=<span class="hljs-string">"rect"</span> direction=<span class="hljs-string">"LT"</span> /&gt;\n</code></pre>\n<p>直角坐标系映射关系如下：</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">direction</th>\n<th style="text-align:left">配置</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">BL(默认）</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;);</td>\n</tr>\n<tr>\n<td style="text-align:left">BR</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).scale(-1, 1);</td>\n</tr>\n<tr>\n<td style="text-align:left">LT</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).transpose().scale(1, -1);</td>\n</tr>\n<tr>\n<td style="text-align:left">LB</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).transpose();</td>\n</tr>\n<tr>\n<td style="text-align:left">RB</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).transpose().reflect();</td>\n</tr>\n<tr>\n<td style="text-align:left">RT</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).transpose().reflect().scale(-1, 1);</td>\n</tr>\n<tr>\n<td style="text-align:left">TL</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).reflect();</td>\n</tr>\n<tr>\n<td style="text-align:left">TR</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).reflect().scale(-1, 1);</td>\n</tr>\n</tbody>\n</table>\n<p>同理，对于极坐标系我们也提供了 4 种方向，最主要是 <code>rotate</code> 和 <code>reverse</code> 两种，具体映射关系如下：</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">direction</th>\n<th style="text-align:left">配置</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">rotate</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).transpose();</td>\n</tr>\n<tr>\n<td style="text-align:left">xReverse</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).reflect(&#39;x&#39;);</td>\n</tr>\n<tr>\n<td style="text-align:left">yReverse</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).reflect(&#39;y&#39;);</td>\n</tr>\n<tr>\n<td style="text-align:left">reverse</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).reflect();</td>\n</tr>\n</tbody>\n</table>\n<h3 id="guide-">Guide 的类型</h3>\n<p>Guide 在 g2 中直接会指定，比如 <code>chart.guide().line()</code>，在 viser 中均使用 Guide 组件，类型就使用 <code>type</code> 字段来表示，比如：</p>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * G2\n */</span>\n<span class="hljs-selector-tag">chart</span><span class="hljs-selector-class">.guide</span>()<span class="hljs-selector-class">.line</span>()\n</code></pre>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * Viser-react\n */</span>\n&lt;<span class="hljs-type">Guide</span> <span class="hljs-class"><span class="hljs-keyword">type</span></span>=<span class="hljs-string">"line"</span> /&gt;\n</code></pre>\n<p>另外，提供了两种平行和正交快捷设置，因此增加了 <code>quickType</code> 的字段，value 则对应是 <code>parallel</code> 和 <code>normal</code>，比如：</p>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * G2\n */</span>\n<span class="hljs-selector-tag">chart</span><span class="hljs-selector-class">.guide</span><span class="hljs-selector-class">.line</span>({\n  <span class="hljs-attribute">start</span>: [<span class="hljs-string">\'min\'</span>, <span class="hljs-number">2</span>],\n  end: [<span class="hljs-string">\'max\'</span>, <span class="hljs-number">2</span>],\n});\n</code></pre>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * Viser-react\n */</span>\n&lt;Guide <span class="hljs-keyword">type</span>=<span class="hljs-string">"line"</span> quickType=<span class="hljs-string">"parallel"</span> <span class="hljs-built_in">data</span>={<span class="hljs-number">2</span>} /&gt;\n</code></pre>\n<h3 id="formatter-">Formatter 格式化方法</h3>\n<p>我们加入了 <code>d3-format</code> 库来增强 <code>label</code> 需要数据处理的能力，也就是说简单场景下的数据格式化，可以直接用 d3 提供的格式化表达式来完成。比如：</p>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * G2\n */</span>\n<span class="hljs-selector-tag">chart</span><span class="hljs-selector-class">.scale</span>({\n  <span class="hljs-attribute">percent</span>: {\n    min: <span class="hljs-number">0</span>,\n    <span class="hljs-built_in">formatter</span>(val) {\n      return (val * <span class="hljs-number">100</span>).<span class="hljs-built_in">toFixed</span>(2) + <span class="hljs-string">\'%\'</span>;\n    }\n  }\n});\n</code></pre>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * Viser-react\n */</span>\n<span class="hljs-keyword">const</span> <span class="hljs-built_in">scale</span> = [{\n  dataKey: <span class="hljs-string">\'percent\'</span>,\n  <span class="hljs-built_in">min</span>: <span class="hljs-number">0</span>,\n  formatter: <span class="hljs-string">\'.2%\'</span>,\n}];\n</code></pre>\n<h3 id="-">事件</h3>\n<p>Viser 的事件对于 <a href="https://antv.alipay.com/zh-cn/g2/3.x/tutorial/chart-event.html">g2 的事件</a> 来说看起来不太一样，viser 是直接绑定在元素上的，因此对于事件来说，在哪里用就在哪里绑定。但 g2 使用中常常使用到 chart 实例，因此 viser 将 chart 实例放在了回调函数第二个参数上，比如：</p>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * G2\n */</span>\n<span class="hljs-selector-tag">chart</span><span class="hljs-selector-class">.on</span>(<span class="hljs-string">\'mousedown\'</span>, ev =&gt; {});\n</code></pre>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * Viser-react\n */</span>\nhandleMouseDown = <span class="hljs-function">(<span class="hljs-params">ev, chart</span>) =&gt;</span> {}\n&lt;Chart onMouseDown={<span class="hljs-keyword">this</span>.handleMouseDown}&gt;\n<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">Chart</span>&gt;</span></span>\n</code></pre>\n<p>对于 Axis 来说，原来的 <code>chart.on(&#39;axis-title: click&#39;, ev =&gt; {})</code>，在 Axis 上绑定就会有一个 <code>onTitleClick</code> 的属性，其它的以此类推。</p>\n'},1245:function(module,exports){module.exports='<h2 id="feature">Feature</h2>\n<p>Here we discuss the differences between viser and g2, and here we take viser-react as an example for your understanding.</p>\n<h3 id="components-classification">Components classification</h3>\n<p>All sub components in Viser classify into several categories:</p>\n<ul>\n<li>Container components: Chart, View, FacetView, Facet, LiteChart；</li>\n<li>Standard components: Coord, Tooltip, Legend, Guide, Axis, Series；</li>\n<li>Graphic components: Pie, Sector, Line, SmoothLine, DashLine, Area, StackArea, SmoothArea, Bar, StackBar, DodgeBar, Interval, StackInterval, DodgeInterval, Point, JitterPoint, Funnel, Pyramid, Schema, Box, Candle, Polygon, Contour, Heatmap, Edge, Sankey.</li>\n</ul>\n<p>Container components represent a set of renderings that correspond to them, such as the Chart container containing all the steps of component drawing,G2 charts can be composed of multiple <a href="https://antv.alipay.com/zh-cn/g2/3.x/tutorial/how-to-create-view.html">views</a>，At the same time, each view can have its own data source, so the View also contains part of the component drawing steps.In addition <a href="https://antv.alipay.com/zh-cn/g2/3.x/tutorial/facet.html">Facet</a>, is similar as FacetView,you can refer to the detail method of writing in demo.</p>\n<p>Standard components corresponding to <a href="https://antv.alipay.com/zh-cn/g2/3.x/tutorial/understanding-g2-charts.html">Chart composition of G2</a> include Axis, Legend, Geom, Tooltip and Guide.Corresponding to viser is Axis, Legend, Series, Tooltip and Guide, and Coord is also set to components. Series replaces Geom because most other chart libraries place more emphasis on Series concepts, which G2 abstracts into Geom from a graphical syntax level.</p>\n<p> Graphic components is an extension to the Series type, which is all of the <a href="https://antv.alipay.com/zh-cn/g2/3.x/tutorial/geom.html">geom type</a>.They are figurative into components to facilitate understanding when used. Although we can still use Series as a component, it is recommended to represent components directly using specific graphical names, such as Bar and Line. This facilitates the use of semantics.Specific examples, such as:</p>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * G2\n */</span>\nchart.<span class="hljs-built_in">line</span>().<span class="hljs-built_in">position</span>(<span class="hljs-string">\'year*value\'</span>);\n</code></pre>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * Viser-react\n */</span>\n&lt;Line <span class="hljs-built_in">position</span>=<span class="hljs-string">"year*value"</span> /&gt;\n</code></pre>\n<h3 id="datakey-field-mapping">dataKey field mapping</h3>\n<p>For the way fields are mapped, viser uses <code>dataKey</code> to set them in parallel with other attributes, such as when setting <code>scale</code>, the <code>key</code> of G2 is the column field of the data, and the <code>dataKey</code> in the viser represents:</p>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * G2\n */</span>\n<span class="hljs-selector-tag">chart</span><span class="hljs-selector-class">.scale</span>({\n  <span class="hljs-attribute">x</span>: { sync: true },\n  <span class="hljs-selector-tag">y</span>: { <span class="hljs-attribute">sync</span>: true },\n});\n</code></pre>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * Viser-react\n */</span>\n<span class="hljs-keyword">const</span> scale = [{\n  <span class="hljs-attr">dataKey</span>: <span class="hljs-string">\'x\'</span>,\n  <span class="hljs-attr">sync</span>: <span class="hljs-literal">true</span>,\n}, {\n  <span class="hljs-attr">dataKey</span>: <span class="hljs-string">\'y\'</span>,\n  <span class="hljs-attr">sync</span>: <span class="hljs-literal">true</span>,\n}];\n<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Chart</span> <span class="hljs-attr">scale</span>=<span class="hljs-string">{scale}</span> {<span class="hljs-attr">...others</span>}&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">Chart</span>&gt;</span></span>\n</code></pre>\n<p>Others, similar to Legend, map fields in the Axis section use a same way, using <code>dataKey</code> to represent column fields. But in Series it&#39;s not a single field mapping, and it&#39;s part of a property because we&#39;re dealing with it differently, expressed in arrays. For example, if the column field in the <code>label</code> attribute is <code>name</code> and configured, then we use an array directly in the viser to represent:</p>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * G2\n */</span>\n<span class="hljs-selector-tag">nodeView</span><span class="hljs-selector-class">.polygon</span>()\n<span class="hljs-selector-class">.position</span>(<span class="hljs-string">\'x*y\'</span>)\n<span class="hljs-selector-class">.color</span>(<span class="hljs-string">\'id\'</span>)\n<span class="hljs-selector-class">.label</span>(<span class="hljs-string">\'name\'</span>, {\n  <span class="hljs-attribute">labelEmit</span>: true,\n  <span class="hljs-attribute">textStyle</span>: {\n    <span class="hljs-attribute">fill</span>: <span class="hljs-string">\'#8c8c8c\'</span>\n  }\n});\n</code></pre>\n<pre><code class="lang-js">/*\n * Viser-react\n */\nconst <span class="hljs-keyword">label</span><span class="bash"> = [\n</span>  <span class="hljs-string">\'name\'</span>, {\n    labelEmit: true,\n    textStyle: {\n      fill: <span class="hljs-string">\'#8c8c8c\'</span>\n    },\n  }\n];\n&lt;Polygon position=<span class="hljs-string">\'x*y\'</span> color=<span class="hljs-string">\'id\'</span> <span class="hljs-keyword">label</span><span class="bash">={label} /&gt;</span>\n</code></pre>\n<h3 id="the-angle-of-coord">The angle of Coord</h3>\n<p><a href="https://antv.alipay.com/zh-cn/g2/3.x/tutorial/coord.html">Coord</a> which the default <code>startAngle</code> and <code>endAngle</code> are expressed in radians, such as 180 degrees, and the radians in JS are <code>2*Math.PI</code>. For the user, the angle is still simpler and more intuitive, so the viser uses the angle instead of the radian.</p>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * G2\n */</span>\nchart.coord(<span class="hljs-string">\'polar\'</span>, {\n  startAngle: <span class="hljs-number">2</span> * Math.<span class="hljs-built-in">PI</span>,\n})\n</code></pre>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * Viser-react\n */</span>\n&lt;<span class="hljs-type">Coord</span> <span class="hljs-class"><span class="hljs-keyword">type</span></span>=<span class="hljs-string">"polar"</span> startAngle={<span class="hljs-number">180</span>} /&gt;\n</code></pre>\n<h3 id="the-direction-of-coord">The direction of Coord</h3>\n<p>The Coord component is used to represent the relevant contents of coord in G2. For chart in Cartesian coordinates, we provide an optimized parameter <code>direction</code> to show the <code>transpose</code>, <code>reflect</code>, and <code>scale</code> attributes in g2. According to the positions of the X and Y axis, we provide eight coordinate systems, BL, BR, LT, LB, RB, RT, TL, TR. B represents bottom, T represents top, L represents left, R represents right. Specific examples, such as:</p>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * G2\n */</span>\n<span class="hljs-selector-tag">chart</span><span class="hljs-selector-class">.coord</span>()<span class="hljs-selector-class">.transpose</span>()<span class="hljs-selector-class">.scale</span>(1, <span class="hljs-selector-tag">-1</span>);\n</code></pre>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * Viser-react\n */</span>\n&lt;<span class="hljs-type">Coord</span> <span class="hljs-class"><span class="hljs-keyword">type</span></span>=<span class="hljs-string">"rect"</span> direction=<span class="hljs-string">"LT"</span> /&gt;\n</code></pre>\n<p>The mapping relations in rectangular coordinates are as follows:</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">direction</th>\n<th style="text-align:left">config</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">BL(default)</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;);</td>\n</tr>\n<tr>\n<td style="text-align:left">BR</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).scale(-1, 1);</td>\n</tr>\n<tr>\n<td style="text-align:left">LT</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).transpose().scale(1, -1);</td>\n</tr>\n<tr>\n<td style="text-align:left">LB</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).transpose();</td>\n</tr>\n<tr>\n<td style="text-align:left">RB</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).transpose().reflect();</td>\n</tr>\n<tr>\n<td style="text-align:left">RT</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).transpose().reflect().scale(-1, 1);</td>\n</tr>\n<tr>\n<td style="text-align:left">TL</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).reflect();</td>\n</tr>\n<tr>\n<td style="text-align:left">TR</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).reflect().scale(-1, 1);</td>\n</tr>\n</tbody>\n</table>\n<p>Similarly, we also provide four directions for polar coordinate systems, the most important of which are <code>rotate</code> and <code>reverse</code>. The mapping relations are as follows:</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">direction</th>\n<th style="text-align:left">config</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">rotate</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).transpose();</td>\n</tr>\n<tr>\n<td style="text-align:left">xReverse</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).reflect(&#39;x&#39;);</td>\n</tr>\n<tr>\n<td style="text-align:left">yReverse</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).reflect(&#39;y&#39;);</td>\n</tr>\n<tr>\n<td style="text-align:left">reverse</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).reflect();</td>\n</tr>\n</tbody>\n</table>\n<h3 id="the-type-of-guide">The type of Guide</h3>\n<p>Guides are specified directly in g2, such as <code>chart.guide().line()</code>, using the Guide component in the viser, and types are represented by <code>type</code> fields, such as:</p>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * G2\n */</span>\n<span class="hljs-selector-tag">chart</span><span class="hljs-selector-class">.guide</span>()<span class="hljs-selector-class">.line</span>()\n</code></pre>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * Viser-react\n */</span>\n&lt;<span class="hljs-type">Guide</span> <span class="hljs-class"><span class="hljs-keyword">type</span></span>=<span class="hljs-string">"line"</span> /&gt;\n</code></pre>\n<p>In addition, two parallel and orthogonal shortcuts are provided, so the <code>quickType</code> field is added, and the value corresponds to <code>parallel</code> and <code>normal</code>, such as:</p>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * G2\n */</span>\n<span class="hljs-selector-tag">chart</span><span class="hljs-selector-class">.guide</span><span class="hljs-selector-class">.line</span>({\n  <span class="hljs-attribute">start</span>: [<span class="hljs-string">\'min\'</span>, <span class="hljs-number">2</span>],\n  end: [<span class="hljs-string">\'max\'</span>, <span class="hljs-number">2</span>],\n});\n</code></pre>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * Viser-react\n */</span>\n&lt;Guide <span class="hljs-keyword">type</span>=<span class="hljs-string">"line"</span> quickType=<span class="hljs-string">"parallel"</span> <span class="hljs-built_in">data</span>={<span class="hljs-number">2</span>} /&gt;\n</code></pre>\n<h3 id="formatting-method">Formatting method</h3>\n<p>We added the <code>d3-format</code> to enhance the ability of <code>label</code> to require data processing, that is, data formatting in simple scenarios can be done directly with the formatting expressions provided by d3. such as:</p>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * G2\n */</span>\n<span class="hljs-selector-tag">chart</span><span class="hljs-selector-class">.scale</span>({\n  <span class="hljs-attribute">percent</span>: {\n    min: <span class="hljs-number">0</span>,\n    <span class="hljs-built_in">formatter</span>(val) {\n      return (val * <span class="hljs-number">100</span>).<span class="hljs-built_in">toFixed</span>(2) + <span class="hljs-string">\'%\'</span>;\n    }\n  }\n});\n</code></pre>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * Viser-react\n */</span>\n<span class="hljs-keyword">const</span> <span class="hljs-built_in">scale</span> = [{\n  dataKey: <span class="hljs-string">\'percent\'</span>,\n  <span class="hljs-built_in">min</span>: <span class="hljs-number">0</span>,\n  formatter: <span class="hljs-string">\'.2%\'</span>,\n}];\n</code></pre>\n<h3 id="event">Event</h3>\n<p>Viser events look different for <a href="https://antv.alipay.com/zh-cn/g2/3.x/tutorial/chart-event.html">G2 events</a>. Visers are directly bound to elements, so for events, they are bound wherever they are used. But chart instances are often used in G2 usage, so viser puts the chart instance on the second parameter of the callback function, such as:</p>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * G2\n */</span>\n<span class="hljs-selector-tag">chart</span><span class="hljs-selector-class">.on</span>(<span class="hljs-string">\'mousedown\'</span>, ev =&gt; {});\n</code></pre>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * Viser-react\n */</span>\nhandleMouseDown = <span class="hljs-function">(<span class="hljs-params">ev, chart</span>) =&gt;</span> {}\n&lt;Chart onMouseDown={<span class="hljs-keyword">this</span>.handleMouseDown}&gt;\n<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">Chart</span>&gt;</span></span>\n</code></pre>\n<p>For Axis, the original <code>chart.on(&#39;axis-title: click&#39;, EV =&gt; {})</code> binds to Axis and has an <code>onTitleClick</code> attribute, and so on.</p>\n'},1246:function(module,exports){module.exports='<h2 id="-">安装</h2>\n<p>Viser Viser-Graph 为 React, Vue 和 Angular 提供了 3 个不同的分发版本。我们同时提供了 npm 安装和 umd 引入两种方式来使用 Viser。</p>\n<p>npm 安装是使用 Viser 最简单也是最快捷的方式。我们强烈建议您在开发单页应用(SPA)时采用这种方式进行安装。Viser 可以完美兼容 CommonJS 打包工具，例如我们最常用的 Webpack。</p>\n<p>UMD 引入是使用 script 标签引入来使用 Viser。当你需要快速使用的时候，这是最便捷的方式。</p>\n<h3 id="vue-">Vue 分发版</h3>\n<p>您需要使用版本 <strong>2.5</strong> 及以上的 Vue，来使用 Vue 分发版 Viser。</p>\n<h4 id="npm">npm</h4>\n<p>在终端使用如下命令来安装 npm 版本：</p>\n<pre><code class="lang-shell"><span class="hljs-meta">#</span><span class="bash"> latest stable</span>\n<span class="hljs-meta">$</span><span class="bash"> npm install viser-vue</span>\n</code></pre>\n<h4 id="umd">umd</h4>\n<p>我们在 unpkg.com 上提供了 UMD 的版本:</p>\n<pre><code class="lang-html"> <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://unpkg.com/viser-vue/umd/viser-vue.min.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</code></pre>\n<p>然后你可以使用全局变量 <code>window.ViserVue</code> 来进行调用 Viser。</p>\n<h3 id="angular-">Angular 分发版</h3>\n<p>您需要使用版本 <strong>2.4</strong> 及以上的 Angular，来使用 Angular 分发版 Viser。另外，你还需要版本 <strong>0.1</strong> 及以上的 reflect-metadata，版本 <strong>5</strong> 及以上的 rxjs，版本 <strong>0.7</strong> 及以上的 zone.js。</p>\n<h4 id="npm">npm</h4>\n<p>在终端使用如下命令来安装 npm 版本：</p>\n<pre><code class="lang-shell"><span class="hljs-meta">#</span><span class="bash"> latest stable</span>\n<span class="hljs-meta">$</span><span class="bash"> npm install viser-ng</span>\n</code></pre>\n<h4 id="umd">umd</h4>\n<p>我们在 unpkg.com 上提供了 UMD 的版本:</p>\n<pre><code class="lang-html"> <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://unpkg.com/viser-ng/umd/viser-ng.min.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</code></pre>\n<p>然后你可以使用全局变量 <code>window.ViserNg</code> 来进行调用 Viser。</p>\n<h3 id="react-">React 分发版</h3>\n<p>您需要使用版本 <strong>15</strong> 及以上的 React，来使用 React 分发版 Viser。显然，版本 <strong>16</strong> 也是可以的。</p>\n<h4 id="npm">npm</h4>\n<p>在终端使用如下命令来安装 npm 版本：</p>\n<pre><code class="lang-shell"><span class="hljs-meta">#</span><span class="bash"> latest stable</span>\n<span class="hljs-meta">$</span><span class="bash"> npm install viser-react</span>\n</code></pre>\n<h4 id="umd">umd</h4>\n<p>我们在 unpkg.com 上提供了 UMD 引入的版本:</p>\n<pre><code class="lang-html"> <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://unpkg.com/viser-react/umd/viser-react.min.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</code></pre>\n<p>然后你可以使用全局变量 <code>window.ViserReact</code> 来进行调用 Viser。</p>\n<h2 id="demo">Demo</h2>\n<p>To examine the demos in your local build, open to <code>demo</code> directory, and execute</p>\n<pre><code class="lang-shell"><span class="hljs-meta">$</span><span class="bash"> git <span class="hljs-built_in">clone</span> https://github.com/viserjs/viser.git</span>\n<span class="hljs-meta">$</span><span class="bash"> npm run postinstall</span>\n<span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">cd</span> ./demo &amp;&amp; npm install</span>\n<span class="hljs-meta">$</span><span class="bash"> npm run start</span>\n</code></pre>\n'},1247:function(module,exports){module.exports='<h2 id="installation">Installation</h2>\n<p>Viser include 3 version which is integrated by React, Vue and Angular. We provide NPM or UMD to use library.</p>\n<p>NPM is the easiest and fastest way to get started using Viser. It is the recommended installation method when building single-page applications (SPAs). It pairs nicely with a CommonJS module bundler such as Webpack.</p>\n<p>UMD is the script way to using Viser. It is convenient method when you used quickly.</p>\n<h3 id="vue-version">Vue Version</h3>\n<p>In Vue version, You mush prepare to Vue version greater than <strong>2.5</strong> in project.</p>\n<h4 id="npm">npm</h4>\n<p>The NPM way is only install by shell:</p>\n<pre><code class="lang-shell"><span class="hljs-meta">#</span><span class="bash"> latest stable</span>\n<span class="hljs-meta">$</span><span class="bash"> npm install viser-vue</span>\n</code></pre>\n<h4 id="umd">umd</h4>\n<p>The UMD build is also available on unpkg.com:</p>\n<pre><code class="lang-html"> <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://unpkg.com/viser-vue/umd/viser-vue.min.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</code></pre>\n<p>Then you can find the library on window.ViserVue.</p>\n<h3 id="angular-version">Angular Version</h3>\n<p>In Angular version, You mush prepare to Angular version greater than <strong>2.4</strong> in project. In addition, you also prepare to reflect-metadata version greater than <strong>0.1</strong>, rxjs version greater than <strong>5</strong> and zone.js version greater than <strong>0.7</strong>.</p>\n<h4 id="npm">npm</h4>\n<p>The NPM way is only install by shell:</p>\n<pre><code class="lang-shell"><span class="hljs-meta">#</span><span class="bash"> latest stable</span>\n<span class="hljs-meta">$</span><span class="bash"> npm install viser-ng</span>\n</code></pre>\n<h4 id="umd">umd</h4>\n<p>The UMD build is also available on unpkg.com:</p>\n<pre><code class="lang-html"> <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://unpkg.com/viser-ng/umd/viser-ng.min.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</code></pre>\n<p>Then you can find the library on window.ViserNg.</p>\n<h3 id="react-version">React Version</h3>\n<p>In React version, You mush prepare React version greater then <strong>15</strong>, and support <strong>16</strong> certainly.</p>\n<h4 id="npm">npm</h4>\n<p>The NPM way is only install by shell:</p>\n<pre><code class="lang-shell"><span class="hljs-meta">#</span><span class="bash"> latest stable</span>\n<span class="hljs-meta">$</span><span class="bash"> npm install viser-react</span>\n</code></pre>\n<h4 id="umd">umd</h4>\n<p>The UMD build is also available on unpkg.com:</p>\n<pre><code class="lang-html"> <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://unpkg.com/viser-react/umd/viser-react.min.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</code></pre>\n<p>Then you can find the library on window.ViserReact.</p>\n<h2 id="demo">Demo</h2>\n<p>To examine the demos in your local build, open to <code>demo</code> directory, and execute</p>\n<pre><code class="lang-shell"><span class="hljs-meta">$</span><span class="bash"> git <span class="hljs-built_in">clone</span> https://github.com/viserjs/viser.git</span>\n<span class="hljs-meta">$</span><span class="bash"> npm run postinstall</span>\n<span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">cd</span> ./demo &amp;&amp; npm install</span>\n<span class="hljs-meta">$</span><span class="bash"> npm run start</span>\n</code></pre>\n'},1248:function(module,exports){module.exports='<h2 id="-">简介</h2>\n<p>Viser 一个基于 G2 实现的，为数据可视化工程师量身定制的工具。\nViser-Graph 一个基于 G6 实现的，为呈现关系型数据的定制化工具。</p>\n<p>Viser Viser-Graph 现已支持几大主流前端框架，例如 React, Vue 和 AngularJS。</p>\n<h3 id="-">核心价值</h3>\n<p>它可以开发网页应用的过程中，为图表开发带来卓越的体验。</p>\n<h3 id="-">设计原则</h3>\n<ol>\n<li>利用语义化组件来组合图表。包括但不限于 React, Vue 和 AugularJS 的组件。</li>\n<li>脱胎于 G2，一套基于可视化编码的图形语法。由此带来了强大的可视化能力。</li>\n</ol>\n'},1249:function(module,exports){module.exports='<h2 id="introduction">Introduction</h2>\n<p>A toolkit fit for data vis engineer based on G2. Viser support React, Vue and AngularJS.</p>\n<h3 id="main-purpose">Main Purpose</h3>\n<p>The main purpose of this library is to help you to write charts in web applications without any pain.</p>\n<h3 id="main-principles">Main Principles</h3>\n<ol>\n<li>Simply deploy with semantic component with chart, including but not limited to React, Vue and AugularJS.</li>\n<li>Lightweight depending only on G2 which is a plotting system for Javascript, based on the grammar of graphics.</li>\n</ol>\n'},125:function(module,exports,__webpack_require__){"use strict";exports.__esModule=!0;var _exception=__webpack_require__(24),_exception2=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(_exception);exports.default=function(instance){instance.registerHelper("helperMissing",function(){if(1!==arguments.length)throw new _exception2.default('Missing helper: "'+arguments[arguments.length-1].name+'"')})},module.exports=exports.default},1250:function(module,exports){module.exports='<h1 id="-">渲染</h1>\n<p>目前 所有图表 都支持了两种渲染引擎，并且同一个页面也可以混用两种渲染引擎，可以放心使用。</p>\n<h1 id="-">使用方式</h1>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-name">Chart</span> <span class="hljs-attr">height</span>=<span class="hljs-string">{400}</span> <span class="hljs-attr">data</span>=<span class="hljs-string">{data}</span> <span class="hljs-attr">renderer</span>=<span class="hljs-string">\'svg\'</span> /&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Chart</span> <span class="hljs-attr">height</span>=<span class="hljs-string">{400}</span> <span class="hljs-attr">data</span>=<span class="hljs-string">{data}</span> <span class="hljs-attr">renderer</span>=<span class="hljs-string">\'canvas\'</span> /&gt;</span>\n</code></pre><h1 id="svg-vs-canvas">svg VS canvas</h1>\n<p>HTML5 提供了 Canvas 和 SVG 两种绘图技术，也是多数 Web 图表库使用的渲染技术。Canvas 是基于脚本的，通过 JavaScript 指令来动态绘图。而 SVG 则是使用 XML 文档来描述矢量图。两者有不同的适用场景。</p>\n<h2 id="-">适用场景</h2>\n<p>Canvas 提供的绘图能力更底层，适合做到像素级的图形处理，能动态渲染和绘制大数据量的图形。而 SVG 抽象层次更高，声明描述式的接口功能更丰富，内置了大量的图形、滤镜和动画等，方便进行文档元素的维护，也能导出为文件脱离浏览器环境使用。</p>\n<p>下图从通用层面描述不同渲染技术各自适合的场景。\n<img src="https://gw.alipayobjects.com/zos/rmsportal/pqfukMDPRpEvIYNvddxN.jpg" /></p>\n<h2 id="-">性能差异</h2>\n<p>之前网上有不少 Canvas 和 SVG 性能对比的文章，得出的结论大体是“Canvas 性能更好，适合更大量数据的渲染”。其实这么说是有失偏颇的。性能对比要看场景。从底层来看，Canvas 的性能受画布尺寸影响更大，而 SVG 的性能受图形元素个数影响更大。下图是微软 MSDN 上给的一个对比图。</p>\n<p><img src="https://gw.alipayobjects.com/zos/rmsportal/nNSsPFkNcAoxQTfHfZes.png"/></p>\n<p>而且在小数据量的情况下，SVG 的方案通常内存占用会更小，做缩放、平移等操作的时候往往帧率也更高。</p>\n<h2 id="-">小结</h2>\n<p>如果单就图表库的视角来看，选择 Canvas 和 SVG 各有千秋。小画布、大数据量的场景适合用 Canvas，譬如热力图、大数据量的散点图等。如果画布非常大，有缩放、平移等高频的交互，或者移动端对内存占用量非常敏感等场景，可以使用 SVG 的方案。</p>\n'},1251:function(module,exports){module.exports='<h2 id="rendering">Rendering</h2>\n<p>At present, all charts support two rendering engines, and the same page can also be mixed with two rendering engines, you can rest assured that use.</p>\n<h3 id="usage-mode">Usage mode</h3>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-name">Chart</span> <span class="hljs-attr">height</span>=<span class="hljs-string">{400}</span> <span class="hljs-attr">data</span>=<span class="hljs-string">{data}</span> <span class="hljs-attr">renderer</span>=<span class="hljs-string">\'svg\'</span> /&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Chart</span> <span class="hljs-attr">height</span>=<span class="hljs-string">{400}</span> <span class="hljs-attr">data</span>=<span class="hljs-string">{data}</span> <span class="hljs-attr">renderer</span>=<span class="hljs-string">\'canvas\'</span> /&gt;</span>\n</code></pre><h3 id="svg-vs-canvas">svg VS canvas</h3>\n<p>HTML5 provides both Canvas and SVG, as well as rendering techniques used by most Web chart libraries. Canvas is based on script and dynamically drafting through JavaScript instructions. SVG uses XML to describe Vectorgraph. They have different application scenarios.</p>\n<h3 id="application-scenary">Application scenary</h3>\n<p>Canvas provides a lower level of graphics capabilities, suitable for pixel-level graphics processing, dynamic rendering and rendering of large amounts of data graphics. SVG has a higher level of abstraction, a richer declarative and descriptive interface, a large number of graphics, filters and animations built-in to facilitate the maintenance of document elements, but also can be exported out of the browser environment for use.</p>\n<p>The following diagram describes the appropriate scenarios for different rendering techniques from the general level.\n<img src="https://gw.alipayobjects.com/zos/rmsportal/pqfukMDPRpEvIYNvddxN.jpg" /></p>\n<h3 id="performance-difference">Performance difference</h3>\n<p>Previous articles on the Internet comparing the performance of Canvas and SVG concluded that &quot;Canvas has better performance and is suitable for rendering larger amounts of data&quot;. In fact, this is biased. Performance contrast depends on the scene. At the bottom, the performance of Canvas is more affected by canvas size, while the performance of SVG is more affected by the number of graphic elements. The following is a comparison map given on Microsoft MSDN.</p>\n<p><img src="https://gw.alipayobjects.com/zos/rmsportal/nNSsPFkNcAoxQTfHfZes.png"/></p>\n<p>And in the case of small data volume, SVG schemes usually occupy less memory, do zooming, translation and other operations tend to frame rate is higher.</p>\n<h3 id="summary">Summary</h3>\n<p>If you only look at the view of the chart library, Canvas and SVG have their own advantages. Small canvas and large data scenes are suitable for Canvas, such as thermodynamic charts and scatter plots of large data. If the canvas is very large, high-frequency interaction such as scaling, translation, or the mobile terminal which is very sensitive to memory usage, you can use the SVG.</p>\n'},1252:function(module,exports){module.exports='<h2 id="-">用法</h2>\n<p>我们以 viser-react 举例写<a href="https://antv.alipay.com/zh-cn/g2/3.x/demo/relation/chord.html">一个 chore 图为例</a>，viser-vue 和 viser-ng 的用法类似。</p>\n<h3 id="-">引入库</h3>\n<p>首先是引入 viser-react 的需要的子组件，以及必要的依赖，如 React, ReactDOM。</p>\n<pre><code class="lang-js"><span class="hljs-keyword">import</span> { Chart, Tooltip, Edge, View, Polygon, Coord } <span class="hljs-keyword">from</span> <span class="hljs-string">\'viser-react\'</span>;\n<span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> ReactDOM <span class="hljs-keyword">from</span> <span class="hljs-string">\'react-dom\'</span>;\n<span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">\'react\'</span>;\n</code></pre>\n<h3 id="-">数据处理</h3>\n<p>数据处理完全沿用 data-set.js 的处理。data-set 有丰富的数据处理方法，具体请参考 g2 官网的 <a href="https://antv.alipay.com/zh-cn/g2/3.x/tutorial/data-set.html">data-set 部分</a>.</p>\n<pre><code class="lang-js"><span class="hljs-keyword">const</span> DataSet = <span class="hljs-built_in">require</span>(<span class="hljs-string">\'@antv/data-set\'</span>);\n\n<span class="hljs-keyword">const</span> ds: <span class="hljs-built_in">any</span> = <span class="hljs-keyword">new</span> DataSet();\n<span class="hljs-keyword">const</span> dv = ds.createView().source(data, {\n  <span class="hljs-keyword">type</span>: <span class="hljs-string">\'graph\'</span>,\n  edges: <span class="hljs-function"><span class="hljs-params">d</span> =&gt;</span> d.links\n});\n\ndv.transform({\n  <span class="hljs-keyword">type</span>: <span class="hljs-string">\'diagram.arc\'</span>,\n  sourceWeight: <span class="hljs-function"><span class="hljs-params">e</span> =&gt;</span> e.sourceWeight,\n  targetWeight: <span class="hljs-function"><span class="hljs-params">e</span> =&gt;</span> e.targetWeight,\n  weight: <span class="hljs-literal">true</span>,\n  marginRatio: <span class="hljs-number">0.3</span>\n});\n</code></pre>\n<h3 id="-">图表实现</h3>\n<p>图表实现完全沿用 g2 对于图形语法的表达。</p>\n<p>我们观察原生 g2 的语法：</p>\n<pre><code class="lang-js"><span class="hljs-keyword">const</span> chart = <span class="hljs-keyword">new</span> G2.Chart({\n  container: <span class="hljs-string">\'mountNode\'</span>,\n  forceFit: <span class="hljs-keyword">true</span>,\n  <span class="hljs-built_in">height</span>: window.innerHeight\n});\nchart.legend(<span class="hljs-keyword">false</span>);\nchart.tooltip({\n  showTitle: <span class="hljs-keyword">false</span>\n});\n\nchart.<span class="hljs-built_in">scale</span>({\n  x: {\n    sync: <span class="hljs-keyword">true</span>\n  },\n  y: {\n    sync: <span class="hljs-keyword">true</span>\n  }\n});\n\n<span class="hljs-keyword">const</span> edgeView = chart.view();\nedgeView.source(dv.edges);\nedgeView.coord(<span class="hljs-string">\'polar\'</span>).reflect(<span class="hljs-string">\'y\'</span>);\nedgeView.axis(<span class="hljs-keyword">false</span>);\nedgeView.edge()\n  .position(<span class="hljs-string">\'x*y\'</span>)\n  .<span class="hljs-built_in">shape</span>(<span class="hljs-string">\'arc\'</span>)\n  .<span class="hljs-built_in">color</span>(<span class="hljs-string">\'source\'</span>)\n  .opacity(<span class="hljs-number">0.5</span>)\n  .tooltip(<span class="hljs-string">\'source*target*value\'</span>);\n\n<span class="hljs-keyword">const</span> nodeView = chart.view();\nnodeView.source(dv.nodes);\nnodeView.coord(<span class="hljs-string">\'polar\'</span>).reflect(<span class="hljs-string">\'y\'</span>);\nnodeView.axis(<span class="hljs-keyword">false</span>);\nnodeView.polygon()\n  .position(<span class="hljs-string">\'x*y\'</span>)\n  .<span class="hljs-built_in">color</span>(<span class="hljs-string">\'id\'</span>)\n  .label(<span class="hljs-string">\'name\'</span>, {\n    labelEmit: <span class="hljs-keyword">true</span>,\n    textStyle: {\n      <span class="hljs-built_in">fill</span>: <span class="hljs-string">\'#8c8c8c\'</span>\n    }\n  });\n\nchart.render();\n</code></pre>\n<p>我们看到有几个部分，Chart, Lengend, Tooltip, Scale 的配置，这些是公共配置，g2 提供 View 的能力，因此对应到 viser-react 中也需要两个 View，一个是边（edge），一个是节点（node）。然后每一个 api 都被抽象成了配置，而不是连续的调用。所以，我们看到对应到 viser-react 中的代码是：</p>\n<pre><code class="lang-js"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">App</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{\n  constructor(props) {\n    <span class="hljs-keyword">super</span>(props);\n  }\n\n  render() {\n    const label = [\n      <span class="hljs-symbol">\'nam</span>e\', {\n        labelEmit: <span class="hljs-literal">true</span>,\n        textStyle: {\n          fill: \'#<span class="hljs-number">8</span>c8c8c\'\n        },\n      }\n    ];\n\n    const scale = [{\n      dataKey: \'x\',\n      sync: <span class="hljs-literal">true</span>,\n    }, {\n      dataKey: \'y\',\n      sync: <span class="hljs-literal">true</span>,\n    }];\n\n    <span class="hljs-keyword">return</span> (\n      &lt;div&gt;\n        &lt;<span class="hljs-type">Chart</span> forceFit height={window.innerHeight} scale={scale}&gt;\n          &lt;<span class="hljs-type">View</span> data={dv.edges}&gt;\n            &lt;<span class="hljs-type">Coord</span> <span class="hljs-class"><span class="hljs-keyword">type</span></span>=<span class="hljs-string">"polar"</span> direction=<span class="hljs-string">"yReverse"</span> /&gt;\n            &lt;<span class="hljs-type">Edge</span> position=<span class="hljs-symbol">\'x</span>*y\' color=<span class="hljs-symbol">\'sourc</span>e\' shape=<span class="hljs-symbol">\'ar</span>c\' opacity={<span class="hljs-number">0.5</span>} tooltip={<span class="hljs-symbol">\'source</span>*target*value\'} /&gt;\n          &lt;/<span class="hljs-type">View</span>&gt;\n          &lt;<span class="hljs-type">View</span> data={dv.nodes}&gt;\n            &lt;<span class="hljs-type">Coord</span> <span class="hljs-class"><span class="hljs-keyword">type</span></span>=<span class="hljs-string">"polar"</span> direction=<span class="hljs-string">"yReverse"</span> /&gt;\n            &lt;<span class="hljs-type">Polygon</span> position=<span class="hljs-symbol">\'x</span>*y\' color=<span class="hljs-symbol">\'i</span>d\' label={label} /&gt;\n          &lt;/<span class="hljs-type">View</span>&gt;\n        &lt;/<span class="hljs-type">Chart</span>&gt;\n      &lt;/div&gt;\n    );\n  }\n}\n</code></pre>\n<h3 id="-">最后</h3>\n<p>对于图表实现上，都是 g2 图形语法的特性，并不是 viser 提供的，viser 提供的是框架级别的轻量级封装。希望你可以先对 g2 的用法熟悉，viser 不会单独列 g2 的 API，但我们会对一些 viser 的特点单独列出。</p>\n'},1253:function(module,exports){module.exports='<h2 id="usage">Usage</h2>\n<p>Let&#39;s give an example with viser-react <a href="https://antv.alipay.com/zh-cn/g2/3.x/demo/relation/chord.html">a chore example</a>，viser-vue or viser-ng has similar usage.</p>\n<h3 id="import-modules">Import modules</h3>\n<p>The first is to import the sub components needed by viser-react and the necessary dependencies,such as React, ReactDOM.</p>\n<pre><code class="lang-js"><span class="hljs-keyword">import</span> { Chart, Tooltip, Edge, View, Polygon, Coord } <span class="hljs-keyword">from</span> <span class="hljs-string">\'viser-react\'</span>;\n<span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> ReactDOM <span class="hljs-keyword">from</span> <span class="hljs-string">\'react-dom\'</span>;\n<span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">\'react\'</span>;\n</code></pre>\n<h3 id="dataset">DataSet</h3>\n<p>DataSet is fully follow the handle methods by data-set.js. data-set has rich data handle methods,Please refer to the details by g2 Official network <a href="https://antv.alipay.com/zh-cn/g2/3.x/tutorial/data-set.html">data-set part</a>.</p>\n<pre><code class="lang-js"><span class="hljs-keyword">const</span> DataSet = <span class="hljs-built_in">require</span>(<span class="hljs-string">\'@antv/data-set\'</span>);\n\n<span class="hljs-keyword">const</span> ds: <span class="hljs-built_in">any</span> = <span class="hljs-keyword">new</span> DataSet();\n<span class="hljs-keyword">const</span> dv = ds.createView().source(data, {\n  <span class="hljs-keyword">type</span>: <span class="hljs-string">\'graph\'</span>,\n  edges: <span class="hljs-function"><span class="hljs-params">d</span> =&gt;</span> d.links\n});\n\ndv.transform({\n  <span class="hljs-keyword">type</span>: <span class="hljs-string">\'diagram.arc\'</span>,\n  sourceWeight: <span class="hljs-function"><span class="hljs-params">e</span> =&gt;</span> e.sourceWeight,\n  targetWeight: <span class="hljs-function"><span class="hljs-params">e</span> =&gt;</span> e.targetWeight,\n  weight: <span class="hljs-literal">true</span>,\n  marginRatio: <span class="hljs-number">0.3</span>\n});\n</code></pre>\n<h3 id="chart-realization">Chart Realization</h3>\n<p>The chart realization is fully follow the chart grammar by g2.</p>\n<p>Let&#39;s observe the grammar of protogenesis g2：</p>\n<pre><code class="lang-js"><span class="hljs-keyword">const</span> chart = <span class="hljs-keyword">new</span> G2.Chart({\n  container: <span class="hljs-string">\'mountNode\'</span>,\n  forceFit: <span class="hljs-keyword">true</span>,\n  <span class="hljs-built_in">height</span>: window.innerHeight\n});\nchart.legend(<span class="hljs-keyword">false</span>);\nchart.tooltip({\n  showTitle: <span class="hljs-keyword">false</span>\n});\n\nchart.<span class="hljs-built_in">scale</span>({\n  x: {\n    sync: <span class="hljs-keyword">true</span>\n  },\n  y: {\n    sync: <span class="hljs-keyword">true</span>\n  }\n});\n\n<span class="hljs-keyword">const</span> edgeView = chart.view();\nedgeView.source(dv.edges);\nedgeView.coord(<span class="hljs-string">\'polar\'</span>).reflect(<span class="hljs-string">\'y\'</span>);\nedgeView.axis(<span class="hljs-keyword">false</span>);\nedgeView.edge()\n  .position(<span class="hljs-string">\'x*y\'</span>)\n  .<span class="hljs-built_in">shape</span>(<span class="hljs-string">\'arc\'</span>)\n  .<span class="hljs-built_in">color</span>(<span class="hljs-string">\'source\'</span>)\n  .opacity(<span class="hljs-number">0.5</span>)\n  .tooltip(<span class="hljs-string">\'source*target*value\'</span>);\n\n<span class="hljs-keyword">const</span> nodeView = chart.view();\nnodeView.source(dv.nodes);\nnodeView.coord(<span class="hljs-string">\'polar\'</span>).reflect(<span class="hljs-string">\'y\'</span>);\nnodeView.axis(<span class="hljs-keyword">false</span>);\nnodeView.polygon()\n  .position(<span class="hljs-string">\'x*y\'</span>)\n  .<span class="hljs-built_in">color</span>(<span class="hljs-string">\'id\'</span>)\n  .label(<span class="hljs-string">\'name\'</span>, {\n    labelEmit: <span class="hljs-keyword">true</span>,\n    textStyle: {\n      <span class="hljs-built_in">fill</span>: <span class="hljs-string">\'#8c8c8c\'</span>\n    }\n  });\n\nchart.render();\n</code></pre>\n<p>We see several parts,the configurations of Chart, Lengend, Tooltip, Scale,These are public configurations,g2 provide us the ability of View, therefore,Corresponding to viser-react, we also need two View, one is edge, and the other is node. Then every API is abstracted into a configuration instead of continuous calls. Therefore，we see the code corresponding to viser-react is：</p>\n<pre><code class="lang-js"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">App</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{\n  constructor(props) {\n    <span class="hljs-keyword">super</span>(props);\n  }\n\n  render() {\n    const label = [\n      <span class="hljs-symbol">\'nam</span>e\', {\n        labelEmit: <span class="hljs-literal">true</span>,\n        textStyle: {\n          fill: \'#<span class="hljs-number">8</span>c8c8c\'\n        },\n      }\n    ];\n\n    const scale = [{\n      dataKey: \'x\',\n      sync: <span class="hljs-literal">true</span>,\n    }, {\n      dataKey: \'y\',\n      sync: <span class="hljs-literal">true</span>,\n    }];\n\n    <span class="hljs-keyword">return</span> (\n      &lt;div&gt;\n        &lt;<span class="hljs-type">Chart</span> forceFit height={window.innerHeight} scale={scale}&gt;\n          &lt;<span class="hljs-type">View</span> data={dv.edges}&gt;\n            &lt;<span class="hljs-type">Coord</span> <span class="hljs-class"><span class="hljs-keyword">type</span></span>=<span class="hljs-string">"polar"</span> direction=<span class="hljs-string">"yReverse"</span> /&gt;\n            &lt;<span class="hljs-type">Edge</span> position=<span class="hljs-symbol">\'x</span>*y\' color=<span class="hljs-symbol">\'sourc</span>e\' shape=<span class="hljs-symbol">\'ar</span>c\' opacity={<span class="hljs-number">0.5</span>} tooltip={<span class="hljs-symbol">\'source</span>*target*value\'} /&gt;\n          &lt;/<span class="hljs-type">View</span>&gt;\n          &lt;<span class="hljs-type">View</span> data={dv.nodes}&gt;\n            &lt;<span class="hljs-type">Coord</span> <span class="hljs-class"><span class="hljs-keyword">type</span></span>=<span class="hljs-string">"polar"</span> direction=<span class="hljs-string">"yReverse"</span> /&gt;\n            &lt;<span class="hljs-type">Polygon</span> position=<span class="hljs-symbol">\'x</span>*y\' color=<span class="hljs-symbol">\'i</span>d\' label={label} /&gt;\n          &lt;/<span class="hljs-type">View</span>&gt;\n        &lt;/<span class="hljs-type">Chart</span>&gt;\n      &lt;/div&gt;\n    );\n  }\n}\n</code></pre>\n<h3 id="final">Final</h3>\n<p>For chart realization, they are all features of G2 graphical syntax, not provided by viser, which provides framework-level lightweight encapsulation. Hopefully you&#39;ll be familiar with the use of G2 first. Viser won&#39;t list the APIs for G2 separately, but we&#39;ll list some of the features of the VISER separately.</p>\n'},126:function(module,exports,__webpack_require__){"use strict";exports.__esModule=!0;var _utils=__webpack_require__(15);exports.default=function(instance){instance.registerHelper("if",function(conditional,options){return _utils.isFunction(conditional)&&(conditional=conditional.call(this)),!options.hash.includeZero&&!conditional||_utils.isEmpty(conditional)?options.inverse(this):options.fn(this)}),instance.registerHelper("unless",function(conditional,options){return instance.helpers.if.call(this,conditional,{fn:options.inverse,inverse:options.fn,hash:options.hash})})},module.exports=exports.default},127:function(module,exports,__webpack_require__){"use strict";exports.__esModule=!0,exports.default=function(instance){instance.registerHelper("log",function(){for(var args=[void 0],options=arguments[arguments.length-1],i=0;i<arguments.length-1;i++)args.push(arguments[i]);var level=1;null!=options.hash.level?level=options.hash.level:options.data&&null!=options.data.level&&(level=options.data.level),args[0]=level,instance.log.apply(instance,args)})},module.exports=exports.default},128:function(module,exports,__webpack_require__){"use strict";exports.__esModule=!0,exports.default=function(instance){instance.registerHelper("lookup",function(obj,field){return obj&&obj[field]})},module.exports=exports.default},129:function(module,exports,__webpack_require__){"use strict";exports.__esModule=!0;var _utils=__webpack_require__(15);exports.default=function(instance){instance.registerHelper("with",function(context,options){_utils.isFunction(context)&&(context=context.call(this));var fn=options.fn;if(_utils.isEmpty(context))return options.inverse(this);var data=options.data;return options.data&&options.ids&&(data=_utils.createFrame(options.data),data.contextPath=_utils.appendContextPath(options.data.contextPath,options.ids[0])),fn(context,{data:data,blockParams:_utils.blockParams([context],[data&&data.contextPath])})})},module.exports=exports.default},130:function(module,exports,__webpack_require__){"use strict";function registerDefaultDecorators(instance){_decoratorsInline2.default(instance)}exports.__esModule=!0,exports.registerDefaultDecorators=registerDefaultDecorators;var _decoratorsInline=__webpack_require__(131),_decoratorsInline2=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(_decoratorsInline)},131:function(module,exports,__webpack_require__){"use strict";exports.__esModule=!0;var _utils=__webpack_require__(15);exports.default=function(instance){instance.registerDecorator("inline",function(fn,props,container,options){var ret=fn;return props.partials||(props.partials={},ret=function(context,options){var original=container.partials;container.partials=_utils.extend({},original,props.partials);var ret=fn(context,options);return container.partials=original,ret}),props.partials[options.args[0]]=options.fn,ret})},module.exports=exports.default},132:function(module,exports,__webpack_require__){"use strict";exports.__esModule=!0;var _utils=__webpack_require__(15),logger={methodMap:["debug","info","warn","error"],level:"info",lookupLevel:function(level){if("string"==typeof level){var levelMap=_utils.indexOf(logger.methodMap,level.toLowerCase());level=levelMap>=0?levelMap:parseInt(level,10)}return level},log:function(level){if(level=logger.lookupLevel(level),"undefined"!=typeof console&&logger.lookupLevel(logger.level)<=level){var method=logger.methodMap[level];console[method]||(method="log");for(var _len=arguments.length,message=Array(_len>1?_len-1:0),_key=1;_key<_len;_key++)message[_key-1]=arguments[_key]}}};exports.default=logger,module.exports=exports.default},133:function(module,exports,__webpack_require__){"use strict";function SafeString(string){this.string=string}exports.__esModule=!0,SafeString.prototype.toString=SafeString.prototype.toHTML=function(){return""+this.string},exports.default=SafeString,module.exports=exports.default},134:function(module,exports,__webpack_require__){"use strict";function checkRevision(compilerInfo){var compilerRevision=compilerInfo&&compilerInfo[0]||1,currentRevision=_base.COMPILER_REVISION;if(compilerRevision!==currentRevision){if(compilerRevision<currentRevision){var runtimeVersions=_base.REVISION_CHANGES[currentRevision],compilerVersions=_base.REVISION_CHANGES[compilerRevision];throw new _exception2.default("Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version ("+runtimeVersions+") or downgrade your runtime to an older version ("+compilerVersions+").")}throw new _exception2.default("Template was precompiled with a newer version of Handlebars than the current runtime. Please update your runtime to a newer version ("+compilerInfo[1]+").")}}function template(templateSpec,env){function invokePartialWrapper(partial,context,options){options.hash&&(context=Utils.extend({},context,options.hash),options.ids&&(options.ids[0]=!0)),partial=env.VM.resolvePartial.call(this,partial,context,options);var result=env.VM.invokePartial.call(this,partial,context,options);if(null==result&&env.compile&&(options.partials[options.name]=env.compile(partial,templateSpec.compilerOptions,env),result=options.partials[options.name](context,options)),null!=result){if(options.indent){for(var lines=result.split("\n"),i=0,l=lines.length;i<l&&(lines[i]||i+1!==l);i++)lines[i]=options.indent+lines[i];result=lines.join("\n")}return result}throw new _exception2.default("The partial "+options.name+" could not be compiled when running in runtime-only mode")}function ret(context){function main(context){return""+templateSpec.main(container,context,container.helpers,container.partials,data,blockParams,depths)}var options=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],data=options.data;ret._setup(options),!options.partial&&templateSpec.useData&&(data=initData(context,data));var depths=void 0,blockParams=templateSpec.useBlockParams?[]:void 0;return templateSpec.useDepths&&(depths=options.depths?context!=options.depths[0]?[context].concat(options.depths):options.depths:[context]),(main=executeDecorators(templateSpec.main,main,container,options.depths||[],data,blockParams))(context,options)}if(!env)throw new _exception2.default("No environment passed to template");if(!templateSpec||!templateSpec.main)throw new _exception2.default("Unknown template object: "+typeof templateSpec);templateSpec.main.decorator=templateSpec.main_d,env.VM.checkRevision(templateSpec.compiler);var container={strict:function(obj,name){if(!(name in obj))throw new _exception2.default('"'+name+'" not defined in '+obj);return obj[name]},lookup:function(depths,name){for(var len=depths.length,i=0;i<len;i++)if(depths[i]&&null!=depths[i][name])return depths[i][name]},lambda:function(current,context){return"function"==typeof current?current.call(context):current},escapeExpression:Utils.escapeExpression,invokePartial:invokePartialWrapper,fn:function(i){var ret=templateSpec[i];return ret.decorator=templateSpec[i+"_d"],ret},programs:[],program:function(i,data,declaredBlockParams,blockParams,depths){var programWrapper=this.programs[i],fn=this.fn(i);return data||depths||blockParams||declaredBlockParams?programWrapper=wrapProgram(this,i,fn,data,declaredBlockParams,blockParams,depths):programWrapper||(programWrapper=this.programs[i]=wrapProgram(this,i,fn)),programWrapper},data:function(value,depth){for(;value&&depth--;)value=value._parent;return value},merge:function(param,common){var obj=param||common;return param&&common&&param!==common&&(obj=Utils.extend({},common,param)),obj},nullContext:Object.seal({}),noop:env.VM.noop,compilerInfo:templateSpec.compiler};return ret.isTop=!0,ret._setup=function(options){options.partial?(container.helpers=options.helpers,container.partials=options.partials,container.decorators=options.decorators):(container.helpers=container.merge(options.helpers,env.helpers),templateSpec.usePartial&&(container.partials=container.merge(options.partials,env.partials)),(templateSpec.usePartial||templateSpec.useDecorators)&&(container.decorators=container.merge(options.decorators,env.decorators)))},ret._child=function(i,data,blockParams,depths){if(templateSpec.useBlockParams&&!blockParams)throw new _exception2.default("must pass block params");if(templateSpec.useDepths&&!depths)throw new _exception2.default("must pass parent depths");return wrapProgram(container,i,templateSpec[i],data,0,blockParams,depths)},ret}function wrapProgram(container,i,fn,data,declaredBlockParams,blockParams,depths){function prog(context){var options=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],currentDepths=depths;return!depths||context==depths[0]||context===container.nullContext&&null===depths[0]||(currentDepths=[context].concat(depths)),fn(container,context,container.helpers,container.partials,options.data||data,blockParams&&[options.blockParams].concat(blockParams),currentDepths)}return prog=executeDecorators(fn,prog,container,depths,data,blockParams),prog.program=i,prog.depth=depths?depths.length:0,prog.blockParams=declaredBlockParams||0,prog}function resolvePartial(partial,context,options){return partial?partial.call||options.name||(options.name=partial,partial=options.partials[partial]):partial="@partial-block"===options.name?options.data["partial-block"]:options.partials[options.name],partial}function invokePartial(partial,context,options){var currentPartialBlock=options.data&&options.data["partial-block"];options.partial=!0,options.ids&&(options.data.contextPath=options.ids[0]||options.data.contextPath);var partialBlock=void 0;if(options.fn&&options.fn!==noop&&function(){options.data=_base.createFrame(options.data);var fn=options.fn;partialBlock=options.data["partial-block"]=function(context){var options=arguments.length<=1||void 0===arguments[1]?{}:arguments[1];return options.data=_base.createFrame(options.data),options.data["partial-block"]=currentPartialBlock,fn(context,options)},fn.partials&&(options.partials=Utils.extend({},options.partials,fn.partials))}(),void 0===partial&&partialBlock&&(partial=partialBlock),void 0===partial)throw new _exception2.default("The partial "+options.name+" could not be found");if(partial instanceof Function)return partial(context,options)}function noop(){return""}function initData(context,data){return data&&"root"in data||(data=data?_base.createFrame(data):{},data.root=context),data}function executeDecorators(fn,prog,container,depths,data,blockParams){if(fn.decorator){var props={};prog=fn.decorator(prog,props,container,depths&&depths[0],data,blockParams,depths),Utils.extend(prog,props)}return prog}exports.__esModule=!0,exports.checkRevision=checkRevision,exports.template=template,exports.wrapProgram=wrapProgram,exports.resolvePartial=resolvePartial,exports.invokePartial=invokePartial,exports.noop=noop;var _utils=__webpack_require__(15),Utils=function(obj){if(obj&&obj.__esModule)return obj;var newObj={};if(null!=obj)for(var key in obj)Object.prototype.hasOwnProperty.call(obj,key)&&(newObj[key]=obj[key]);return newObj.default=obj,newObj}(_utils),_exception=__webpack_require__(24),_exception2=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(_exception),_base=__webpack_require__(64)},135:function(module,exports,__webpack_require__){"use strict";(function(global){exports.__esModule=!0,exports.default=function(Handlebars){var root=void 0!==global?global:window,$Handlebars=root.Handlebars;Handlebars.noConflict=function(){return root.Handlebars===Handlebars&&(root.Handlebars=$Handlebars),Handlebars}},module.exports=exports.default}).call(exports,__webpack_require__(17))},15:function(module,exports,__webpack_require__){"use strict";function escapeChar(chr){return escape[chr]}function extend(obj){for(var i=1;i<arguments.length;i++)for(var key in arguments[i])Object.prototype.hasOwnProperty.call(arguments[i],key)&&(obj[key]=arguments[i][key]);return obj}function indexOf(array,value){for(var i=0,len=array.length;i<len;i++)if(array[i]===value)return i;return-1}function escapeExpression(string){if("string"!=typeof string){if(string&&string.toHTML)return string.toHTML();if(null==string)return"";if(!string)return string+"";string=""+string}return possible.test(string)?string.replace(badChars,escapeChar):string}function isEmpty(value){return!value&&0!==value||!(!isArray(value)||0!==value.length)}function createFrame(object){var frame=extend({},object);return frame._parent=object,frame}function blockParams(params,ids){return params.path=ids,params}function appendContextPath(contextPath,id){return(contextPath?contextPath+".":"")+id}exports.__esModule=!0,exports.extend=extend,exports.indexOf=indexOf,exports.escapeExpression=escapeExpression,exports.isEmpty=isEmpty,exports.createFrame=createFrame,exports.blockParams=blockParams,exports.appendContextPath=appendContextPath;var escape={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;","=":"&#x3D;"},badChars=/[&<>"'`=]/g,possible=/[&<>"'`=]/,toString=Object.prototype.toString;exports.toString=toString;var isFunction=function(value){return"function"==typeof value};isFunction(/x/)&&(exports.isFunction=isFunction=function(value){return"function"==typeof value&&"[object Function]"===toString.call(value)}),exports.isFunction=isFunction;var isArray=Array.isArray||function(value){return!(!value||"object"!=typeof value)&&"[object Array]"===toString.call(value)};exports.isArray=isArray},16:function(module,exports,__webpack_require__){"use strict";function checkDCE(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE)}catch(err){}}checkDCE(),module.exports=__webpack_require__(39)},17:function(module,exports){var g;g=function(){return this}();try{g=g||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(g=window)}module.exports=g},18:function(module,exports,__webpack_require__){"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):new P(function(resolve){resolve(result.value)}).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})},__generator=this&&this.__generator||function(thisArg,body){function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");for(;_;)try{if(f=1,y&&(t=2&op[0]?y.return:op[0]?y.throw||((t=y.return)&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;switch(y=0,t&&(op=[2&op[0],t.value]),op[0]){case 0:case 1:t=op;break;case 4:return _.label++,{value:op[1],done:!1};case 5:_.label++,y=op[1],op=[0];continue;case 7:op=_.ops.pop(),_.trys.pop();continue;default:if(t=_.trys,!(t=t.length>0&&t[t.length-1])&&(6===op[0]||2===op[0])){_=0;continue}if(3===op[0]&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(6===op[0]&&_.label<t[1]){_.label=t[1],t=op;break}if(t&&_.label<t[2]){_.label=t[2],_.ops.push(op);break}t[2]&&_.ops.pop(),_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e],y=0}finally{f=t=0}if(5&op[0])throw op[1];return{value:op[0]?op[1]:void 0,done:!0}}var f,y,t,g,_={label:0,sent:function(){if(1&t[0])throw t[1];return t[1]},trys:[],ops:[]};return g={next:verb(0),throw:verb(1),return:verb(2)},"function"==typeof Symbol&&(g[Symbol.iterator]=function(){return this}),g},_this=this;Object.defineProperty(exports,"__esModule",{value:!0});var oui_dom_utils_1=__webpack_require__(35),oui_dom_events_1=__webpack_require__(36),iframe_templage_1=__webpack_require__(37);exports.ALL_PAGE_LANGUAGES=["en","cn"],exports.DEFAULT_PAGE_LANGUAGE="en",exports.getPageLanguage=function(){var pageLanguageInStore=window.localStorage.getItem("page_language");return pageLanguageInStore&&-1!==exports.ALL_PAGE_LANGUAGES.indexOf(pageLanguageInStore)?pageLanguageInStore:null},exports.setPageLanguage=function(language){window.localStorage.setItem("page_language",language)},exports.initPageLanguage=function(){if(!exports.getPageLanguage()){var navigatorLanguage=window.navigator.language.toLowerCase();navigatorLanguage&&-1!==navigatorLanguage.indexOf("cn")?exports.setPageLanguage("cn"):exports.setPageLanguage(exports.DEFAULT_PAGE_LANGUAGE)}},exports.changePageLanguage=function(){var pageLanguageInStore=exports.getPageLanguage();pageLanguageInStore&&"en"===pageLanguageInStore?exports.setPageLanguage("cn"):pageLanguageInStore&&"cn"===pageLanguageInStore?exports.setPageLanguage("en"):exports.setPageLanguage(exports.DEFAULT_PAGE_LANGUAGE)},exports.getNameByLanguage=function(o){switch(exports.getPageLanguage()){case"en":return o&&o.enName?o.enName:"";case"cn":return o&&o.cnName?o.cnName:"";default:return""}},exports.generateHashtag=function(typeKey,folder,item){return typeKey&&folder&&item?"#/"+typeKey+"/"+folder+"/"+item:typeKey&&folder?"#/"+typeKey+"/"+folder:typeKey?"#/"+typeKey+"/"+folder:"#"},exports.getFolderAndItem=function(isDemo){void 0===isDemo&&(isDemo=!0);var hash=window.location.hash,result=hash.split("/");return 0===result.length?{tempKey:"",folder:"",item:""}:isDemo?{typeKey:result[1]||"",folder:result[2]||"",item:result[3]||""}:{folder:result[2]||"",item:result[3]||""}},exports.addClass=oui_dom_utils_1.default.addClass,exports.removeClass=oui_dom_utils_1.default.removeClass,exports.hasClass=oui_dom_utils_1.default.hasClass,exports.on=oui_dom_events_1.default.on,exports.off=oui_dom_events_1.default.off,exports.delegate=oui_dom_events_1.default.delegate,exports.undelegate=oui_dom_events_1.default.undelegate,exports.get=function(url){return new Promise(function(resolve){return window.fetch(url).then(function(res){return res.status>=400?{flag:!1}:{flag:!0,data:res}}).then(function(json){return resolve(json)})})},exports.getInitNav=function(){var selectedNav=window.localStorage.getItem("selected_nav");return selectedNav||null},exports.setInitNav=function(nav){window.localStorage.setItem("selected_nav",nav)};var codeDeal=function(oriCode,framework){var code=oriCode,reg=/import\s.*?\{[\s\S]*?\}[\s\S]*?;/g;if(reg.test(code)){code.match(reg).forEach(function(item){var tempVar=item.replace(/(.*?\{|\}.*)/g,""),tempPkg=iframe_templage_1.pkgMap[item.replace(/^([\s\S]*?['"])/g,"").replace(/['"][\s\S]*/,"").trim()],temp="const {"+tempVar+"}="+tempPkg+";";code=code.replace(item,temp)})}switch(code=code.replace(/import.*?;/g,"").replace(/as\s*?any\s*?;/g,"").replace(/\(window\s+?as\s+?any\)/g,"window").replace(/as\s*?any\s*?/g,"").replace(/const.*?require.*?;/g,""),framework){case"react":code=code.replace(/export\s*?default/g,""),code+=' ReactDOM.render(<App />, document.getElementById("mount"));';break;case"vue":var vueRes={},template_1=code.match(/<template[\s\S]*?>[\s\S]*?<\/template>/gi)[0].replace(/<\/?template[\s\S]*?>/gi,""),script=code.match(/<scrip[\s\S]*?>[\s\S]*?<\/script>/gi)[0].replace(/<\/?script[\s\S]*?>/gi,""),variable=script.replace(/export\s*?default[\s\S]*?$/,""),exports_1=script.match(/export\s*?default[\s\S]*?$/)[0].replace(/export\s*?default\s*?\{/gi,"").replace(/\}\s*?;?\s*?$/gi,"");return vueRes.template=template_1,vueRes.variable=variable,vueRes.exports=exports_1,vueRes;case"angular":var moduleName=code.match(/export\s*?default[\s\S]*$/gi)[0].replace(/export\s*?default\s*?class\s*?/gi,"").replace(/\{\s*?\}/,"").trim();code=code.replace(/export\s*?default[\s\S]*$/gi,"class "+moduleName+"={}"),code=code.replace(/\s*class/g,"class")}return code};exports.combineFrameCode=function(framework,oriCode){var code=codeDeal(oriCode,framework);if(iframe_templage_1.template[framework])switch(framework){case"vue":var temp_1=iframe_templage_1.template.vue,pkg=exports.getInitNav();return pkg&&"viser"!==pkg?"viser-graph"===pkg&&(temp_1=temp_1.replace(/\{scriptpkg\}/,"viser-graph-vue").replace(/\{userModule\}/,"ViserGraphVue")):temp_1=temp_1.replace(/\{scriptpkg\}/,"viser-vue").replace(/\{userModule\}/,"ViserVue"),Object.keys(code).map(function(item){var split="{"+item+"}",tempArr=temp_1.split(split);temp_1=tempArr[0]+code[item]+tempArr[1]}),temp_1;default:if(/<script>/.test(oriCode)||/<template>/.test(oriCode))return"";var temp=iframe_templage_1.template[framework].split("{code}");return temp[0]+code+temp[1]}return""},exports.downloadFile=function(blob,filename,mimetype){if(!blob)throw{name:"Argument Null Exception",nameof:"blob",description:"The supplied variable is null"};if(!filename)throw{name:"Argument Null Exception",nameof:"filename",description:"The supplied variable is null"};if(!mimetype)throw{name:"Argument Null Exception",nameof:"mime",description:"The supplied variable is null"};if(!Array.isArray(blob))throw{name:"Type Error",nameof:"blob",description:"Supplied data is not an array"};var objectBlob;try{objectBlob=new window.Blob(["\ufeff",blob],{type:mimetype})}catch(e){var bb=new window.MSBlobBuilder;bb.append(["\ufeff"]),bb.append(blob),objectBlob=bb.getBlob()}if(navigator.msSaveOrOpenBlob)return void window.navigator.msSaveOrOpenBlob(objectBlob,filename);var objUrl_1=window.URL.createObjectURL(objectBlob),a_1=document.createElement("a");a_1.download=filename,a_1.href=objUrl_1,a_1.style.display="none",document.body.appendChild(a_1),a_1.click(),setTimeout(function(){a_1.remove(),a_1=void 0,window.URL.revokeObjectURL(objUrl_1)},100)},exports.colorRGB2Hex=function(color){if(!/rgb/gi.test(color)||!color)return color;var rgb=color.split(",");return"#"+((1<<24)+(parseInt(rgb[0].split("(")[1])<<16)+(parseInt(rgb[1])<<8)+parseInt(rgb[2].split(")")[0])).toString(16).slice(1)},exports.repeatArray=function(arr,num){if(!arr||"Array"!==arr.constructor.name)return[];var len=arr.length-1,count=0,result=new Array(num).join(",").split(",");return result.forEach(function(item,index){count>len&&(count=0),result[index]=arr[count],count++}),result},exports.copyString=function(str){var textarea=window.document.getElementById("clipboard-box-container");if(!textarea){var tempIpt=window.document.createElement("textarea");tempIpt.style.fontSize="12pt",tempIpt.style.border="0",tempIpt.style.padding="0",tempIpt.style.margin="0",tempIpt.style.position="absolute",tempIpt.style.zIndex=-999,tempIpt.style.overFlow="auto",tempIpt.style.width="10px",tempIpt.style.height="10px",tempIpt.style.left="-999px",tempIpt.style.top="-999px",tempIpt.setAttribute("readonly",""),tempIpt.id="clipboard-box-container",window.document.getElementsByTagName("body")[0].appendChild(tempIpt),textarea=window.document.getElementById("clipboard-box-container")}textarea.value=str,textarea.select();var flag;try{flag=!!document.execCommand("copy")}catch(err){window.console.log(err),flag=!1}return flag};var fileClick=function(el){return new Promise(function(resolve){el.click();var temp=function(e){return el.removeEventListener("change",temp),resolve(e)};return el.addEventListener("change",temp)})},fileReader=function(file){return new Promise(function(resolve){var fr=new FileReader;fr.readAsText(file,"utf-8"),fr.onload=function(data){return resolve(data.target.result)},fr.onabort=function(){return resolve(null)},fr.onerror=function(){return resolve(null)}})},validJson=function(json){if("Object"!==json.constructor.name)return!1;var contain=["background","defaultColor","plotCfg","fontFamily","defaultLegendPosition","colors","colors_16","colors_24","colors_pie","colors_pie_16","shapes","sizes","opacities","axis","label","treemapLabels","innerLabels","thetaLabels","legend","tooltip","tooltipMarker","tooltipCrosshairsRect","tooltipCrosshairsLine","shape","guide","pixelRatio"],target=Object.keys(json),flag=!0;for(var i in target)if(contain.indexOf(target[i])<0){flag=!1;break}return flag};exports.dataFromFile=function(){return __awaiter(_this,void 0,void 0,function(){var file,temp,result,files,fileName,mime,data;return __generator(this,function(_a){switch(_a.label){case 0:return file=window.document.getElementById("file-upload-temp-container"),file||(temp=window.document.createElement("input"),temp.id="file-upload-temp-container",temp.type="file",temp.style.display="none",window.document.getElementsByTagName("body")[0].appendChild(temp),file=window.document.getElementById("file-upload-temp-container")),[4,fileClick(file)];case 1:return result=_a.sent(),files=result.target.files,fileName=files[0].name.split(".")[0],mime=files[0].name.split(".")[1],"json"!==mime.toLowerCase()?(alert("The file's type only support *.json"),[2,null]):[4,fileReader(files[0])];case 2:return data=_a.sent(),data?validJson(JSON.parse(data))?[2,{seriesNum:3,theme:JSON.parse(data),title:fileName}]:(alert("The formate of file's data is error!!"),[2,null]):(alert("Read "+files[0].name+" error!"),[2,null])}})})},exports.deepObjectMerge=function(FirstOBJ,SecondOBJ){for(var key in SecondOBJ)void 0!==SecondOBJ[key]&&(FirstOBJ[key]=FirstOBJ[key]&&"[object Object]"===FirstOBJ[key].toString()?exports.deepObjectMerge(FirstOBJ[key],SecondOBJ[key]):FirstOBJ[key]=SecondOBJ[key]);return FirstOBJ}},20:function(module,exports,__webpack_require__){"use strict";function toObject(val){if(null===val||void 0===val)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(val)}var getOwnPropertySymbols=Object.getOwnPropertySymbols,hasOwnProperty=Object.prototype.hasOwnProperty,propIsEnumerable=Object.prototype.propertyIsEnumerable;module.exports=function(){try{if(!Object.assign)return!1;var test1=new String("abc");if(test1[5]="de","5"===Object.getOwnPropertyNames(test1)[0])return!1;for(var test2={},i=0;i<10;i++)test2["_"+String.fromCharCode(i)]=i;if("0123456789"!==Object.getOwnPropertyNames(test2).map(function(n){return test2[n]}).join(""))return!1;var test3={};return"abcdefghijklmnopqrst".split("").forEach(function(letter){test3[letter]=letter}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},test3)).join("")}catch(err){return!1}}()?Object.assign:function(target,source){for(var from,symbols,to=toObject(target),s=1;s<arguments.length;s++){from=Object(arguments[s]);for(var key in from)hasOwnProperty.call(from,key)&&(to[key]=from[key]);if(getOwnPropertySymbols){symbols=getOwnPropertySymbols(from);for(var i=0;i<symbols.length;i++)propIsEnumerable.call(from,symbols[i])&&(to[symbols[i]]=from[symbols[i]])}}return to}},24:function(module,exports,__webpack_require__){"use strict";function Exception(message,node){var loc=node&&node.loc,line=void 0,column=void 0;loc&&(line=loc.start.line,column=loc.start.column,message+=" - "+line+":"+column);for(var tmp=Error.prototype.constructor.call(this,message),idx=0;idx<errorProps.length;idx++)this[errorProps[idx]]=tmp[errorProps[idx]];Error.captureStackTrace&&Error.captureStackTrace(this,Exception);try{loc&&(this.lineNumber=line,Object.defineProperty?Object.defineProperty(this,"column",{value:column,enumerable:!0}):this.column=column)}catch(nop){}}exports.__esModule=!0;var errorProps=["description","fileName","lineNumber","message","name","number","stack"];Exception.prototype=new Error,exports.default=Exception,module.exports=exports.default},29:function(module,exports){var core=module.exports={version:"1.2.6"};"number"==typeof __e&&(__e=core)},33:function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});var React=__webpack_require__(0),utils_1=__webpack_require__(18);__webpack_require__(38);var Nav=function(_super){function Nav(props){var _this=_super.call(this,props)||this;return _this.handleVisible=function(){_this.setState({visible:!_this.state.visible})},_this.handleClick=function(e,value,completed,key){e.preventDefault(),completed&&(utils_1.setInitNav(value),_this.setState({selected:utils_1.getInitNav()||"viser",visible:!_this.state.visible}),void 0!==_this.props.setTypeKey&&_this.props.setTypeKey(key))},_this.state={visible:!1,selected:utils_1.getInitNav()||"viser",dropitem:[{name:"viser",image:"https://gw.alipayobjects.com/os/s/prod/antv/assets/image/icon/g2-c94ef.svg",completed:!0,keys:"viser"},{name:"viser-graph",image:"https://gw.alipayobjects.com/os/s/prod/antv/assets/image/icon/g6-b4554.svg",completed:!0,keys:"viserGraph"},{name:"viser-cell",image:"https://gw.alipayobjects.com/os/s/prod/antv/assets/image/icon/f2-d360c.svg",completed:!1,keys:null}]},_this}return __extends(Nav,_super),Nav.prototype.componentDidMount=function(){var self=this;if(utils_1.getInitNav()||utils_1.setInitNav(self.state.selected),window.document.addEventListener("click",function(e){var target=e.target;window.document.getElementById("viser-nav").contains(target)||self.setState({visible:!1})}),void 0!==this.props.setTypeKey){var state_1=self.state;state_1.dropitem.forEach(function(item){item.name===state_1.selected&&self.props.setTypeKey(item.keys)})}},Nav.prototype.render=function(){var _this=this;return React.createElement("div",{className:"viser-dropdown"},React.createElement("a",{className:"visble-tit",onClick:this.handleVisible},this.state.selected),React.createElement("div",{className:"viser-dropmenu",style:{display:this.state.visible?"block":"none"}},this.state.dropitem.map(function(item,index){return React.createElement("a",{href:"javascript:;",key:index,onClick:function(e){return _this.handleClick(e,item.name,item.completed,item.keys)}},item.image&&React.createElement("i",{className:"pic",style:{backgroundImage:"url("+item.image+")"}}),item.name,!item.completed&&React.createElement("span",null,"cn"===_this.props.pageLan?"建设中":"constructing"))})))},Nav}(React.Component);exports.default=Nav},34:function(module,exports,__webpack_require__){"use strict";function A(a,b,d,c,e,g,h,f){if(!a){if(a=void 0,void 0===b)a=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var k=[d,c,e,g,h,f],l=0;a=Error(b.replace(/%s/g,function(){return k[l++]})),a.name="Invariant Violation"}throw a.framesToPop=1,a}}function B(a){for(var b=arguments.length-1,d="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=0;c<b;c++)d+="&args[]="+encodeURIComponent(arguments[c+1]);A(!1,"Minified React error #"+a+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",d)}function E(a,b,d){this.props=a,this.context=b,this.refs=D,this.updater=d||C}function F(){}function G(a,b,d){this.props=a,this.context=b,this.refs=D,this.updater=d||C}function L(a,b,d){var c=void 0,e={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=""+b.key),b)J.call(b,c)&&!K.hasOwnProperty(c)&&(e[c]=b[c]);var f=arguments.length-2;if(1===f)e.children=d;else if(1<f){for(var k=Array(f),l=0;l<f;l++)k[l]=arguments[l+2];e.children=k}if(a&&a.defaultProps)for(c in f=a.defaultProps)void 0===e[c]&&(e[c]=f[c]);return{$$typeof:p,type:a,key:g,ref:h,props:e,_owner:I.current}}function M(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function N(a){return"object"==typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={"=":"=0",":":"=2"};return"$"+(""+a).replace(/[=:]/g,function(a){return b[a]})}function Q(a,b,d,c){if(P.length){var e=P.pop();return e.result=a,e.keyPrefix=b,e.func=d,e.context=c,e.count=0,e}return{result:a,keyPrefix:b,func:d,context:c,count:0}}function R(a){a.result=null,a.keyPrefix=null,a.func=null,a.context=null,a.count=0,10>P.length&&P.push(a)}function S(a,b,d,c){var e=typeof a;"undefined"!==e&&"boolean"!==e||(a=null);var g=!1;if(null===a)g=!0;else switch(e){case"string":case"number":g=!0;break;case"object":switch(a.$$typeof){case p:case q:g=!0}}if(g)return d(c,a,""===b?"."+T(a,0):b),1;if(g=0,b=""===b?".":b+":",Array.isArray(a))for(var h=0;h<a.length;h++){e=a[h];var f=b+T(e,h);g+=S(e,f,d,c)}else if(null===a||"object"!=typeof a?f=null:(f=z&&a[z]||a["@@iterator"],f="function"==typeof f?f:null),"function"==typeof f)for(a=f.call(a),h=0;!(e=a.next()).done;)e=e.value,f=b+T(e,h++),g+=S(e,f,d,c);else"object"===e&&(d=""+a,B("31","[object Object]"===d?"object with keys {"+Object.keys(a).join(", ")+"}":d,""));return g}function U(a,b,d){return null==a?0:S(a,"",b,d)}function T(a,b){return"object"==typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function V(a,b){a.func.call(a.context,b,a.count++)}function aa(a,b,d){var c=a.result,e=a.keyPrefix;a=a.func.call(a.context,b,a.count++),Array.isArray(a)?W(a,c,d,function(a){return a}):null!=a&&(N(a)&&(a=M(a,e+(!a.key||b&&b.key===a.key?"":(""+a.key).replace(O,"$&/")+"/")+d)),c.push(a))}function W(a,b,d,c,e){var g="";null!=d&&(g=(""+d).replace(O,"$&/")+"/"),b=Q(b,g,c,e),U(a,aa,b),R(b)}function ba(a,b){var d=I.currentDispatcher;return null===d&&B("277"),d.readContext(a,b)}var m=__webpack_require__(20),n="function"==typeof Symbol&&Symbol.for,p=n?Symbol.for("react.element"):60103,q=n?Symbol.for("react.portal"):60106,r=n?Symbol.for("react.fragment"):60107,t=n?Symbol.for("react.strict_mode"):60108,u=n?Symbol.for("react.profiler"):60114,v=n?Symbol.for("react.provider"):60109,w=n?Symbol.for("react.context"):60110,x=n?Symbol.for("react.async_mode"):60111,y=n?Symbol.for("react.forward_ref"):60112;n&&Symbol.for("react.placeholder");var z="function"==typeof Symbol&&Symbol.iterator,C={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},D={};E.prototype.isReactComponent={},E.prototype.setState=function(a,b){"object"!=typeof a&&"function"!=typeof a&&null!=a&&B("85"),this.updater.enqueueSetState(this,a,b,"setState")},E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")},F.prototype=E.prototype;var H=G.prototype=new F;H.constructor=G,m(H,E.prototype),H.isPureReactComponent=!0;var I={current:null,currentDispatcher:null},J=Object.prototype.hasOwnProperty,K={key:!0,ref:!0,__self:!0,__source:!0},O=/\/+/g,P=[],X={Children:{map:function(a,b,d){if(null==a)return a;var c=[];return W(a,c,null,b,d),c},forEach:function(a,b,d){if(null==a)return a;b=Q(null,null,b,d),U(a,V,b),R(b)},count:function(a){return U(a,function(){return null},null)},toArray:function(a){var b=[];return W(a,b,null,function(a){return a}),b},only:function(a){return N(a)||B("143"),a}},createRef:function(){return{current:null}},Component:E,PureComponent:G,createContext:function(a,b){return void 0===b&&(b=null),a={$$typeof:w,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,Provider:null,Consumer:null,unstable_read:null},a.Provider={$$typeof:v,_context:a},a.Consumer=a,a.unstable_read=ba.bind(null,a),a},forwardRef:function(a){return{$$typeof:y,render:a}},Fragment:r,StrictMode:t,unstable_AsyncMode:x,unstable_Profiler:u,createElement:L,cloneElement:function(a,b,d){(null===a||void 0===a)&&B("267",a);var c=void 0,e=m({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=b){void 0!==b.ref&&(h=b.ref,f=I.current),void 0!==b.key&&(g=""+b.key);var k=void 0;a.type&&a.type.defaultProps&&(k=a.type.defaultProps);for(c in b)J.call(b,c)&&!K.hasOwnProperty(c)&&(e[c]=void 0===b[c]&&void 0!==k?k[c]:b[c])}if(1===(c=arguments.length-2))e.children=d;else if(1<c){k=Array(c);for(var l=0;l<c;l++)k[l]=arguments[l+2];e.children=k}return{$$typeof:p,type:a.type,key:g,ref:h,props:e,_owner:f}},createFactory:function(a){var b=L.bind(null,a);return b.type=a,b},isValidElement:N,version:"16.5.2",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:I,assign:m}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default||Z},35:function(module,exports,__webpack_require__){"use strict";function getAmId(obj){return obj._amId||(obj._amId=_amId++)}function setAmDisplay(elem,display){var id=getAmId(elem);_amDisplay["_am_"+id]=display}function getAmDisplay(elem){var id=getAmId(elem);return _amDisplay["_am_"+id]}Object.defineProperty(exports,"__esModule",{value:!0});var reUnit=/width|height|top|left|right|bottom|margin|padding/i,_amId=1,_amDisplay={},requestAnimationFrame=void 0;requestAnimationFrame="undefined"!=typeof window?window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||function(callback){window.setTimeout(callback,1e3/60)}:function(){throw new Error("requestAnimationFrame is not supported, maybe you are running in the server side")},exports.default={addClass:function(el,className){var _this=this;"string"==typeof el&&(el=document.querySelectorAll(el)),(el instanceof NodeList?[].slice.call(el):[el]).forEach(function(e){_this.hasClass(e,className)||(e.classList?e.classList.add(className):e.className+=" "+className)})},removeClass:function(el,className){var _this2=this;"string"==typeof el&&(el=document.querySelectorAll(el)),(el instanceof NodeList?[].slice.call(el):[el]).forEach(function(e){_this2.hasClass(e,className)&&(e.classList?e.classList.remove(className):e.className=e.className.replace(new RegExp("(^|\\b)"+className.split(" ").join("|")+"(\\b|$)","gi")," "))})},hasClass:function(el,className){return"string"==typeof el&&(el=document.querySelector(el)),el.classList?el.classList.contains(className):new RegExp("(^| )"+className+"( |$)","gi").test(el.className)},toggleClass:function(el,className){"string"==typeof el&&(el=document.querySelector(el));var flag=this.hasClass(el,className);return flag?this.removeClass(el,className):this.addClass(el,className),flag},insertAfter:function(newEl,targetEl){var parent=targetEl.parentNode;parent.lastChild===targetEl?parent.appendChild(newEl):parent.insertBefore(newEl,targetEl.nextSibling)},remove:function(el){if("string"==typeof el)[].forEach.call(document.querySelectorAll(el),function(node){node.parentNode.removeChild(node)});else if(el.parentNode)el.parentNode.removeChild(el);else{if(!(el instanceof NodeList))throw new Error("you can only pass Element, array of Elements or query string as argument");[].forEach.call(el,function(node){node.parentNode.removeChild(node)})}},forceReflow:function(el){el.offsetHeight},getDocumentScrollTop:function(){return document.documentElement&&document.documentElement.scrollTop||document.body.scrollTop},setDocumentScrollTop:function(value){return window.scrollTo(0,value),value},outerHeight:function(el){return el.offsetHeight},outerHeightWithMargin:function(el){var height=el.offsetHeight,style=getComputedStyle(el);return height+=(parseFloat(style.marginTop)||0)+(parseFloat(style.marginBottom)||0)},outerWidth:function(el){return el.offsetWidth},outerWidthWithMargin:function(el){var width=el.offsetWidth,style=getComputedStyle(el);return width+=(parseFloat(style.marginLeft)||0)+(parseFloat(style.marginRight)||0)},getComputedStyles:function(el){return el.ownerDocument.defaultView.getComputedStyle(el,null)},getOffset:function(el){var html=el.ownerDocument.documentElement,box={top:0,left:0};return void 0!==el.getBoundingClientRect&&(box=el.getBoundingClientRect()),{top:box.top+window.pageYOffset-html.clientTop,left:box.left+window.pageXOffset-html.clientLeft}},getPosition:function(el){return el?{left:el.offsetLeft,top:el.offsetTop}:{left:0,top:0}},setStyle:function(node,att,val,style){(style=style||node.style)&&(null===val||""===val?val="":!isNaN(Number(val))&&reUnit.test(att)&&(val+="px"),""===att&&(att="cssText",val=""),style[att]=val)},setStyles:function(el,hash){function trim(str){return str.replace(/^\s+|\s+$/g,"")}var _this3=this,HAS_CSSTEXT_FEATURE=void 0!==el.style.cssText,originStyleText=void 0,originStyleObj={};originStyleText=HAS_CSSTEXT_FEATURE?el.style.cssText:el.getAttribute("style"),originStyleText.split(";").forEach(function(item){if(-1!==item.indexOf(":")){var obj=item.split(":");originStyleObj[trim(obj[0])]=trim(obj[1])}});var styleObj={};Object.keys(hash).forEach(function(item){_this3.setStyle(el,item,hash[item],styleObj)});var mergedStyleObj=Object.assign({},originStyleObj,styleObj),styleText=Object.keys(mergedStyleObj).map(function(item){return item+": "+mergedStyleObj[item]+";"}).join(" ");HAS_CSSTEXT_FEATURE?el.style.cssText=styleText:el.setAttribute("style",styleText)},getStyle:function(el,att,style){style=style||el.style;var val="";return style&&""===(val=style[att])&&(val=this.getComputedStyle(el,att)),val},getComputedStyle:function(el,att){var win=el.ownerDocument.defaultView,computed=win.getComputedStyle(el,null);return att?computed[att]:computed},getPageSize:function(){var xScroll=void 0,yScroll=void 0;window.innerHeight&&window.scrollMaxY?(xScroll=window.innerWidth+window.scrollMaxX,yScroll=window.innerHeight+window.scrollMaxY):document.body.scrollHeight>document.body.offsetHeight?(xScroll=document.body.scrollWidth,yScroll=document.body.scrollHeight):(xScroll=document.body.offsetWidth,yScroll=document.body.offsetHeight);var windowWidth=void 0,windowHeight=void 0;self.innerHeight?(windowWidth=document.documentElement.clientWidth?document.documentElement.clientWidth:self.innerWidth,windowHeight=self.innerHeight):document.documentElement&&document.documentElement.clientHeight?(windowWidth=document.documentElement.clientWidth,windowHeight=document.documentElement.clientHeight):document.body&&(windowWidth=document.body.clientWidth,windowHeight=document.body.clientHeight);var pageHeight=void 0,pageWidth=void 0;return pageHeight=yScroll<windowHeight?windowHeight:yScroll,pageWidth=xScroll<windowWidth?xScroll:windowWidth,{pageWidth:pageWidth,pageHeight:pageHeight,windowWidth:windowWidth,windowHeight:windowHeight}},get:function(selector){return document.querySelector(selector)||{}},getAll:function(selector){return document.querySelectorAll(selector)},parentsUntil:function(el,selector,filter){var result=[],matchesSelector=el.matches||el.webkitMatchesSelector||el.mozMatchesSelector||el.msMatchesSelector;for(el=el.parentElement;el&&!matchesSelector.call(el,selector);)filter?matchesSelector.call(el,filter)&&result.push(el):result.push(el),el=el.parentElement;return result},closest:function(el,selector){for(var matchesSelector=el.matches||el.webkitMatchesSelector||el.mozMatchesSelector||el.msMatchesSelector;el;){if(matchesSelector.call(el,selector))return el;el=el.parentElement}return null},_showHide:function(el,show){"string"==typeof el&&(el=document.querySelectorAll(el));var els=el instanceof NodeList?[].slice.call(el):[el],display=void 0,values=[];0!==els.length&&(els.forEach(function(e,index){e.style&&(display=e.style.display,show?"none"===display&&(values[index]=getAmDisplay(e)||""):"none"!==display&&(values[index]="none",setAmDisplay(e,display)))}),els.forEach(function(e,index){null!==values[index]&&(els[index].style.display=values[index])}))},show:function(elements){this._showHide(elements,!0)},hide:function(elements){this._showHide(elements,!1)},toggle:function(element){"none"===element.style.display?this.show(element):this.hide(element)},scrollTo:function(){var _this4=this,to=arguments.length<=0||void 0===arguments[0]?0:arguments[0],duration=arguments.length<=1||void 0===arguments[1]?16:arguments[1];if(!(duration<0)){var diff=to-this.getDocumentScrollTop();if(0!==diff){var perTick=diff/duration*10;requestAnimationFrame(function(){if(Math.abs(perTick)>Math.abs(diff))return void _this4.setDocumentScrollTop(_this4.getDocumentScrollTop()+diff);_this4.setDocumentScrollTop(_this4.getDocumentScrollTop()+perTick),diff>0&&_this4.getDocumentScrollTop()>=to||diff<0&&_this4.getDocumentScrollTop()<=to||_this4.scrollTo(to,duration-16)})}}},is:function(el,selector){return(el.matches||el.matchesSelector||el.msMatchesSelector||el.mozMatchesSelector||el.webkitMatchesSelector||el.oMatchesSelector).call(el,selector)},width:function(el){var styles=this.getComputedStyles(el),width=parseFloat(-1!==styles.width.indexOf("px")?styles.width:0);if("border-box"===(styles.boxSizing||"content-box"))return width;var borderLeftWidth=parseFloat(styles.borderLeftWidth);return width-parseFloat(styles.borderRightWidth)-borderLeftWidth-parseFloat(styles.paddingLeft)-parseFloat(styles.paddingRight)},height:function(el){var styles=this.getComputedStyles(el),height=parseFloat(-1!==styles.height.indexOf("px")?styles.height:0);if("border-box"===(styles.boxSizing||"content-box"))return height;var borderTopWidth=parseFloat(styles.borderTopWidth);return height-parseFloat(styles.borderBottomWidth)-borderTopWidth-parseFloat(styles.paddingTop)-parseFloat(styles.paddingBottom)}}},36:function(module,exports,__webpack_require__){"use strict";function getDtId(obj){return obj._dtId||(obj._dtId=_dtId++)}function parse(event){var dotIndex=event.indexOf(".");return dotIndex>0?{e:event.substring(0,event.indexOf(".")),ns:event.substring(dotIndex+1,event.length)}:{e:event}}function findHandlers(el,selector,event,callback){return event=parse(event),(handlers[getDtId(el)]||[]).filter(function(handler){return handler&&(!event.e||handler.e===event.e)&&(!event.ns||handler.ns===event.ns)&&(!callback||handler.callback===callback)&&(!selector||handler.selector===selector)})}function removeEvent(el,selector,event,callback){var eventName=parse(event).e;if(!el._dtId)return!1;var elHandlers=handlers[getDtId(el)];findHandlers(el,selector,event,callback).forEach(function(handler){el.removeEventListener?el.removeEventListener(eventName,handler.delegator||handler.callback):el.detachEvent&&el.detachEvent("on"+eventName,handler.delegator||handler.callback),elHandlers.splice(elHandlers.indexOf(handler),1)})}function bindEvent(el,selector,event,callback,delegator){var eventName=parse(event).e,ns=parse(event).ns;el.addEventListener?el.addEventListener(eventName,delegator||callback,!1):el.attachEvent&&el.attachEvent("on"+eventName,delegator||callback);var id=getDtId(el);(handlers[id]||(handlers[id]=[])).push({delegator:delegator,callback:callback,e:eventName,ns:ns,selector:selector})}Object.defineProperty(exports,"__esModule",{value:!0});var handlers={},specialEvents={};specialEvents.click=specialEvents.mousedown=specialEvents.mouseup=specialEvents.mousemove="MouseEvents";var _dtId=1,Events={on:function(el,eventType,callback){bindEvent(el,null,eventType,callback)},off:function(el,eventType,callback){removeEvent(el,null,eventType,callback)},once:function(el,eventType,callback){var recursiveFunction=function recursiveFunction(e){return Events.off(e.currentTarget,e.type,recursiveFunction),callback(e)};this.on(el,eventType,recursiveFunction)},delegate:function(el,selector,eventType,callback){bindEvent(el,selector,eventType,callback,function(e){for(var els=el.querySelectorAll(selector),matched=!1,i=0;i<els.length;i++){var _el=els[i];if(_el===e.target||_el.contains(e.target)){matched=_el;break}}matched&&callback.apply(matched,[].slice.call(arguments))})},undelegate:function(el,selector,eventType,callback){removeEvent(el,selector,eventType,callback)},trigger:function(el,eventType,props){var event=document.createEvent(specialEvents[eventType]||"Events"),bubbles=!0;if(props)for(var name in props)({}).hasOwnProperty.call(props,name)&&("bubbles"===name?bubbles=!!props[name]:event[name]=props[name]);event.initEvent(eventType,bubbles,!0),el.dispatchEvent(event)}};exports.default=Events},37:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.pkgMap={"viser-react":"ViserReact","viser-graph-react":"ViserGraphReact","viser-vue":"ViserVue","viser-graph-vue":"ViserGraphVue","@angular/core":"ng.core","@angular/platform-browser":"ng.platformBrowser","viser-ng":"parent.ViserNg","viser-graph-ng":"parent.ViserGraphNg"},exports.template={react:'<!DOCTYPE html>\n    <html lang="en">\n    <head>\n        <meta charset="UTF-8">\n        <meta name="viewport" content="width=device-width, initial-scale=1.0">\n        <meta http-equiv="X-UA-Compatible" content="ie=edge">\n        <script crossorigin src="/assets/pkg/react.production.min.js"><\/script>\n        <script crossorigin src="/assets/pkg/react-dom.production.min.js"><\/script>\n        <script src="/assets/pkg/babel.min.js"><\/script>\n        <script src="/assets/pkg/viser-react.min.js"><\/script>\n        <script src="/assets/pkg/jquery.min.js"><\/script>\n        <script src="/assets/pkg/viser-graph-react.min.js"><\/script>\n        <script src="/assets/pkg/lodash.core.min.js"><\/script>\n        <script src="/assets/pkg/data-set.min.js"><\/script>\n        <title>Document</title>\n        <style>*{margin:0;padding:0;}</style>\n    </head>\n    <body>\n    <div id="mount">waiting for demo running...</div>\n    <script type="text/babel">\n    {code}\n    <\/script>\n        \n    </body></html>',vue:'<html>\n    <head>\n    <meta http-equiv="content-type" content="text/html; charset=UTF-8">\n    <title>Vue example</title>\n    <meta name="viewport" content="width=device-width, initial-scale=1">\n    <script src="/assets/pkg/babel.min.js"><\/script>\n    <script src="/assets/pkg/jquery.min.js"><\/script>\n    <script src="/assets/pkg/vue.min.js"><\/script>\n    <script src="/assets/pkg/data-set.min.js"><\/script>\n    <script src="/assets/pkg/{scriptpkg}.min.js"><\/script>\n    <script src="/assets/pkg/jquery.min.js"><\/script>\n    <style type="text/css">\n    * {\n        margin: 0;\n        padding: 0;\n    }\n    </style>\n    </head>\n    <body>\n    <div id="mount">waiting for demo running...</div>\n    <script type="text/babel">\n    Vue.use({userModule}.default);\n    {variable}\n    new Vue({\n        el: \'#mount\',\n        template: `{template}`,\n        {exports}\n    })\n    <\/script>\n    </body>\n    </html>',angular:'<html>\n    <head>\n        <meta http-equiv="content-type" content="text/html; charset=UTF-8">\n        <title>angular example</title>\n        <meta name="viewport" content="width=device-width, initial-scale=1">\n        <script type="text/javascript" src="/assets/pkg/typescript.js"><\/script>\n        <script type="text/javascript" src="https://unpkg.com/core-js@2.5.7/client/shim.min.js"><\/script>\n        <script type="text/javascript" src="https://unpkg.com/zone.js@0.8.26/dist/zone.min.js"><\/script>\n        <script type="text/javascript" src="https://unpkg.com/rxjs@5.2.0/bundles/Rx.min.js"><\/script>\n        <script type="text/javascript" src="https://unpkg.com/@angular/core@5.0.1/bundles/core.umd.js"><\/script>\n        <script type="text/javascript" src="https://unpkg.com/@angular/common@5.0.1/bundles/common.umd.js"><\/script>\n        <script type="text/javascript" src="https://unpkg.com/@angular/compiler@5.0.1/bundles/compiler.umd.js"><\/script>\n        <script type="text/javascript" src="https://unpkg.com/@angular/platform-browser@5.0.1/bundles/platform-browser.umd.js"><\/script>\n        <script type="text/javascript" src="https://unpkg.com/@angular/platform-browser-dynamic@5.0.1/bundles/platform-browser-dynamic.umd.js"><\/script>\n        \x3c!--<script src="https://unpkg.com/viser-ng@2.3.2/umd/viser-ng.min.js"><\/script>\n        <script src="https://unpkg.com/viser-graph-ng@0.1.10/umd/viser-graph-ng.min.js"><\/script>--\x3e\n        <style type="text/css">\n            * {\n                margin: 0;\n                padding: 0;\n            }\n        </style>\n    </head>\n    <body>\n        <div id="mount"></div>\n        <script type="text/typescript">\n            {code}\n            const { platformBrowserDynamic } =ng.platformBrowserDynamic;\n            platformBrowserDynamic().bootstrapModule(AppModule).then((ref:any)=>{console.log(ref)});\n        <\/script>\n    </body>\n    </html>'}},38:function(module,exports){},39:function(module,exports,__webpack_require__){"use strict";function ca(a,b,c,d,e,f,g,h){if(!a){if(a=void 0,void 0===b)a=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var k=[c,d,e,f,g,h],l=0;a=Error(b.replace(/%s/g,function(){return k[l++]})),a.name="Invariant Violation"}throw a.framesToPop=1,a}}function t(a){for(var b=arguments.length-1,c="https://reactjs.org/docs/error-decoder.html?invariant="+a,d=0;d<b;d++)c+="&args[]="+encodeURIComponent(arguments[d+1]);ca(!1,"Minified React error #"+a+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",c)}function da(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}function ka(a,b,c,d,e,f,g,h,k){ea=!1,fa=null,da.apply(ja,arguments)}function la(a,b,c,d,e,f,g,h,k){if(ka.apply(this,arguments),ea){if(ea){var l=fa;ea=!1,fa=null}else t("198"),l=void 0;ha||(ha=!0,ia=l)}}function oa(){if(ma)for(var a in na){var b=na[a],c=ma.indexOf(a);if(-1<c||t("96",a),!pa[c]){b.extractEvents||t("97",a),pa[c]=b,c=b.eventTypes;for(var d in c){var e=void 0,f=c[d],g=b,h=d;qa.hasOwnProperty(h)&&t("99",h),qa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&ra(k[e],g,h);e=!0}else f.registrationName?(ra(f.registrationName,g,h),e=!0):e=!1;e||t("98",d,a)}}}}function ra(a,b,c){sa[a]&&t("100",a),sa[a]=b,ta[a]=b.eventTypes[c].dependencies}function xa(a,b,c,d){b=a.type||"unknown-event",a.currentTarget=wa(d),la(b,c,void 0,a),a.currentTarget=null}function ya(a,b){return null==b&&t("30"),null==a?b:Array.isArray(a)?Array.isArray(b)?(a.push.apply(a,b),a):(a.push(b),a):Array.isArray(b)?[a].concat(b):[a,b]}function za(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}function Ba(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)xa(a,b,c[e],d[e]);else c&&xa(a,b,c,d);a._dispatchListeners=null,a._dispatchInstances=null,a.isPersistent()||a.constructor.release(a)}}function Ca(a){return Ba(a,!0)}function Da(a){return Ba(a,!1)}function Fa(a,b){var c=a.stateNode;if(!c)return null;var d=ua(c);if(!d)return null;c=d[b];a:switch(b){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(d=!d.disabled)||(a=a.type,d=!("button"===a||"input"===a||"select"===a||"textarea"===a)),a=!d;break a;default:a=!1}return a?null:(c&&"function"!=typeof c&&t("231",b,typeof c),c)}function Ga(a,b){if(null!==a&&(Aa=ya(Aa,a)),a=Aa,Aa=null,a&&(b?za(a,Ca):za(a,Da),Aa&&t("95"),ha))throw b=ia,ha=!1,ia=null,b}function Ka(a){if(a[Ia])return a[Ia];for(;!a[Ia];){if(!a.parentNode)return null;a=a.parentNode}return a=a[Ia],7===a.tag||8===a.tag?a:null}function La(a){return a=a[Ia],!a||7!==a.tag&&8!==a.tag?null:a}function Ma(a){if(7===a.tag||8===a.tag)return a.stateNode;t("33")}function Na(a){return a[Ja]||null}function Oa(a){do{a=a.return}while(a&&7!==a.tag);return a||null}function Pa(a,b,c){(b=Fa(a,c.dispatchConfig.phasedRegistrationNames[b]))&&(c._dispatchListeners=ya(c._dispatchListeners,b),c._dispatchInstances=ya(c._dispatchInstances,a))}function Qa(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=Oa(b);for(b=c.length;0<b--;)Pa(c[b],"captured",a);for(b=0;b<c.length;b++)Pa(c[b],"bubbled",a)}}function Ra(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Fa(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=ya(c._dispatchListeners,b),c._dispatchInstances=ya(c._dispatchInstances,a))}function Ta(a){a&&a.dispatchConfig.registrationName&&Ra(a._targetInst,null,a)}function Ua(a){za(a,Qa)}function Wa(a,b){var c={};return c[a.toLowerCase()]=b.toLowerCase(),c["Webkit"+a]="webkit"+b,c["Moz"+a]="moz"+b,c}function ab(a){if(Za[a])return Za[a];if(!Ya[a])return a;var c,b=Ya[a];for(c in b)if(b.hasOwnProperty(c)&&c in $a)return Za[a]=b[c];return a}function jb(){if(ib)return ib;var a,d,b=hb,c=b.length,e="value"in gb?gb.value:gb.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return ib=e.slice(a,1<d?1-d:void 0)}function kb(){return!0}function lb(){return!1}function z(a,b,c,d){this.dispatchConfig=a,this._targetInst=b,this.nativeEvent=c,a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):"target"===e?this.target=d:this[e]=c[e]);return this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?kb:lb,this.isPropagationStopped=lb,this}function nb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();return this.call(e,a,b,c,d),e}return new this(a,b,c,d)}function ob(a){a instanceof this||t("279"),a.destructor(),10>this.eventPool.length&&this.eventPool.push(a)}function mb(a){a.eventPool=[],a.getPooled=nb,a.release=ob}function zb(a,b){switch(a){case"keyup":return-1!==rb.indexOf(b.keyCode);case"keydown":return 229!==b.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function Ab(a){return a=a.detail,"object"==typeof a&&"data"in a?a.data:null}function Cb(a,b){switch(a){case"compositionend":return Ab(b);case"keypress":return 32!==b.which?null:(yb=!0,wb);case"textInput":return a=b.data,a===wb&&yb?null:a;default:return null}}function Db(a,b){if(Bb)return"compositionend"===a||!sb&&zb(a,b)?(a=jb(),ib=hb=gb=null,Bb=!1,a):null;switch(a){case"paste":return null;case"keypress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case"compositionend":return vb&&"ko"!==b.locale?null:b.data;default:return null}}function Ib(a){if(a=va(a)){"function"!=typeof Fb&&t("280");var b=ua(a.stateNode);Fb(a.stateNode,a.type,b)}}function Jb(a){Gb?Hb?Hb.push(a):Hb=[a]:Gb=a}function Kb(){if(Gb){var a=Gb,b=Hb;if(Hb=Gb=null,Ib(a),b)for(a=0;a<b.length;a++)Ib(b[a])}}function Lb(a,b){return a(b)}function Mb(a,b,c){return a(b,c)}function Nb(){}function Pb(a,b){if(Ob)return a(b);Ob=!0;try{return Lb(a,b)}finally{Ob=!1,(null!==Gb||null!==Hb)&&(Nb(),Kb())}}function Rb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return"input"===b?!!Qb[a.type]:"textarea"===b}function Sb(a){return a=a.target||a.srcElement||window,a.correspondingUseElement&&(a=a.correspondingUseElement),3===a.nodeType?a.parentNode:a}function Tb(a){if(!Va)return!1;a="on"+a;var b=a in document;return b||(b=document.createElement("div"),b.setAttribute(a,"return;"),b="function"==typeof b[a]),b}function Ub(a){var b=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}function Vb(a){var b=Ub(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&void 0!==c&&"function"==typeof c.get&&"function"==typeof c.set){var e=c.get,f=c.set;return Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=""+a,f.call(this,a)}}),Object.defineProperty(a,b,{enumerable:c.enumerable}),{getValue:function(){return d},setValue:function(a){d=""+a},stopTracking:function(){a._valueTracker=null,delete a[b]}}}}function Wb(a){a._valueTracker||(a._valueTracker=Vb(a))}function Xb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue(),d="";return a&&(d=Ub(a)?a.checked?"true":"false":a.value),(a=d)!==c&&(b.setValue(a),!0)}function kc(a){return null===a||"object"!=typeof a?null:(a=jc&&a[jc]||a["@@iterator"],"function"==typeof a?a:null)}function lc(a){if(null==a)return null;if("function"==typeof a)return a.displayName||a.name||null;if("string"==typeof a)return a;switch(a){case gc:return"AsyncMode";case bc:return"Fragment";case ac:return"Portal";case dc:return"Profiler";case cc:return"StrictMode";case ic:return"Placeholder"}if("object"==typeof a){switch(a.$$typeof){case fc:return"Context.Consumer";case ec:return"Context.Provider";case hc:var b=a.render;return b=b.displayName||b.name||"",a.displayName||(""!==b?"ForwardRef("+b+")":"ForwardRef")}if("function"==typeof a.then&&(a=1===a._reactStatus?a._reactResult:null))return lc(a)}return null}function mc(a){var b="";do{a:switch(a.tag){case 4:case 0:case 1:case 2:case 3:case 7:case 10:var c=a._debugOwner,d=a._debugSource,e=lc(a.type),f=null;c&&(f=lc(c.type)),c=e,e="",d?e=" (at "+d.fileName.replace(Zb,"")+":"+d.lineNumber+")":f&&(e=" (created by "+f+")"),f="\n    in "+(c||"Unknown")+e;break a;default:f=""}b+=f,a=a.return}while(a);return b}function sc(a){return!!pc.call(rc,a)||!pc.call(qc,a)&&(nc.test(a)?rc[a]=!0:(qc[a]=!0,!1))}function tc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case"function":case"symbol":return!0;case"boolean":return!d&&(null!==c?!c.acceptsBooleans:"data-"!==(a=a.toLowerCase().slice(0,5))&&"aria-"!==a);default:return!1}}function uc(a,b,c,d){if(null===b||void 0===b||tc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function D(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b,this.attributeName=d,this.attributeNamespace=e,this.mustUseProperty=c,this.propertyName=a,this.type=b}function wc(a){return a[1].toUpperCase()}function xc(a,b,c,d){var e=E.hasOwnProperty(b)?E[b]:null;(null!==e?0===e.type:!d&&(2<b.length&&("o"===b[0]||"O"===b[0])&&("n"===b[1]||"N"===b[1])))||(uc(b,c,e,d)&&(c=null),d||null===e?sc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,""+c)):e.mustUseProperty?a[e.propertyName]=null===c?3!==e.type&&"":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?"":""+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}function yc(a){switch(typeof a){case"boolean":case"number":case"object":case"string":case"undefined":return a;default:return""}}function zc(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Bc(a,b){var c=null==b.defaultValue?"":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=yc(null!=b.value?b.value:c),a._wrapperState={initialChecked:d,initialValue:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value}}function Cc(a,b){null!=(b=b.checked)&&xc(a,"checked",b,!1)}function Dc(a,b){Cc(a,b);var c=yc(b.value),d=b.type;if(null!=c)"number"===d?(0===c&&""===a.value||a.value!=c)&&(a.value=""+c):a.value!==""+c&&(a.value=""+c);else if("submit"===d||"reset"===d)return void a.removeAttribute("value");b.hasOwnProperty("value")?Ec(a,b.type,c):b.hasOwnProperty("defaultValue")&&Ec(a,b.type,yc(b.defaultValue)),null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}function Fc(a,b,c){if(b.hasOwnProperty("value")||b.hasOwnProperty("defaultValue")){var d=b.type;if(!("submit"!==d&&"reset"!==d||void 0!==b.value&&null!==b.value))return;b=""+a._wrapperState.initialValue,c||b===a.value||(a.value=b),a.defaultValue=b}c=a.name,""!==c&&(a.name=""),a.defaultChecked=!a.defaultChecked,a.defaultChecked=!!a._wrapperState.initialChecked,""!==c&&(a.name=c)}function Ec(a,b,c){"number"===b&&a.ownerDocument.activeElement===a||(null==c?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+c&&(a.defaultValue=""+c))}function Hc(a,b,c){return a=z.getPooled(Gc.change,a,b,c),a.type="change",Jb(c),Ua(a),a}function Kc(a){Ga(a,!1)}function Lc(a){if(Xb(Ma(a)))return a}function Mc(a,b){if("change"===a)return b}function Oc(){Ic&&(Ic.detachEvent("onpropertychange",Pc),Jc=Ic=null)}function Pc(a){"value"===a.propertyName&&Lc(Jc)&&(a=Hc(Jc,a,Sb(a)),Pb(Kc,a))}function Qc(a,b,c){"focus"===a?(Oc(),Ic=b,Jc=c,Ic.attachEvent("onpropertychange",Pc)):"blur"===a&&Oc()}function Rc(a){if("selectionchange"===a||"keyup"===a||"keydown"===a)return Lc(Jc)}function Sc(a,b){if("click"===a)return Lc(b)}function Tc(a,b){if("input"===a||"change"===a)return Lc(b)}function Xc(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):!!(a=Wc[a])&&!!b[a]}function Yc(){return Xc}function hd(a,b){return a===b?0!==a||0!==b||1/a==1/b:a!==a&&b!==b}function id(a,b){if(hd(a,b))return!0;if("object"!=typeof a||null===a||"object"!=typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!gd.call(b,c[d])||!hd(a[c[d]],b[c[d]]))return!1;return!0}function jd(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!=(2&b.effectTag))return 1;for(;b.return;)if(b=b.return,0!=(2&b.effectTag))return 1}return 5===b.tag?2:3}function kd(a){2!==jd(a)&&t("188")}function ld(a){var b=a.alternate;if(!b)return b=jd(a),3===b&&t("188"),1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return kd(e),a;if(g===d)return kd(e),b;g=g.sibling}t("188")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0,c=e,d=f;break}if(h===d){g=!0,d=e,c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0,c=f,d=e;break}if(h===d){g=!0,d=f,c=e;break}h=h.sibling}g||t("189")}}c.alternate!==d&&t("190")}return 5!==c.tag&&t("188"),c.stateNode.current===c?a:b}function md(a){if(!(a=ld(a)))return null;for(var b=a;;){if(7===b.tag||8===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return,b=b.sibling}}return null}function qd(a){var b=a.keyCode;return"charCode"in a?0===(a=a.charCode)&&13===b&&(a=13):a=b,10===a&&(a=13),32<=a||13===a?a:0}function Bd(a,b){var c=a[0];a=a[1];var d="on"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+"Capture"},dependencies:[c],isInteractive:b},zd[a]=b,Ad[c]=b}function Fd(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d;for(d=c;d.return;)d=d.return;if(!(d=5!==d.tag?null:d.stateNode.containerInfo))break;a.ancestors.push(c),c=Ka(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=Sb(a.nativeEvent);d=a.topLevelType;for(var f=a.nativeEvent,g=null,h=0;h<pa.length;h++){var k=pa[h];k&&(k=k.extractEvents(d,b,f,e))&&(g=ya(g,k))}Ga(g,!1)}}function F(a,b){if(!b)return null;var c=(Dd(a)?Hd:Id).bind(null,a);b.addEventListener(a,c,!1)}function Jd(a,b){if(!b)return null;var c=(Dd(a)?Hd:Id).bind(null,a);b.addEventListener(a,c,!0)}function Hd(a,b){Mb(Id,a,b)}function Id(a,b){if(Gd){var c=Sb(b);if(c=Ka(c),null===c||"number"!=typeof c.tag||2===jd(c)||(c=null),Ed.length){var d=Ed.pop();d.topLevelType=a,d.nativeEvent=b,d.targetInst=c,a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Pb(Fd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>Ed.length&&Ed.push(a)}}}function Nd(a){return Object.prototype.hasOwnProperty.call(a,Md)||(a[Md]=Ld++,Kd[a[Md]]={}),Kd[a[Md]]}function Od(a){if(void 0===(a=a||("undefined"!=typeof document?document:void 0)))return null;try{return a.activeElement||a.body}catch(b){return a.body}}function Qd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}function Rd(a,b){var c=Qd(a);a=0;for(var d;c;){if(3===c.nodeType){if(d=a+c.textContent.length,a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Qd(c)}}function Sd(a,b){return!(!a||!b)&&(a===b||(!a||3!==a.nodeType)&&(b&&3===b.nodeType?Sd(a,b.parentNode):"contains"in a?a.contains(b):!!a.compareDocumentPosition&&!!(16&a.compareDocumentPosition(b))))}function Td(){for(var a=window,b=Od();b instanceof a.HTMLIFrameElement;){try{a=b.contentDocument.defaultView}catch(c){break}b=Od(a.document)}return b}function Ud(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&("text"===a.type||"search"===a.type||"tel"===a.type||"url"===a.type||"password"===a.type)||"textarea"===b||"true"===a.contentEditable)}function ae(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;return $d||null==Xd||Xd!==Od(c)?null:(c=Xd,"selectionStart"in c&&Ud(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}),Zd&&id(Zd,c)?null:(Zd=c,a=z.getPooled(Wd.select,Yd,a,b),a.type="select",a.target=Xd,Ua(a),a))}function ce(a){var b="";return aa.Children.forEach(a,function(a){null!=a&&(b+=a)}),b}function de(a,b){return a=n({children:void 0},b),(b=ce(b.children))&&(a.children=b),a}function ee(a,b,c,d){if(a=a.options,b){b={};for(var e=0;e<c.length;e++)b["$"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{for(c=""+yc(c),b=null,e=0;e<a.length;e++){if(a[e].value===c)return a[e].selected=!0,void(d&&(a[e].defaultSelected=!0));null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}function fe(a,b){return null!=b.dangerouslySetInnerHTML&&t("91"),n({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function ge(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c&&t("92"),Array.isArray(b)&&(1>=b.length||t("93"),b=b[0]),c=b),null==c&&(c="")),a._wrapperState={initialValue:yc(c)}}function he(a,b){var c=yc(b.value),d=yc(b.defaultValue);null!=c&&(c=""+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c)),null!=d&&(a.defaultValue=""+d)}function ie(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}function ke(a){switch(a){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function le(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?ke(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a}function oe(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType)return void(c.nodeValue=b)}a.textContent=b}function re(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf("--"),e=c,f=b[c];e=null==f||"boolean"==typeof f||""===f?"":d||"number"!=typeof f||0===f||pe.hasOwnProperty(e)&&pe[e]?(""+f).trim():f+"px","float"===c&&(c="cssFloat"),d?a.setProperty(c,e):a[c]=e}}function te(a,b){b&&(se[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML)&&t("137",a,""),null!=b.dangerouslySetInnerHTML&&(null!=b.children&&t("60"),"object"==typeof b.dangerouslySetInnerHTML&&"__html"in b.dangerouslySetInnerHTML||t("61")),null!=b.style&&"object"!=typeof b.style&&t("62",""))}function ue(a,b){if(-1===a.indexOf("-"))return"string"==typeof b.is;switch(a){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function ve(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Nd(a);b=ta[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case"scroll":Jd("scroll",a);break;case"focus":case"blur":Jd("focus",a),Jd("blur",a),c.blur=!0,c.focus=!0;break;case"cancel":case"close":Tb(e)&&Jd(e,a);break;case"invalid":case"submit":case"reset":break;default:-1===fb.indexOf(e)&&F(e,a)}c[e]=!0}}}function we(){}function ze(a,b){switch(a){case"button":case"input":case"select":case"textarea":return!!b.autoFocus}return!1}function Ae(a,b){return"textarea"===a||"option"===a||"noscript"===a||"string"==typeof b.children||"number"==typeof b.children||"object"==typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}function Be(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function Ce(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function G(a){0>Ee||(a.current=De[Ee],De[Ee]=null,Ee--)}function H(a,b){Ee++,De[Ee]=a.current,a.current=b}function He(a,b){var c=a.type.contextTypes;if(!c)return Fe;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var f,e={};for(f in c)e[f]=b[f];return d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e),e}function K(a){return null!==(a=a.childContextTypes)&&void 0!==a}function Ie(a){G(J,a),G(I,a)}function Je(a){G(J,a),G(I,a)}function Ke(a,b,c){I.current!==Fe&&t("168"),H(I,b,a),H(J,c,a)}function Le(a,b,c){var d=a.stateNode;if(a=b.childContextTypes,"function"!=typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)e in a||t("108",lc(b)||"Unknown",e);return n({},c,d)}function Me(a){var b=a.stateNode;return b=b&&b.__reactInternalMemoizedMergedChildContext||Fe,Ge=I.current,H(I,b,a),H(J,J.current,a),!0}function Ne(a,b,c){var d=a.stateNode;d||t("169"),c?(b=Le(a,b,Ge),d.__reactInternalMemoizedMergedChildContext=b,G(J,a),G(I,a),H(I,b,a)):G(J,a),H(J,c,a)}function Qe(a){return function(b){try{return a(b)}catch(c){}}}function Re(a){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Oe=Qe(function(a){return b.onCommitFiberRoot(c,a)}),Pe=Qe(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}function Se(a,b,c,d){this.tag=a,this.key=c,this.sibling=this.child=this.return=this.stateNode=this.type=null,this.index=0,this.ref=null,this.pendingProps=b,this.firstContextDependency=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=d,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Te(a){return!(!(a=a.prototype)||!a.isReactComponent)}function Ue(a,b,c){var d=a.alternate;return null===d?(d=new Se(a.tag,b,a.key,a.mode),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.pendingProps=b,d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null),d.childExpirationTime=a.childExpirationTime,d.expirationTime=b!==a.pendingProps?c:a.expirationTime,d.child=a.child,d.memoizedProps=a.memoizedProps,d.memoizedState=a.memoizedState,d.updateQueue=a.updateQueue,d.firstContextDependency=a.firstContextDependency,d.sibling=a.sibling,d.index=a.index,d.ref=a.ref,d}function Ve(a,b,c){var d=a.type,e=a.key;a=a.props;var f=void 0;if("function"==typeof d)f=Te(d)?2:4;else if("string"==typeof d)f=7;else a:switch(d){case bc:return We(a.children,b,c,e);case gc:f=10,b|=3;break;case cc:f=10,b|=2;break;case dc:return d=new Se(15,a,e,4|b),d.type=dc,d.expirationTime=c,d;case ic:f=16;break;default:if("object"==typeof d&&null!==d)switch(d.$$typeof){case ec:f=12;break a;case fc:f=11;break a;case hc:f=13;break a;default:if("function"==typeof d.then){f=4;break a}}t("130",null==d?d:typeof d,"")}return b=new Se(f,a,e,b),b.type=d,b.expirationTime=c,b}function We(a,b,c,d){return a=new Se(9,a,d,b),a.expirationTime=c,a}function Xe(a,b,c){return a=new Se(8,a,null,b),a.expirationTime=c,a}function Ye(a,b,c){return b=new Se(6,null!==a.children?a.children:[],a.key,b),b.expirationTime=c,b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation},b}function Ze(a,b){a.didError=!1;var c=a.earliestPendingTime;0===c?a.earliestPendingTime=a.latestPendingTime=b:c>b?a.earliestPendingTime=b:a.latestPendingTime<b&&(a.latestPendingTime=b),$e(b,a)}function $e(a,b){var c=b.earliestSuspendedTime,d=b.latestSuspendedTime,e=b.earliestPendingTime,f=b.latestPingedTime;e=0!==e?e:f,0===e&&(0===a||d>a)&&(e=d),a=e,0!==a&&0!==c&&c<a&&(a=c),b.nextExpirationTimeToWorkOn=e,b.expirationTime=a}function bf(a){return{baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function cf(a){return{baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function df(a){return{expirationTime:a,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function ef(a,b){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b)}function ff(a,b){var c=a.alternate;if(null===c){var d=a.updateQueue,e=null;null===d&&(d=a.updateQueue=bf(a.memoizedState))}else d=a.updateQueue,e=c.updateQueue,null===d?null===e?(d=a.updateQueue=bf(a.memoizedState),e=c.updateQueue=bf(c.memoizedState)):d=a.updateQueue=cf(e):null===e&&(e=c.updateQueue=cf(d));null===e||d===e?ef(d,b):null===d.lastUpdate||null===e.lastUpdate?(ef(d,b),ef(e,b)):(ef(d,b),e.lastUpdate=b)}function gf(a,b){var c=a.updateQueue;c=null===c?a.updateQueue=bf(a.memoizedState):hf(a,c),null===c.lastCapturedUpdate?c.firstCapturedUpdate=c.lastCapturedUpdate=b:(c.lastCapturedUpdate.next=b,c.lastCapturedUpdate=b)}function hf(a,b){var c=a.alternate;return null!==c&&b===c.updateQueue&&(b=a.updateQueue=cf(b)),b}function jf(a,b,c,d,e,f){switch(c.tag){case 1:return a=c.payload,"function"==typeof a?a.call(f,d,e):a;case 3:a.effectTag=-1025&a.effectTag|64;case 0:if(a=c.payload,null===(e="function"==typeof a?a.call(f,d,e):a)||void 0===e)break;return n({},d,e);case 2:af=!0}return d}function kf(a,b,c,d,e){af=!1,b=hf(a,b);for(var f=b.baseState,g=null,h=0,k=b.firstUpdate,l=f;null!==k;){var m=k.expirationTime;m>e?(null===g&&(g=k,f=l),(0===h||h>m)&&(h=m)):(l=jf(a,b,k,l,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=k:(b.lastEffect.nextEffect=k,b.lastEffect=k))),k=k.next}for(m=null,k=b.firstCapturedUpdate;null!==k;){var r=k.expirationTime;r>e?(null===m&&(m=k,null===g&&(f=l)),(0===h||h>r)&&(h=r)):(l=jf(a,b,k,l,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=k:(b.lastCapturedEffect.nextEffect=k,b.lastCapturedEffect=k))),k=k.next}null===g&&(b.lastUpdate=null),null===m?b.lastCapturedUpdate=null:a.effectTag|=32,null===g&&null===m&&(f=l),b.baseState=f,b.firstUpdate=g,b.firstCapturedUpdate=m,a.expirationTime=h,a.memoizedState=l}function lf(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null),mf(b.firstEffect,c),b.firstEffect=b.lastEffect=null,mf(b.firstCapturedEffect,c),b.firstCapturedEffect=b.lastCapturedEffect=null}function mf(a,b){for(;null!==a;){var c=a.callback;if(null!==c){a.callback=null;var d=b;"function"!=typeof c&&t("191",c),c.call(d)}a=a.nextEffect}}function nf(a,b){return{value:a,source:b,stack:mc(b)}}function sf(a,b){var c=a.type._context;H(of,c._currentValue,a),c._currentValue=b}function tf(a){var b=of.current;G(of,a),a.type._context._currentValue=b}function uf(a){pf=a,rf=qf=null,a.firstContextDependency=null}function vf(a,b){return rf!==a&&!1!==b&&0!==b&&("number"==typeof b&&1073741823!==b||(rf=a,b=1073741823),b={context:a,observedBits:b,next:null},null===qf?(null===pf&&t("277"),pf.firstContextDependency=qf=b):qf=qf.next=b),a._currentValue}function zf(a){return a===wf&&t("174"),a}function Af(a,b){H(yf,b,a),H(xf,a,a),H(L,wf,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:le(null,"");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=le(b,c)}G(L,a),H(L,b,a)}function Bf(a){G(L,a),G(xf,a),G(yf,a)}function Cf(a){zf(yf.current);var b=zf(L.current),c=le(b,a.type);b!==c&&(H(xf,a,a),H(L,c,a))}function Df(a){xf.current===a&&(G(L,a),G(xf,a))}function Ff(a,b,c,d){b=a.memoizedState,c=c(d,b),c=null===c||void 0===c?b:n({},b,c),a.memoizedState=c,null!==(d=a.updateQueue)&&0===a.expirationTime&&(d.baseState=c)}function Kf(a,b,c,d,e,f,g){return a=a.stateNode,"function"==typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):!b.prototype||!b.prototype.isPureReactComponent||(!id(c,d)||!id(e,f))}function Lf(a,b,c,d){a=b.state,"function"==typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d),"function"==typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d),b.state!==a&&Jf.enqueueReplaceState(b,b.state,null)}function Mf(a,b,c,d){var e=a.stateNode,f=K(b)?Ge:I.current;e.props=c,e.state=a.memoizedState,e.refs=Ef,e.context=He(a,f),f=a.updateQueue,null!==f&&(kf(a,f,c,e,d),e.state=a.memoizedState),f=b.getDerivedStateFromProps,"function"==typeof f&&(Ff(a,b,f,c),e.state=a.memoizedState),"function"==typeof b.getDerivedStateFromProps||"function"==typeof e.getSnapshotBeforeUpdate||"function"!=typeof e.UNSAFE_componentWillMount&&"function"!=typeof e.componentWillMount||(b=e.state,"function"==typeof e.componentWillMount&&e.componentWillMount(),"function"==typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Jf.enqueueReplaceState(e,e.state,null),null!==(f=a.updateQueue)&&(kf(a,f,c,e,d),e.state=a.memoizedState)),"function"==typeof e.componentDidMount&&(a.effectTag|=4)}function Of(a,b,c){if(null!==(a=c.ref)&&"function"!=typeof a&&"object"!=typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(2!==c.tag&&3!==c.tag&&t("110"),d=c.stateNode),d||t("147",a);var e=""+a;return null!==b&&null!==b.ref&&"function"==typeof b.ref&&b.ref._stringRef===e?b.ref:(b=function(a){var b=d.refs;b===Ef&&(b=d.refs={}),null===a?delete b[e]:b[e]=a},b._stringRef=e,b)}"string"!=typeof a&&t("284"),c._owner||t("254",a)}return a}function Pf(a,b){"textarea"!==a.type&&t("31","[object Object]"===Object.prototype.toString.call(b)?"object with keys {"+Object.keys(b).join(", ")+"}":b,"")}function Qf(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c,c.nextEffect=null,c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){return a=Ue(a,b,c),a.index=0,a.sibling=null,a}function f(b,c,d){return b.index=d,a?null!==(d=b.alternate)?(d=d.index,d<c?(b.effectTag=2,c):d):(b.effectTag=2,c):c}function g(b){return a&&null===b.alternate&&(b.effectTag=2),b}function h(a,b,c,d){return null===b||8!==b.tag?(b=Xe(c,a.mode,d),b.return=a,b):(b=e(b,c,d),b.return=a,b)}function k(a,b,c,d){return null!==b&&b.type===c.type?(d=e(b,c.props,d),d.ref=Of(a,b,c),d.return=a,d):(d=Ve(c,a.mode,d),d.ref=Of(a,b,c),d.return=a,d)}function l(a,b,c,d){return null===b||6!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation?(b=Ye(c,a.mode,d),b.return=a,b):(b=e(b,c.children||[],d),b.return=a,b)}function m(a,b,c,d,f){return null===b||9!==b.tag?(b=We(c,a.mode,d,f),b.return=a,b):(b=e(b,c,d),b.return=a,b)}function r(a,b,c){if("string"==typeof b||"number"==typeof b)return b=Xe(""+b,a.mode,c),b.return=a,b;if("object"==typeof b&&null!==b){switch(b.$$typeof){case $b:return c=Ve(b,a.mode,c),c.ref=Of(a,null,b),c.return=a,c;case ac:return b=Ye(b,a.mode,c),b.return=a,b}if(Nf(b)||kc(b))return b=We(b,a.mode,c,null),b.return=a,b;Pf(a,b)}return null}function A(a,b,c,d){var e=null!==b?b.key:null;if("string"==typeof c||"number"==typeof c)return null!==e?null:h(a,b,""+c,d);if("object"==typeof c&&null!==c){switch(c.$$typeof){case $b:return c.key===e?c.type===bc?m(a,b,c.props.children,d,e):k(a,b,c,d):null;case ac:return c.key===e?l(a,b,c,d):null}if(Nf(c)||kc(c))return null!==e?null:m(a,b,c,d,null);Pf(a,c)}return null}function S(a,b,c,d,e){if("string"==typeof d||"number"==typeof d)return a=a.get(c)||null,h(b,a,""+d,e);if("object"==typeof d&&null!==d){switch(d.$$typeof){case $b:return a=a.get(null===d.key?c:d.key)||null,d.type===bc?m(b,a,d.props.children,e,d.key):k(b,a,d,e);case ac:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Nf(d)||kc(d))return a=a.get(c)||null,m(b,a,d,e,null);Pf(b,d)}return null}function B(e,g,h,k){for(var l=null,m=null,p=g,u=g=0,q=null;null!==p&&u<h.length;u++){p.index>u?(q=p,p=null):q=p.sibling;var v=A(e,p,h[u],k);if(null===v){null===p&&(p=q);break}a&&p&&null===v.alternate&&b(e,p),g=f(v,g,u),null===m?l=v:m.sibling=v,m=v,p=q}if(u===h.length)return c(e,p),l;if(null===p){for(;u<h.length;u++)(p=r(e,h[u],k))&&(g=f(p,g,u),null===m?l=p:m.sibling=p,m=p);return l}for(p=d(e,p);u<h.length;u++)(q=S(p,e,u,h[u],k))&&(a&&null!==q.alternate&&p.delete(null===q.key?u:q.key),g=f(q,g,u),null===m?l=q:m.sibling=q,m=q);return a&&p.forEach(function(a){return b(e,a)}),l}function P(e,g,h,k){var l=kc(h);"function"!=typeof l&&t("150"),null==(h=l.call(h))&&t("151");for(var m=l=null,p=g,u=g=0,q=null,v=h.next();null!==p&&!v.done;u++,v=h.next()){p.index>u?(q=p,p=null):q=p.sibling;var x=A(e,p,v.value,k);if(null===x){p||(p=q);break}a&&p&&null===x.alternate&&b(e,p),g=f(x,g,u),null===m?l=x:m.sibling=x,m=x,p=q}if(v.done)return c(e,p),l;if(null===p){for(;!v.done;u++,v=h.next())null!==(v=r(e,v.value,k))&&(g=f(v,g,u),null===m?l=v:m.sibling=v,m=v);return l}for(p=d(e,p);!v.done;u++,v=h.next())null!==(v=S(p,e,u,v.value,k))&&(a&&null!==v.alternate&&p.delete(null===v.key?u:v.key),g=f(v,g,u),null===m?l=v:m.sibling=v,m=v);return a&&p.forEach(function(a){return b(e,a)}),l}return function(a,d,f,h){var k="object"==typeof f&&null!==f&&f.type===bc&&null===f.key;k&&(f=f.props.children);var l="object"==typeof f&&null!==f;if(l)switch(f.$$typeof){case $b:a:{for(l=f.key,k=d;null!==k;){if(k.key===l){if(9===k.tag?f.type===bc:k.type===f.type){c(a,k.sibling),d=e(k,f.type===bc?f.props.children:f.props,h),d.ref=Of(a,k,f),d.return=a,a=d;break a}c(a,k);break}b(a,k),k=k.sibling}f.type===bc?(d=We(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Ve(f,a.mode,h),h.ref=Of(a,d,f),h.return=a,a=h)}return g(a);case ac:a:{for(k=f.key;null!==d;){if(d.key===k){if(6===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling),d=e(d,f.children||[],h),d.return=a,a=d;break a}c(a,d);break}b(a,d),d=d.sibling}d=Ye(f,a.mode,h),d.return=a,a=d}return g(a)}if("string"==typeof f||"number"==typeof f)return f=""+f,null!==d&&8===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=a,a=d):(c(a,d),d=Xe(f,a.mode,h),d.return=a,a=d),g(a);if(Nf(f))return B(a,d,f,h);if(kc(f))return P(a,d,f,h);if(l&&Pf(a,f),void 0===f&&!k)switch(a.tag){case 2:case 3:case 0:h=a.type,t("152",h.displayName||h.name||"Component")}return c(a,d)}}function Wf(a,b){var c=new Se(7,null,null,0);c.type="DELETED",c.stateNode=b,c.return=a,c.effectTag=8,null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function Xf(a,b){switch(a.tag){case 7:var c=a.type;return null!==(b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b)&&(a.stateNode=b,!0);case 8:return null!==(b=""===a.pendingProps||3!==b.nodeType?null:b)&&(a.stateNode=b,!0);default:return!1}}function Yf(a){if(Vf){var b=Uf;if(b){var c=b;if(!Xf(a,b)){if(!(b=Be(c))||!Xf(a,b))return a.effectTag|=2,Vf=!1,void(Tf=a);Wf(Tf,c)}Tf=a,Uf=Ce(b)}else a.effectTag|=2,Vf=!1,Tf=a}}function Zf(a){for(a=a.return;null!==a&&7!==a.tag&&5!==a.tag;)a=a.return;Tf=a}function $f(a){if(a!==Tf)return!1;if(!Vf)return Zf(a),Vf=!0,!1;var b=a.type;if(7!==a.tag||"head"!==b&&"body"!==b&&!Ae(b,a.memoizedProps))for(b=Uf;b;)Wf(a,b),b=Be(b);return Zf(a),Uf=Tf?Be(a.stateNode):null,!0}function ag(){Uf=Tf=null,Vf=!1}function bg(a){switch(a._reactStatus){case 1:return a._reactResult;case 2:throw a._reactResult;case 0:throw a;default:throw a._reactStatus=0,a.then(function(b){if(0===a._reactStatus){if(a._reactStatus=1,"object"==typeof b&&null!==b){var c=b.default;b=void 0!==c&&null!==c?c:b}a._reactResult=b}},function(b){0===a._reactStatus&&(a._reactStatus=2,a._reactResult=b)}),a}}function M(a,b,c,d){b.child=null===a?Sf(b,null,c,d):Rf(b,a.child,c,d)}function dg(a,b,c,d,e){c=c.render;var f=b.ref;return J.current||b.memoizedProps!==d||f!==(null!==a?a.ref:null)?(c=c(d,f),M(a,b,c,e),b.memoizedProps=d,b.child):eg(a,b,e)}function fg(a,b){var c=b.ref;(null===a&&null!==c||null!==a&&a.ref!==c)&&(b.effectTag|=128)}function gg(a,b,c,d,e){var f=K(c)?Ge:I.current;return f=He(b,f),uf(b,e),c=c(d,f),b.effectTag|=1,M(a,b,c,e),b.memoizedProps=d,b.child}function hg(a,b,c,d,e){if(K(c)){var f=!0;Me(b)}else f=!1;if(uf(b,e),null===a)if(null===b.stateNode){var g=K(c)?Ge:I.current,h=c.contextTypes,k=null!==h&&void 0!==h;h=k?He(b,g):Fe;var l=new c(d,h);b.memoizedState=null!==l.state&&void 0!==l.state?l.state:null,l.updater=Jf,b.stateNode=l,l._reactInternalFiber=b,k&&(k=b.stateNode,k.__reactInternalMemoizedUnmaskedChildContext=g,k.__reactInternalMemoizedMaskedChildContext=h),Mf(b,c,d,e),d=!0}else{g=b.stateNode,h=b.memoizedProps,g.props=h;var m=g.context;k=K(c)?Ge:I.current,k=He(b,k);var r=c.getDerivedStateFromProps;(l="function"==typeof r||"function"==typeof g.getSnapshotBeforeUpdate)||"function"!=typeof g.UNSAFE_componentWillReceiveProps&&"function"!=typeof g.componentWillReceiveProps||(h!==d||m!==k)&&Lf(b,g,d,k),af=!1;var A=b.memoizedState;m=g.state=A;var S=b.updateQueue;null!==S&&(kf(b,S,d,g,e),m=b.memoizedState),h!==d||A!==m||J.current||af?("function"==typeof r&&(Ff(b,c,r,d),m=b.memoizedState),(h=af||Kf(b,c,h,d,A,m,k))?(l||"function"!=typeof g.UNSAFE_componentWillMount&&"function"!=typeof g.componentWillMount||("function"==typeof g.componentWillMount&&g.componentWillMount(),"function"==typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),"function"==typeof g.componentDidMount&&(b.effectTag|=4)):("function"==typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=m),g.props=d,g.state=m,g.context=k,d=h):("function"==typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,h=b.memoizedProps,g.props=h,m=g.context,k=K(c)?Ge:I.current,k=He(b,k),r=c.getDerivedStateFromProps,(l="function"==typeof r||"function"==typeof g.getSnapshotBeforeUpdate)||"function"!=typeof g.UNSAFE_componentWillReceiveProps&&"function"!=typeof g.componentWillReceiveProps||(h!==d||m!==k)&&Lf(b,g,d,k),af=!1,m=b.memoizedState,A=g.state=m,S=b.updateQueue,null!==S&&(kf(b,S,d,g,e),A=b.memoizedState),h!==d||m!==A||J.current||af?("function"==typeof r&&(Ff(b,c,r,d),A=b.memoizedState),(r=af||Kf(b,c,h,d,m,A,k))?(l||"function"!=typeof g.UNSAFE_componentWillUpdate&&"function"!=typeof g.componentWillUpdate||("function"==typeof g.componentWillUpdate&&g.componentWillUpdate(d,A,k),"function"==typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,A,k)),"function"==typeof g.componentDidUpdate&&(b.effectTag|=4),"function"==typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):("function"!=typeof g.componentDidUpdate||h===a.memoizedProps&&m===a.memoizedState||(b.effectTag|=4),"function"!=typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&m===a.memoizedState||(b.effectTag|=256),b.memoizedProps=d,b.memoizedState=A),g.props=d,g.state=A,g.context=k,d=r):("function"!=typeof g.componentDidUpdate||h===a.memoizedProps&&m===a.memoizedState||(b.effectTag|=4),"function"!=typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&m===a.memoizedState||(b.effectTag|=256),d=!1);return ig(a,b,c,d,f,e)}function ig(a,b,c,d,e,f){fg(a,b);var g=0!=(64&b.effectTag);if(!d&&!g)return e&&Ne(b,c,!1),eg(a,b,f);d=b.stateNode,cg.current=b;var h=g?null:d.render();return b.effectTag|=1,null!==a&&g&&(M(a,b,null,f),b.child=null),M(a,b,h,f),b.memoizedState=d.state,b.memoizedProps=d.props,e&&Ne(b,c,!0),b.child}function jg(a){var b=a.stateNode;b.pendingContext?Ke(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Ke(a,b.context,!1),Af(a,b.containerInfo)}function ng(a,b){if(a&&a.defaultProps){b=n({},b),a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}function og(a,b,c,d){null!==a&&t("155");var e=b.pendingProps;if("object"==typeof c&&null!==c&&"function"==typeof c.then){c=bg(c);var f=c;f="function"==typeof f?Te(f)?3:1:void 0!==f&&null!==f&&f.$$typeof?14:4,f=b.tag=f;var g=ng(c,e);switch(f){case 1:return gg(a,b,c,g,d);case 3:return hg(a,b,c,g,d);case 14:return dg(a,b,c,g,d);default:t("283",c)}}if(f=He(b,I.current),uf(b,d),f=c(e,f),b.effectTag|=1,"object"==typeof f&&null!==f&&"function"==typeof f.render&&void 0===f.$$typeof){b.tag=2,K(c)?(g=!0,Me(b)):g=!1,b.memoizedState=null!==f.state&&void 0!==f.state?f.state:null;var h=c.getDerivedStateFromProps;return"function"==typeof h&&Ff(b,c,h,e),f.updater=Jf,b.stateNode=f,f._reactInternalFiber=b,Mf(b,c,e,d),ig(a,b,c,!0,g,d)}return b.tag=0,M(a,b,f,d),b.memoizedProps=e,b.child}function eg(a,b,c){null!==a&&(b.firstContextDependency=a.firstContextDependency);var d=b.childExpirationTime;if(0===d||d>c)return null;if(null!==a&&b.child!==a.child&&t("153"),null!==b.child){for(a=b.child,c=Ue(a,a.pendingProps,a.expirationTime),b.child=c,c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Ue(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}function pg(a,b,c){var d=b.expirationTime;if(!J.current&&(0===d||d>c)){switch(b.tag){case 5:jg(b),ag();break;case 7:Cf(b);break;case 2:K(b.type)&&Me(b);break;case 3:K(b.type._reactResult)&&Me(b);break;case 6:Af(b,b.stateNode.containerInfo);break;case 12:sf(b,b.memoizedProps.value)}return eg(a,b,c)}switch(b.expirationTime=0,b.tag){case 4:return og(a,b,b.type,c);case 0:return gg(a,b,b.type,b.pendingProps,c);case 1:var e=b.type._reactResult;return d=b.pendingProps,a=gg(a,b,e,ng(e,d),c),b.memoizedProps=d,a;case 2:return hg(a,b,b.type,b.pendingProps,c);case 3:return e=b.type._reactResult,d=b.pendingProps,a=hg(a,b,e,ng(e,d),c),b.memoizedProps=d,a;case 5:return jg(b),d=b.updateQueue,null===d&&t("282"),e=b.memoizedState,e=null!==e?e.element:null,kf(b,d,b.pendingProps,null,c),d=b.memoizedState.element,d===e?(ag(),b=eg(a,b,c)):(e=b.stateNode,(e=(null===a||null===a.child)&&e.hydrate)&&(Uf=Ce(b.stateNode.containerInfo),Tf=b,e=Vf=!0),e?(b.effectTag|=2,b.child=Sf(b,null,d,c)):(M(a,b,d,c),ag()),b=b.child),b;case 7:Cf(b),null===a&&Yf(b),d=b.type,e=b.pendingProps;var f=null!==a?a.memoizedProps:null,g=e.children;return Ae(d,e)?g=null:null!==f&&Ae(d,f)&&(b.effectTag|=16),fg(a,b),1073741823!==c&&1&b.mode&&e.hidden?(b.expirationTime=1073741823,b.memoizedProps=e,b=null):(M(a,b,g,c),b.memoizedProps=e,b=b.child),b;case 8:return null===a&&Yf(b),b.memoizedProps=b.pendingProps,null;case 16:return null;case 6:return Af(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Rf(b,null,d,c):M(a,b,d,c),b.memoizedProps=d,b.child;case 13:return dg(a,b,b.type,b.pendingProps,c);case 14:return e=b.type._reactResult,d=b.pendingProps,a=dg(a,b,e,ng(e,d),c),b.memoizedProps=d,a;case 9:return d=b.pendingProps,M(a,b,d,c),b.memoizedProps=d,b.child;case 10:return d=b.pendingProps.children,M(a,b,d,c),b.memoizedProps=d,b.child;case 15:return d=b.pendingProps,M(a,b,d.children,c),b.memoizedProps=d,b.child;case 12:a:{if(d=b.type._context,e=b.pendingProps,g=b.memoizedProps,f=e.value,b.memoizedProps=e,sf(b,f),null!==g){var h=g.value;if(0===(f=h===f&&(0!==h||1/h==1/f)||h!==h&&f!==f?0:0|("function"==typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823))){if(g.children===e.children&&!J.current){b=eg(a,b,c);break a}}else for(null!==(g=b.child)&&(g.return=b);null!==g;){if(null!==(h=g.firstContextDependency))do{if(h.context===d&&0!=(h.observedBits&f)){if(2===g.tag||3===g.tag){var k=df(c);k.tag=2,ff(g,k)}(0===g.expirationTime||g.expirationTime>c)&&(g.expirationTime=c),k=g.alternate,null!==k&&(0===k.expirationTime||k.expirationTime>c)&&(k.expirationTime=c);for(var l=g.return;null!==l;){if(k=l.alternate,0===l.childExpirationTime||l.childExpirationTime>c)l.childExpirationTime=c,null!==k&&(0===k.childExpirationTime||k.childExpirationTime>c)&&(k.childExpirationTime=c);else{if(null===k||!(0===k.childExpirationTime||k.childExpirationTime>c))break;k.childExpirationTime=c}l=l.return}}k=g.child,h=h.next}while(null!==h);else k=12===g.tag&&g.type===b.type?null:g.child;if(null!==k)k.return=g;else for(k=g;null!==k;){if(k===b){k=null;break}if(null!==(g=k.sibling)){g.return=k.return,k=g;break}k=k.return}g=k}}M(a,b,e.children,c),b=b.child}return b;case 11:return f=b.type,d=b.pendingProps,e=d.children,uf(b,c),f=vf(f,d.unstable_observedBits),e=e(f),b.effectTag|=1,M(a,b,e,c),b.memoizedProps=d,b.child;default:t("156")}}function qg(a){a.effectTag|=4}function ug(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=mc(c)),null!==c&&lc(c.type),b=b.value,null!==a&&2===a.tag&&lc(a.type)}function vg(a){var b=a.ref;if(null!==b)if("function"==typeof b)try{b(null)}catch(c){wg(a,c)}else b.current=null}function xg(a){switch("function"==typeof Pe&&Pe(a),a.tag){case 2:case 3:vg(a);var b=a.stateNode;if("function"==typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(c){wg(a,c)}break;case 7:vg(a);break;case 6:yg(a)}}function zg(a){return 7===a.tag||5===a.tag||6===a.tag}function Ag(a){a:{for(var b=a.return;null!==b;){if(zg(b)){var c=b;break a}b=b.return}t("160"),c=void 0}var d=b=void 0;switch(c.tag){case 7:b=c.stateNode,d=!1;break;case 5:case 6:b=c.stateNode.containerInfo,d=!0;break;default:t("161")}16&c.effectTag&&(oe(b,""),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||zg(c.return)){c=null;break a}c=c.return}for(c.sibling.return=c.return,c=c.sibling;7!==c.tag&&8!==c.tag;){if(2&c.effectTag)continue b;if(null===c.child||6===c.tag)continue b;c.child.return=c,c=c.child}if(!(2&c.effectTag)){c=c.stateNode;break a}}for(var e=a;;){if(7===e.tag||8===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(f=b,g=e.stateNode,8===f.nodeType?(h=f.parentNode,h.insertBefore(g,f)):(h=f,h.appendChild(g)),null===h.onclick&&(h.onclick=we)):b.appendChild(e.stateNode);else if(6!==e.tag&&null!==e.child){e.child.return=e,e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return,e=e.sibling}}function yg(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){switch(null===c&&t("160"),c.tag){case 7:d=c.stateNode,e=!1;break a;case 5:case 6:d=c.stateNode.containerInfo,e=!0;break a}c=c.return}c=!0}if(7===b.tag||8===b.tag){a:for(var f=b,g=f;;)if(xg(g),null!==g.child&&6!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return,g=g.sibling}e?(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(6===b.tag?(d=b.stateNode.containerInfo,e=!0):xg(b),null!==b.child){b.child.return=b,b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return,6===b.tag&&(c=!1)}b.sibling.return=b.return,b=b.sibling}}function Bg(a,b){switch(b.tag){case 2:case 3:break;case 7:var c=b.stateNode;if(null!=c){var d=b.memoizedProps,e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;if(b.updateQueue=null,null!==f){for(c[Ja]=d,"input"===a&&"radio"===d.type&&null!=d.name&&Cc(c,d),ue(a,e),b=ue(a,d),e=0;e<f.length;e+=2){var g=f[e],h=f[e+1];"style"===g?re(c,h):"dangerouslySetInnerHTML"===g?ne(c,h):"children"===g?oe(c,h):xc(c,g,h,b)}switch(a){case"input":Dc(c,d);break;case"textarea":he(c,d);break;case"select":a=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,f=d.value,null!=f?ee(c,!!d.multiple,f,!1):a!==!!d.multiple&&(null!=d.defaultValue?ee(c,!!d.multiple,d.defaultValue,!0):ee(c,!!d.multiple,d.multiple?[]:"",!1))}}}break;case 8:null===b.stateNode&&t("162"),b.stateNode.nodeValue=b.memoizedProps;break;case 5:case 15:case 16:break;default:t("163")}}function Cg(a,b,c){c=df(c),c.tag=3,c.payload={element:null};var d=b.value;return c.callback=function(){Dg(d),ug(a,b)},c}function Eg(a,b,c){c=df(c),c.tag=3;var d=a.stateNode;return null!==d&&"function"==typeof d.componentDidCatch&&(c.callback=function(){null===Fg?Fg=new Set([this]):Fg.add(this);var c=b.value,d=b.stack;ug(a,b),this.componentDidCatch(c,{componentStack:null!==d?d:""})}),c}function Gg(a){switch(a.tag){case 2:K(a.type)&&Ie(a);var b=a.effectTag;return 1024&b?(a.effectTag=-1025&b|64,a):null;case 3:return K(a.type._reactResult)&&Ie(a),b=a.effectTag,1024&b?(a.effectTag=-1025&b|64,a):null;case 5:return Bf(a),Je(a),b=a.effectTag,0!=(64&b)&&t("285"),a.effectTag=-1025&b|64,a;case 7:return Df(a),null;case 16:return b=a.effectTag,1024&b?(a.effectTag=-1025&b|64,a):null;case 6:return Bf(a),null;case 12:return tf(a),null;default:return null}}function Pg(){if(null!==N)for(var a=N.return;null!==a;){var b=a;switch(b.tag){case 2:var c=b.type.childContextTypes;null!==c&&void 0!==c&&Ie(b);break;case 3:c=b.type._reactResult.childContextTypes,null!==c&&void 0!==c&&Ie(b);break;case 5:Bf(b),Je(b);break;case 7:Df(b);break;case 6:Bf(b);break;case 12:tf(b)}a=a.return}Mg=null,O=0,Ng=!1,N=null}function Qg(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0==(512&a.effectTag)){var e=b;b=a;var f=b.pendingProps;switch(b.tag){case 0:case 1:break;case 2:K(b.type)&&Ie(b);break;case 3:K(b.type._reactResult)&&Ie(b);break;case 5:Bf(b),Je(b),f=b.stateNode,f.pendingContext&&(f.context=f.pendingContext,f.pendingContext=null),null!==e&&null!==e.child||($f(b),b.effectTag&=-3),rg(b);break;case 7:Df(b);var g=zf(yf.current),h=b.type;if(null!==e&&null!=b.stateNode)sg(e,b,h,f,g),e.ref!==b.ref&&(b.effectTag|=128);else if(f){var k=zf(L.current);if($f(b)){f=b,e=f.stateNode;var l=f.type,m=f.memoizedProps,r=g;switch(e[Ia]=f,e[Ja]=m,h=void 0,g=l){case"iframe":case"object":F("load",e);break;case"video":case"audio":for(l=0;l<fb.length;l++)F(fb[l],e);break;case"source":F("error",e);break;case"img":case"image":case"link":F("error",e),F("load",e);break;case"form":F("reset",e),F("submit",e);break;case"details":F("toggle",e);break;case"input":Bc(e,m),F("invalid",e),ve(r,"onChange");break;case"select":e._wrapperState={wasMultiple:!!m.multiple},F("invalid",e),ve(r,"onChange");break;case"textarea":ge(e,m),F("invalid",e),ve(r,"onChange")}te(g,m),l=null;for(h in m)m.hasOwnProperty(h)&&(k=m[h],"children"===h?"string"==typeof k?e.textContent!==k&&(l=["children",k]):"number"==typeof k&&e.textContent!==""+k&&(l=["children",""+k]):sa.hasOwnProperty(h)&&null!=k&&ve(r,h));switch(g){case"input":Wb(e),Fc(e,m,!0);break;case"textarea":Wb(e),ie(e,m);break;case"select":case"option":break;default:"function"==typeof m.onClick&&(e.onclick=we)}h=l,f.updateQueue=h,f=null!==h,f&&qg(b)}else{m=b,e=h,r=f,l=9===g.nodeType?g:g.ownerDocument,k===je.html&&(k=ke(e)),k===je.html?"script"===e?(e=l.createElement("div"),e.innerHTML="<script><\/script>",l=e.removeChild(e.firstChild)):"string"==typeof r.is?l=l.createElement(e,{is:r.is}):(l=l.createElement(e),"select"===e&&r.multiple&&(l.multiple=!0)):l=l.createElementNS(k,e),e=l,e[Ia]=m,e[Ja]=f;a:for(m=e,r=b,l=r.child;null!==l;){if(7===l.tag||8===l.tag)m.appendChild(l.stateNode);else if(6!==l.tag&&null!==l.child){l.child.return=l,l=l.child;continue}if(l===r)break;for(;null===l.sibling;){if(null===l.return||l.return===r)break a;l=l.return}l.sibling.return=l.return,l=l.sibling}r=e,l=h,m=f;var A=g,S=ue(l,m);switch(l){case"iframe":case"object":F("load",r),g=m;break;case"video":case"audio":for(g=0;g<fb.length;g++)F(fb[g],r);g=m;break;case"source":F("error",r),g=m;break;case"img":case"image":case"link":F("error",r),F("load",r),g=m;break;case"form":F("reset",r),F("submit",r),g=m;break;case"details":F("toggle",r),g=m;break;case"input":Bc(r,m),g=zc(r,m),F("invalid",r),ve(A,"onChange");break;case"option":g=de(r,m);break;case"select":r._wrapperState={wasMultiple:!!m.multiple},g=n({},m,{value:void 0}),F("invalid",r),ve(A,"onChange");break;case"textarea":ge(r,m),g=fe(r,m),F("invalid",r),ve(A,"onChange");break;default:g=m}te(l,g),k=void 0;var B=l,P=r,v=g;for(k in v)if(v.hasOwnProperty(k)){var p=v[k];"style"===k?re(P,p):"dangerouslySetInnerHTML"===k?null!=(p=p?p.__html:void 0)&&ne(P,p):"children"===k?"string"==typeof p?("textarea"!==B||""!==p)&&oe(P,p):"number"==typeof p&&oe(P,""+p):"suppressContentEditableWarning"!==k&&"suppressHydrationWarning"!==k&&"autoFocus"!==k&&(sa.hasOwnProperty(k)?null!=p&&ve(A,k):null!=p&&xc(P,k,p,S))}switch(l){case"input":Wb(r),Fc(r,m,!1);break;case"textarea":Wb(r),ie(r,m);break;case"option":null!=m.value&&r.setAttribute("value",""+yc(m.value));break;case"select":g=r,g.multiple=!!m.multiple,r=m.value,null!=r?ee(g,!!m.multiple,r,!1):null!=m.defaultValue&&ee(g,!!m.multiple,m.defaultValue,!0);break;default:"function"==typeof g.onClick&&(r.onclick=we)}(f=ze(h,f))&&qg(b),b.stateNode=e}null!==b.ref&&(b.effectTag|=128)}else null===b.stateNode&&t("166");break;case 8:e&&null!=b.stateNode?tg(e,b,e.memoizedProps,f):("string"!=typeof f&&(null===b.stateNode&&t("166")),e=zf(yf.current),zf(L.current),$f(b)?(f=b,h=f.stateNode,e=f.memoizedProps,h[Ia]=f,(f=h.nodeValue!==e)&&qg(b)):(h=b,f=(9===e.nodeType?e:e.ownerDocument).createTextNode(f),f[Ia]=h,b.stateNode=f));break;case 13:case 14:case 16:case 9:case 10:case 15:break;case 6:Bf(b),rg(b);break;case 12:tf(b);break;case 11:break;case 4:t("167");default:t("156")}if(b=N=null,f=a,1073741823===O||1073741823!==f.childExpirationTime){for(h=0,e=f.child;null!==e;)g=e.expirationTime,m=e.childExpirationTime,(0===h||0!==g&&g<h)&&(h=g),(0===h||0!==m&&m<h)&&(h=m),e=e.sibling;f.childExpirationTime=h}if(null!==b)return b;null!==c&&0==(512&c.effectTag)&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a))}else{if(null!==(a=Gg(a,O)))return a.effectTag&=511,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=512)}if(null!==d)return d;if(null===c)break;a=c}return null}function Rg(a){var b=pg(a.alternate,a,O);return null===b&&(b=Qg(a)),Ig.current=null,b}function Sg(a,b,c){Lg&&t("243"),Lg=!0,Ig.currentDispatcher=Hg;var d=a.nextExpirationTimeToWorkOn;d===O&&a===Mg&&null!==N||(Pg(),Mg=a,O=d,N=Ue(Mg.current,null,O),a.pendingCommitExpirationTime=0);for(var e=!1;;){try{if(b)for(;null!==N&&!Tg();)N=Rg(N);else for(;null!==N;)N=Rg(N)}catch(r){if(null===N)e=!0,Dg(r);else{null===N&&t("271");var f=N,g=f.return;if(null!==g){a:{var h=g,k=f,l=r;g=O,k.effectTag|=512,k.firstEffect=k.lastEffect=null,Ng=!0,l=nf(l,k);do{switch(h.tag){case 5:h.effectTag|=1024,h.expirationTime=g,g=Cg(h,l,g),gf(h,g);break a;case 2:case 3:k=l;var m=h.stateNode;if(0==(64&h.effectTag)&&null!==m&&"function"==typeof m.componentDidCatch&&(null===Fg||!Fg.has(m))){h.effectTag|=1024,h.expirationTime=g,g=Eg(h,k,g),gf(h,g);break a}}h=h.return}while(null!==h)}N=Qg(f);continue}e=!0,Dg(r)}}break}if(Lg=!1,rf=qf=pf=Ig.currentDispatcher=null,e)Mg=null,a.finishedWork=null;else if(null!==N)a.finishedWork=null;else{if(b=a.current.alternate,null===b&&t("281"),Mg=null,Ng){if(e=a.latestPendingTime,f=a.latestSuspendedTime,g=a.latestPingedTime,0!==e&&e>d||0!==f&&f>d||0!==g&&g>d)return a.didError=!1,c=a.latestPingedTime,0!==c&&c<=d&&(a.latestPingedTime=0),c=a.earliestPendingTime,b=a.latestPendingTime,c===d?a.earliestPendingTime=b===d?a.latestPendingTime=0:b:b===d&&(a.latestPendingTime=c),c=a.earliestSuspendedTime,b=a.latestSuspendedTime,0===c?a.earliestSuspendedTime=a.latestSuspendedTime=d:c>d?a.earliestSuspendedTime=d:b<d&&(a.latestSuspendedTime=d),$e(d,a),void(a.expirationTime=a.expirationTime);if(!a.didError&&!c)return a.didError=!0,a.nextExpirationTimeToWorkOn=d,d=a.expirationTime=1,void(a.expirationTime=d)}a.pendingCommitExpirationTime=d,a.finishedWork=b}}function wg(a,b){var c;a:{for(Lg&&!Og&&t("263"),c=a.return;null!==c;){switch(c.tag){case 2:case 3:var d=c.stateNode;if("function"==typeof c.type.getDerivedStateFromCatch||"function"==typeof d.componentDidCatch&&(null===Fg||!Fg.has(d))){a=nf(b,a),a=Eg(c,a,1),ff(c,a),If(c,1),c=void 0;break a}break;case 5:a=nf(b,a),a=Cg(c,a,1),ff(c,a),If(c,1),c=void 0;break a}c=c.return}5===a.tag&&(c=nf(b,a),c=Cg(a,c,1),ff(a,c),If(a,1)),c=void 0}return c}function Hf(a,b){return 0!==Kg?a=Kg:Lg?a=Og?1:O:1&b.mode?(a=Ug?2+10*(1+((a-2+15)/10|0)):2+25*(1+((a-2+500)/25|0)),null!==Mg&&a===O&&(a+=1)):a=1,Ug&&(0===Vg||a>Vg)&&(Vg=a),a}function If(a,b){a:{(0===a.expirationTime||a.expirationTime>b)&&(a.expirationTime=b);var c=a.alternate;null!==c&&(0===c.expirationTime||c.expirationTime>b)&&(c.expirationTime=b);var d=a.return;if(null===d&&5===a.tag)a=a.stateNode;else{for(;null!==d;){if(c=d.alternate,(0===d.childExpirationTime||d.childExpirationTime>b)&&(d.childExpirationTime=b),null!==c&&(0===c.childExpirationTime||c.childExpirationTime>b)&&(c.childExpirationTime=b),null===d.return&&5===d.tag){a=d.stateNode;break a}d=d.return}a=null}}null!==a&&(!Lg&&0!==O&&b<O&&Pg(),Ze(a,b),Lg&&!Og&&Mg===a||(b=a,a=a.expirationTime,null===b.nextScheduledRoot?(b.expirationTime=a,null===T?(U=T=b,b.nextScheduledRoot=b):(T=T.nextScheduledRoot=b,T.nextScheduledRoot=U)):(0===(c=b.expirationTime)||a<c)&&(b.expirationTime=a),V||(W?Wg&&(Y=b,Z=1,Xg(b,1,!0)):1===a?Yg(1,null):Zg(b,a))),$g>ah&&($g=0,t("185")))}function bh(a,b,c,d,e){var f=Kg;Kg=1;try{return a(b,c,d,e)}finally{Kg=f}}function oh(){kh=2+((ba.unstable_now()-jh)/10|0)}function Zg(a,b){if(0!==ch){if(b>ch)return;null!==dh&&ba.unstable_cancelScheduledWork(dh)}ch=b,a=ba.unstable_now()-jh,dh=ba.unstable_scheduleWork(ph,{timeout:10*(b-2)-a})}function Gf(){return V?lh:(qh(),0!==Z&&1073741823!==Z||(oh(),lh=kh),lh)}function qh(){var a=0,b=null;if(null!==T)for(var c=T,d=U;null!==d;){var e=d.expirationTime;if(0===e){if((null===c||null===T)&&t("244"),d===d.nextScheduledRoot){U=T=d.nextScheduledRoot=null;break}if(d===U)U=e=d.nextScheduledRoot,T.nextScheduledRoot=e,d.nextScheduledRoot=null;else{if(d===T){T=c,T.nextScheduledRoot=U,d.nextScheduledRoot=null;break}c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null}d=c.nextScheduledRoot}else{if((0===a||e<a)&&(a=e,b=d),d===T)break;if(1===a)break;c=d,d=d.nextScheduledRoot}}Y=b,Z=a}function ph(a){if(a.didTimeout&&null!==U){oh();var b=U;do{var c=b.expirationTime;0!==c&&kh>=c&&(b.nextExpirationTimeToWorkOn=kh),b=b.nextScheduledRoot}while(b!==U)}Yg(0,a)}function Yg(a,b){if(hh=b,qh(),null!==hh)for(oh(),lh=kh;null!==Y&&0!==Z&&(0===a||a>=Z)&&(!eh||kh>=Z);)Xg(Y,Z,kh>=Z),qh(),oh(),lh=kh;else for(;null!==Y&&0!==Z&&(0===a||a>=Z);)Xg(Y,Z,!0),qh();if(null!==hh&&(ch=0,dh=null),0!==Z&&Zg(Y,Z),hh=null,eh=!1,$g=0,mh=null,null!==ih)for(a=ih,ih=null,b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){fh||(fh=!0,gh=d)}}if(fh)throw a=gh,gh=null,fh=!1,a}function Xg(a,b,c){if(V&&t("245"),V=!0,null===hh||c){var d=a.finishedWork;null!==d?rh(a,d,b):(a.finishedWork=null,Sg(a,!1,c),null!==(d=a.finishedWork)&&rh(a,d,b))}else d=a.finishedWork,null!==d?rh(a,d,b):(a.finishedWork=null,Sg(a,!0,c),null!==(d=a.finishedWork)&&(Tg()?a.finishedWork=d:rh(a,d,b)));V=!1}function rh(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime<=c&&(null===ih?ih=[d]:ih.push(d),d._defer))return a.finishedWork=b,void(a.expirationTime=0);a.finishedWork=null,a===mh?$g++:(mh=a,$g=0),Og=Lg=!0,a.current===b&&t("177"),c=a.pendingCommitExpirationTime,0===c&&t("261"),a.pendingCommitExpirationTime=0,d=b.expirationTime;var e=b.childExpirationTime;if(d=0===d||0!==e&&e<d?e:d,a.didError=!1,0===d?(a.earliestPendingTime=0,a.latestPendingTime=0,a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0):(e=a.latestPendingTime,0!==e&&(e<d?a.earliestPendingTime=a.latestPendingTime=0:a.earliestPendingTime<d&&(a.earliestPendingTime=a.latestPendingTime)),e=a.earliestSuspendedTime,0===e?Ze(a,d):d>a.latestSuspendedTime?(a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0,Ze(a,d)):d<e&&Ze(a,d)),$e(0,a),Ig.current=null,1<b.effectTag?null!==b.lastEffect?(b.lastEffect.nextEffect=b,d=b.firstEffect):d=b:d=b.firstEffect,xe=Gd,e=Td(),Ud(e)){if("selectionStart"in e)var f={start:e.selectionStart,end:e.selectionEnd};else a:{f=(f=e.ownerDocument)&&f.defaultView||window;var g=f.getSelection&&f.getSelection();if(g&&0!==g.rangeCount){f=g.anchorNode;var h=g.anchorOffset,k=g.focusNode;g=g.focusOffset;try{f.nodeType,k.nodeType}catch(Xa){f=null;break a}var l=0,m=-1,r=-1,A=0,S=0,B=e,P=null;b:for(;;){for(var v;B!==f||0!==h&&3!==B.nodeType||(m=l+h),B!==k||0!==g&&3!==B.nodeType||(r=l+g),3===B.nodeType&&(l+=B.nodeValue.length),null!==(v=B.firstChild);)P=B,B=v;for(;;){if(B===e)break b;if(P===f&&++A===h&&(m=l),P===k&&++S===g&&(r=l),null!==(v=B.nextSibling))break;B=P,P=B.parentNode}B=v}f=-1===m||-1===r?null:{start:m,end:r}}else f=null}f=f||{start:0,end:0}}else f=null;for(ye={focusedElem:e,selectionRange:f},Gd=!1,Q=d;null!==Q;){e=!1,f=void 0;try{for(;null!==Q;){if(256&Q.effectTag){var p=Q.alternate;a:switch(h=Q,h.tag){case 2:case 3:if(256&h.effectTag&&null!==p){var u=p.memoizedProps,x=p.memoizedState,R=h.stateNode;R.props=h.memoizedProps,R.state=h.memoizedState;var yh=R.getSnapshotBeforeUpdate(u,x);R.__reactInternalSnapshotBeforeUpdate=yh}break a;case 5:case 7:case 8:case 6:break a;default:t("163")}}Q=Q.nextEffect}}catch(Xa){e=!0,f=Xa}e&&(null===Q&&t("178"),wg(Q,f),null!==Q&&(Q=Q.nextEffect))}for(Q=d;null!==Q;){p=!1,u=void 0;try{for(;null!==Q;){var w=Q.effectTag;if(16&w&&oe(Q.stateNode,""),128&w){var y=Q.alternate;if(null!==y){var q=y.ref;null!==q&&("function"==typeof q?q(null):q.current=null)}}switch(14&w){case 2:Ag(Q),Q.effectTag&=-3;break;case 6:Ag(Q),Q.effectTag&=-3,Bg(Q.alternate,Q);break;case 4:Bg(Q.alternate,Q);break;case 8:x=Q,yg(x),x.return=null,x.child=null,x.alternate&&(x.alternate.child=null,x.alternate.return=null)}Q=Q.nextEffect}}catch(Xa){p=!0,u=Xa}p&&(null===Q&&t("178"),wg(Q,u),null!==Q&&(Q=Q.nextEffect))}if(q=ye,y=Td(),w=q.focusedElem,u=q.selectionRange,y!==w&&w&&w.ownerDocument&&Sd(w.ownerDocument.documentElement,w)){null!==u&&Ud(w)&&(y=u.start,q=u.end,void 0===q&&(q=y),"selectionStart"in w?(w.selectionStart=y,w.selectionEnd=Math.min(q,w.value.length)):(p=w.ownerDocument||document,y=(p&&p.defaultView||window).getSelection(),x=w.textContent.length,q=Math.min(u.start,x),u=void 0===u.end?q:Math.min(u.end,x),!y.extend&&q>u&&(x=u,u=q,q=x),x=Rd(w,q),R=Rd(w,u),x&&R&&(1!==y.rangeCount||y.anchorNode!==x.node||y.anchorOffset!==x.offset||y.focusNode!==R.node||y.focusOffset!==R.offset)&&(p=p.createRange(),p.setStart(x.node,x.offset),y.removeAllRanges(),q>u?(y.addRange(p),y.extend(R.node,R.offset)):(p.setEnd(R.node,R.offset),y.addRange(p))))),y=[];for(q=w;q=q.parentNode;)1===q.nodeType&&y.push({element:q,left:q.scrollLeft,top:q.scrollTop});for("function"==typeof w.focus&&w.focus(),w=0;w<y.length;w++)q=y[w],q.element.scrollLeft=q.left,q.element.scrollTop=q.top}for(ye=null,Gd=!!xe,xe=null,a.current=b,Q=d;null!==Q;){d=!1,w=void 0;try{for(y=c;null!==Q;){var Sa=Q.effectTag;if(36&Sa){var oc=Q.alternate;switch(q=Q,p=y,q.tag){case 2:case 3:var X=q.stateNode;if(4&q.effectTag)if(null===oc)X.props=q.memoizedProps,X.state=q.memoizedState,X.componentDidMount();else{var Ih=oc.memoizedProps,Jh=oc.memoizedState;X.props=q.memoizedProps,X.state=q.memoizedState,X.componentDidUpdate(Ih,Jh,X.__reactInternalSnapshotBeforeUpdate)}var kg=q.updateQueue;null!==kg&&(X.props=q.memoizedProps,X.state=q.memoizedState,lf(q,kg,X,p));break;case 5:var lg=q.updateQueue;if(null!==lg){if(u=null,null!==q.child)switch(q.child.tag){case 7:u=q.child.stateNode;break;case 2:case 3:u=q.child.stateNode}lf(q,lg,u,p)}break;case 7:var Kh=q.stateNode;null===oc&&4&q.effectTag&&ze(q.type,q.memoizedProps)&&Kh.focus();break;case 8:case 6:case 15:case 16:break;default:t("163")}}if(128&Sa){var Ac=Q.ref;if(null!==Ac){var mg=Q.stateNode;switch(Q.tag){case 7:var Pd=mg;break;default:Pd=mg}"function"==typeof Ac?Ac(Pd):Ac.current=Pd}}var Lh=Q.nextEffect;Q.nextEffect=null,Q=Lh}}catch(Xa){d=!0,w=Xa}d&&(null===Q&&t("178"),wg(Q,w),null!==Q&&(Q=Q.nextEffect))}Lg=Og=!1,"function"==typeof Oe&&Oe(b.stateNode),Sa=b.expirationTime,b=b.childExpirationTime,b=0===Sa||0!==b&&b<Sa?b:Sa,0===b&&(Fg=null),a.expirationTime=b,a.finishedWork=null}function Tg(){return!!eh||!(null===hh||hh.timeRemaining()>nh)&&(eh=!0)}function Dg(a){null===Y&&t("246"),Y.expirationTime=0,fh||(fh=!0,gh=a)}function sh(a,b){var c=W;W=!0;try{return a(b)}finally{(W=c)||V||Yg(1,null)}}function th(a,b){if(W&&!Wg){Wg=!0;try{return a(b)}finally{Wg=!1}}return a(b)}function uh(a,b,c){if(Ug)return a(b,c);W||V||0===Vg||(Yg(Vg,null),Vg=0);var d=Ug,e=W;W=Ug=!0;try{return a(b,c)}finally{Ug=d,(W=e)||V||Yg(1,null)}}function vh(a){if(!a)return Fe;a=a._reactInternalFiber;a:{(2!==jd(a)||2!==a.tag&&3!==a.tag)&&t("170");var b=a;do{switch(b.tag){case 5:b=b.stateNode.context;break a;case 2:if(K(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}break;case 3:if(K(b.type._reactResult)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);t("171"),b=void 0}if(2===a.tag){var c=a.type;if(K(c))return Le(a,c,b)}else if(3===a.tag&&(c=a.type._reactResult,K(c)))return Le(a,c,b);return b}function wh(a,b,c,d,e){var f=b.current;return c=vh(c),null===b.context?b.context=c:b.pendingContext=c,b=e,e=df(d),e.payload={element:a},b=void 0===b?null:b,null!==b&&(e.callback=b),ff(f,e),If(f,d),d}function xh(a,b,c,d){var e=b.current;return e=Hf(Gf(),e),wh(a,b,c,e,d)}function zh(a){if(a=a.current,!a.child)return null;switch(a.child.tag){case 7:default:return a.child.stateNode}}function Ah(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ac,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}}function Bh(a){var b=2+25*(1+((Gf()-2+500)/25|0));b<=Jg&&(b=Jg+1),this._expirationTime=Jg=b,this._root=a,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function Ch(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function Dh(a,b,c){b=new Se(5,null,null,b?3:0),a={current:b,containerInfo:a,pendingChildren:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:c,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null},this._internalRoot=b.stateNode=a}function Eh(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}function Fh(a,b){if(b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute("data-reactroot"))),!b)for(var c;c=a.lastChild;)a.removeChild(c);return new Dh(a,!1,b)}function Gh(a,b,c,d,e){Eh(c)||t("200");var f=c._reactRootContainer;if(f){if("function"==typeof e){var g=e;e=function(){var a=zh(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{if(f=c._reactRootContainer=Fh(c,d),"function"==typeof e){var h=e;e=function(){var a=zh(f._internalRoot);h.call(a)}}th(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return zh(f._internalRoot)}function Hh(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return Eh(b)||t("200"),Ah(a,b,null,c)}var aa=__webpack_require__(0),n=__webpack_require__(20),ba=__webpack_require__(40);aa||t("227");var ea=!1,fa=null,ha=!1,ia=null,ja={onError:function(a){ea=!0,fa=a}},ma=null,na={},pa=[],qa={},sa={},ta={},ua=null,va=null,wa=null,Aa=null,Ea={injectEventPluginOrder:function(a){ma&&t("101"),ma=Array.prototype.slice.call(a),oa()},injectEventPluginsByName:function(a){var c,b=!1;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];na.hasOwnProperty(c)&&na[c]===d||(na[c]&&t("102",c),na[c]=d,b=!0)}b&&oa()}},Ha=Math.random().toString(36).slice(2),Ia="__reactInternalInstance$"+Ha,Ja="__reactEventHandlers$"+Ha,Va=!("undefined"==typeof window||!window.document||!window.document.createElement),Ya={animationend:Wa("Animation","AnimationEnd"),animationiteration:Wa("Animation","AnimationIteration"),animationstart:Wa("Animation","AnimationStart"),transitionend:Wa("Transition","TransitionEnd")},Za={},$a={};Va&&($a=document.createElement("div").style,"AnimationEvent"in window||(delete Ya.animationend.animation,delete Ya.animationiteration.animation,delete Ya.animationstart.animation),"TransitionEvent"in window||delete Ya.transitionend.transition);var bb=ab("animationend"),cb=ab("animationiteration"),db=ab("animationstart"),eb=ab("transitionend"),fb="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),gb=null,hb=null,ib=null;n(z.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!=typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=kb)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!=typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=kb)},persist:function(){this.isPersistent=kb},isPersistent:lb,destructor:function(){var b,a=this.constructor.Interface;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=lb,this._dispatchInstances=this._dispatchListeners=null}}),z.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},z.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;return n(e,c.prototype),c.prototype=e,c.prototype.constructor=c,c.Interface=n({},d.Interface,a),c.extend=d.extend,mb(c),c},mb(z);var pb=z.extend({data:null}),qb=z.extend({data:null}),rb=[9,13,27,32],sb=Va&&"CompositionEvent"in window,tb=null;Va&&"documentMode"in document&&(tb=document.documentMode);var ub=Va&&"TextEvent"in window&&!tb,vb=Va&&(!sb||tb&&8<tb&&11>=tb),wb=String.fromCharCode(32),xb={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},yb=!1,Bb=!1,Eb={eventTypes:xb,extractEvents:function(a,b,c,d){var e=void 0,f=void 0;if(sb)b:{switch(a){case"compositionstart":e=xb.compositionStart;break b;case"compositionend":e=xb.compositionEnd;break b;case"compositionupdate":e=xb.compositionUpdate;break b}e=void 0}else Bb?zb(a,c)&&(e=xb.compositionEnd):"keydown"===a&&229===c.keyCode&&(e=xb.compositionStart);return e?(vb&&"ko"!==c.locale&&(Bb||e!==xb.compositionStart?e===xb.compositionEnd&&Bb&&(f=jb()):(gb=d,hb="value"in gb?gb.value:gb.textContent,Bb=!0)),e=pb.getPooled(e,b,c,d),f?e.data=f:null!==(f=Ab(c))&&(e.data=f),Ua(e),f=e):f=null,(a=ub?Cb(a,c):Db(a,c))?(b=qb.getPooled(xb.beforeInput,b,c,d),b.data=a,Ua(b)):b=null,null===f?b:null===b?f:[f,b]}},Fb=null,Gb=null,Hb=null,Ob=!1,Qb={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0},Yb=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,Zb=/^(.*)[\\\/]/,C="function"==typeof Symbol&&Symbol.for,$b=C?Symbol.for("react.element"):60103,ac=C?Symbol.for("react.portal"):60106,bc=C?Symbol.for("react.fragment"):60107,cc=C?Symbol.for("react.strict_mode"):60108,dc=C?Symbol.for("react.profiler"):60114,ec=C?Symbol.for("react.provider"):60109,fc=C?Symbol.for("react.context"):60110,gc=C?Symbol.for("react.async_mode"):60111,hc=C?Symbol.for("react.forward_ref"):60112,ic=C?Symbol.for("react.placeholder"):60113,jc="function"==typeof Symbol&&Symbol.iterator,nc=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,pc=Object.prototype.hasOwnProperty,qc={},rc={},E={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){E[a]=new D(a,0,!1,a,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];E[b]=new D(b,1,!1,a[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(a){E[a]=new D(a,2,!1,a.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(a){E[a]=new D(a,2,!1,a,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){E[a]=new D(a,3,!1,a.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(a){E[a]=new D(a,3,!0,a,null)}),["capture","download"].forEach(function(a){E[a]=new D(a,4,!1,a,null)}),["cols","rows","size","span"].forEach(function(a){E[a]=new D(a,6,!1,a,null)}),["rowSpan","start"].forEach(function(a){E[a]=new D(a,5,!1,a.toLowerCase(),null)});var vc=/[\-:]([a-z])/g;"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(vc,wc);E[b]=new D(b,1,!1,a,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(vc,wc);E[b]=new D(b,1,!1,a,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(vc,wc);E[b]=new D(b,1,!1,a,"http://www.w3.org/XML/1998/namespace")}),E.tabIndex=new D("tabIndex",1,!1,"tabindex",null);var Gc={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}},Ic=null,Jc=null,Nc=!1;Va&&(Nc=Tb("input")&&(!document.documentMode||9<document.documentMode));var Uc={eventTypes:Gc,_isInputEventSupported:Nc,extractEvents:function(a,b,c,d){var e=b?Ma(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();if("select"===h||"input"===h&&"file"===e.type?f=Mc:Rb(e)?Nc?f=Tc:(f=Rc,g=Qc):(h=e.nodeName)&&"input"===h.toLowerCase()&&("checkbox"===e.type||"radio"===e.type)&&(f=Sc),f&&(f=f(a,b)))return Hc(f,c,d);g&&g(a,e,b),"blur"===a&&(a=e._wrapperState)&&a.controlled&&"number"===e.type&&Ec(e,"number",e.value)}},Vc=z.extend({view:null,detail:null}),Wc={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"},Zc=0,$c=0,ad=!1,bd=!1,cd=Vc.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Yc,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if("movementX"in a)return a.movementX;var b=Zc;return Zc=a.screenX,ad?"mousemove"===a.type?a.screenX-b:0:(ad=!0,0)},movementY:function(a){if("movementY"in a)return a.movementY;var b=$c;return $c=a.screenY,bd?"mousemove"===a.type?a.screenY-b:0:(bd=!0,0)}}),dd=cd.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),ed={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},fd={eventTypes:ed,extractEvents:function(a,b,c,d){var e="mouseover"===a||"pointerover"===a,f="mouseout"===a||"pointerout"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;if(e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window,f?(f=b,b=(b=c.relatedTarget||c.toElement)?Ka(b):null):f=null,f===b)return null;var g=void 0,h=void 0,k=void 0,l=void 0;"mouseout"===a||"mouseover"===a?(g=cd,h=ed.mouseLeave,k=ed.mouseEnter,l="mouse"):"pointerout"!==a&&"pointerover"!==a||(g=dd,h=ed.pointerLeave,k=ed.pointerEnter,l="pointer");var m=null==f?e:Ma(f);if(e=null==b?e:Ma(b),a=g.getPooled(h,f,c,d),a.type=l+"leave",a.target=m,a.relatedTarget=e,c=g.getPooled(k,b,c,d),c.type=l+"enter",c.target=e,c.relatedTarget=m,d=b,f&&d)a:{for(b=f,e=d,l=0,g=b;g;g=Oa(g))l++;for(g=0,k=e;k;k=Oa(k))g++;for(;0<l-g;)b=Oa(b),l--;for(;0<g-l;)e=Oa(e),g--;for(;l--;){if(b===e||b===e.alternate)break a;b=Oa(b),e=Oa(e)}b=null}else b=null;for(e=b,b=[];f&&f!==e&&(null===(l=f.alternate)||l!==e);)b.push(f),f=Oa(f);for(f=[];d&&d!==e&&(null===(l=d.alternate)||l!==e);)f.push(d),d=Oa(d);for(d=0;d<b.length;d++)Ra(b[d],"bubbled",a);for(d=f.length;0<d--;)Ra(f[d],"captured",c);return[a,c]}},gd=Object.prototype.hasOwnProperty,nd=z.extend({animationName:null,elapsedTime:null,pseudoElement:null}),od=z.extend({clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}}),pd=Vc.extend({relatedTarget:null}),rd={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},sd={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},td=Vc.extend({key:function(a){if(a.key){var b=rd[a.key]||a.key;if("Unidentified"!==b)return b}return"keypress"===a.type?(a=qd(a),13===a?"Enter":String.fromCharCode(a)):"keydown"===a.type||"keyup"===a.type?sd[a.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Yc,charCode:function(a){return"keypress"===a.type?qd(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===a.type?qd(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}}),ud=cd.extend({dataTransfer:null}),vd=Vc.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Yc}),wd=z.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),xd=cd.extend({deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in a?-a.wheelDeltaX:0},deltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),yd=[["abort","abort"],[bb,"animationEnd"],[cb,"animationIteration"],[db,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[eb,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],zd={},Ad={};[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["auxclick","auxClick"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(a){Bd(a,!0)}),yd.forEach(function(a){Bd(a,!1)});var Cd={eventTypes:zd,isInteractiveTopLevelEventType:function(a){return void 0!==(a=Ad[a])&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=Ad[a];if(!e)return null;switch(a){case"keypress":if(0===qd(c))return null;case"keydown":case"keyup":a=td;break;case"blur":case"focus":a=pd;break;case"click":if(2===c.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":a=cd;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":a=ud;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":a=vd;break;case bb:case cb:case db:a=nd;break;case eb:a=wd;break;case"scroll":a=Vc;break;case"wheel":a=xd;break;case"copy":case"cut":case"paste":a=od;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":a=dd;break;default:a=z}return b=a.getPooled(e,b,c,d),Ua(b),b}},Dd=Cd.isInteractiveTopLevelEventType,Ed=[],Gd=!0,Kd={},Ld=0,Md="_reactListenersID"+(""+Math.random()).slice(2),Vd=Va&&"documentMode"in document&&11>=document.documentMode,Wd={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Xd=null,Yd=null,Zd=null,$d=!1,be={eventTypes:Wd,extractEvents:function(a,b,c,d){var f,e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument;if(!(f=!e)){a:{e=Nd(e),f=ta.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;switch(e=b?Ma(b):window,a){case"focus":(Rb(e)||"true"===e.contentEditable)&&(Xd=e,Yd=b,Zd=null);break;case"blur":Zd=Yd=Xd=null;break;case"mousedown":$d=!0;break;case"contextmenu":case"mouseup":case"dragend":return $d=!1,ae(c,d);case"selectionchange":if(Vd)break;case"keydown":case"keyup":return ae(c,d)}return null}};Ea.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),ua=Na,va=La,wa=Ma,Ea.injectEventPluginsByName({SimpleEventPlugin:Cd,EnterLeaveEventPlugin:fd,ChangeEventPlugin:Uc,SelectEventPlugin:be,BeforeInputEventPlugin:Eb});var je={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"},me=void 0,ne=function(a){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c)})}:a}(function(a,b){if(a.namespaceURI!==je.svg||"innerHTML"in a)a.innerHTML=b;else{for(me=me||document.createElement("div"),me.innerHTML="<svg>"+b+"</svg>",b=me.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}}),pe={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qe=["Webkit","ms","Moz","O"];Object.keys(pe).forEach(function(a){qe.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1),pe[b]=pe[a]})});var se=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0}),xe=null,ye=null;new Set;var De=[],Ee=-1,Fe={},I={current:Fe},J={current:!1},Ge=Fe,Oe=null,Pe=null,af=!1,of={current:null},pf=null,qf=null,rf=null,wf={},L={current:wf},xf={current:wf},yf={current:wf},Ef=(new aa.Component).refs,Jf={isMounted:function(a){return!!(a=a._reactInternalFiber)&&2===jd(a)},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=Gf();d=Hf(d,a);var e=df(d);e.payload=b,void 0!==c&&null!==c&&(e.callback=c),ff(a,e),If(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Gf();d=Hf(d,a);var e=df(d);e.tag=1,e.payload=b,void 0!==c&&null!==c&&(e.callback=c),ff(a,e),If(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Gf();c=Hf(c,a);var d=df(c);d.tag=2,void 0!==b&&null!==b&&(d.callback=b),ff(a,d),If(a,c)}},Nf=Array.isArray,Rf=Qf(!0),Sf=Qf(!1),Tf=null,Uf=null,Vf=!1,cg=Yb.ReactCurrentOwner,rg=void 0,sg=void 0,tg=void 0;rg=function(){},sg=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;switch(zf(L.current),a=null,c){case"input":f=zc(g,f),d=zc(g,d),a=[];break;case"option":f=de(g,f),d=de(g,d),a=[];break;case"select":f=n({},f,{value:void 0}),d=n({},d,{value:void 0}),a=[];break;case"textarea":f=fe(g,f),d=fe(g,d),a=[];break;default:"function"!=typeof f.onClick&&"function"==typeof d.onClick&&(g.onclick=we)}te(c,d),g=c=void 0;var h=null;for(c in f)if(!d.hasOwnProperty(c)&&f.hasOwnProperty(c)&&null!=f[c])if("style"===c){var k=f[c];for(g in k)k.hasOwnProperty(g)&&(h||(h={}),h[g]="")}else"dangerouslySetInnerHTML"!==c&&"children"!==c&&"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(sa.hasOwnProperty(c)?a||(a=[]):(a=a||[]).push(c,null));for(c in d){var l=d[c];if(k=null!=f?f[c]:void 0,d.hasOwnProperty(c)&&l!==k&&(null!=l||null!=k))if("style"===c)if(k){for(g in k)!k.hasOwnProperty(g)||l&&l.hasOwnProperty(g)||(h||(h={}),h[g]="");for(g in l)l.hasOwnProperty(g)&&k[g]!==l[g]&&(h||(h={}),h[g]=l[g])}else h||(a||(a=[]),a.push(c,h)),h=l;else"dangerouslySetInnerHTML"===c?(l=l?l.__html:void 0,k=k?k.__html:void 0,null!=l&&k!==l&&(a=a||[]).push(c,""+l)):"children"===c?k===l||"string"!=typeof l&&"number"!=typeof l||(a=a||[]).push(c,""+l):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&(sa.hasOwnProperty(c)?(null!=l&&ve(e,c),a||k===l||(a=[])):(a=a||[]).push(c,l))}h&&(a=a||[]).push("style",h),e=a,(b.updateQueue=e)&&qg(b)}},tg=function(a,b,c,d){c!==d&&qg(b)};var Hg={readContext:vf},Ig=Yb.ReactCurrentOwner,Jg=0,Kg=0,Lg=!1,N=null,Mg=null,O=0,Ng=!1,Q=null,Og=!1,Fg=null,U=null,T=null,ch=0,dh=void 0,V=!1,Y=null,Z=0,Vg=0,eh=!1,fh=!1,gh=null,hh=null,W=!1,Wg=!1,Ug=!1,ih=null,jh=ba.unstable_now(),kh=2+(jh/10|0),lh=kh,ah=50,$g=0,mh=null,nh=1;Fb=function(a,b,c){switch(b){case"input":if(Dc(a,c),b=c.name,"radio"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;for(c=c.querySelectorAll("input[name="+JSON.stringify(""+b)+'][type="radio"]'),b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Na(d);e||t("90"),Xb(d),Dc(d,e)}}}break;case"textarea":he(a,c);break;case"select":null!=(b=c.value)&&ee(a,!!c.multiple,b,!1)}},Bh.prototype.render=function(a){this._defer||t("250"),this._hasChildren=!0,this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new Ch;return wh(a,b,null,c,d._onCommit),d},Bh.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]),b.push(a)}},Bh.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;if(this._defer&&null!==b||t("251"),this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d&&t("251"),d._next=e._next,this._next=b,a.firstBatch=this}this._defer=!1,b=c,V&&t("253"),Y=a,Z=b,Xg(a,b,!0),Yg(1,null),b=this._next,this._next=null,b=a.firstBatch=b,null!==b&&b._hasChildren&&b.render(b._children)}else this._next=null,this._defer=!1},Bh.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}},Ch.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]),b.push(a)}},Ch.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];"function"!=typeof c&&t("191",c),c()}}},Dh.prototype.render=function(a,b){var c=this._internalRoot,d=new Ch;return b=void 0===b?null:b,null!==b&&d.then(b),xh(a,c,null,d._onCommit),d},Dh.prototype.unmount=function(a){var b=this._internalRoot,c=new Ch;return a=void 0===a?null:a,null!==a&&c.then(a),xh(null,b,null,c._onCommit),c},Dh.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new Ch;return c=void 0===c?null:c,null!==c&&e.then(c),xh(b,d,a,e._onCommit),e},Dh.prototype.createBatch=function(){var a=new Bh(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime<=b;)c=d,d=d._next;a._next=d,null!==c&&(c._next=a)}return a},Lb=sh,Mb=uh,Nb=function(){V||0===Vg||(Yg(Vg,null),Vg=0)};var Mh={createPortal:Hh,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;return void 0===b&&("function"==typeof a.render?t("188"):t("268",Object.keys(a))),a=md(b),a=null===a?null:a.stateNode},hydrate:function(a,b,c){return Gh(null,a,b,!0,c)},render:function(a,b,c){return Gh(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){return(null==a||void 0===a._reactInternalFiber)&&t("38"),Gh(a,b,c,!1,d)},unmountComponentAtNode:function(a){return Eh(a)||t("40"),!!a._reactRootContainer&&(th(function(){Gh(null,null,a,!1,function(){a._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return Hh.apply(void 0,arguments)},unstable_batchedUpdates:sh,unstable_interactiveUpdates:uh,flushSync:function(a,b){V&&t("187");var c=W;W=!0;try{return bh(a,b)}finally{W=c,Yg(1,null)}},unstable_flushControlled:function(a){var b=W;W=!0;try{bh(a)}finally{(W=b)||V||Yg(1,null)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[La,Ma,Na,Ea.injectEventPluginsByName,qa,Ua,function(a){za(a,Ta)},Jb,Kb,Id,Ga]},unstable_createRoot:function(a,b){return Eh(a)||t("278"),new Dh(a,!0,null!=b&&!0===b.hydrate)}};!function(a){var b=a.findFiberByHostInstance;Re(n({},a,{findHostInstanceByFiber:function(a){return a=md(a),null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))}({findFiberByHostInstance:Ka,bundleType:0,version:"16.5.2",rendererPackageName:"react-dom"});var Nh={default:Mh},Oh=Nh&&Mh||Nh;module.exports=Oh.default||Oh},40:function(module,exports,__webpack_require__){"use strict";module.exports=__webpack_require__(41)},41:function(module,exports,__webpack_require__){"use strict";function m(){if(!e){var a=c.timesOutAt;f?n():f=!0,p(q,a)}}function r(){var a=c,b=c.next;if(c===b)c=null;else{var d=c.previous;c=d.next=b,b.previous=d}a.next=a.previous=null,(a=a.callback)(l)}function q(a){e=!0,l.didTimeout=a;try{if(a)for(;null!==c;){var b=exports.unstable_now();if(!(c.timesOutAt<=b))break;do{r()}while(null!==c&&c.timesOutAt<=b)}else if(null!==c)do{r()}while(null!==c&&0<h()-exports.unstable_now())}finally{e=!1,null!==c?m(c):f=!1}}function A(a){y=w(function(b){v(z),a(b)}),z=u(function(){x(y),a(exports.unstable_now())},100)}Object.defineProperty(exports,"__esModule",{value:!0});var y,z,c=null,e=!1,f=!1,g="object"==typeof performance&&"function"==typeof performance.now,l={timeRemaining:g?function(){var a=h()-performance.now();return 0<a?a:0}:function(){var a=h()-Date.now();return 0<a?a:0},didTimeout:!1},t=Date,u="function"==typeof setTimeout?setTimeout:void 0,v="function"==typeof clearTimeout?clearTimeout:void 0,w="function"==typeof requestAnimationFrame?requestAnimationFrame:void 0,x="function"==typeof cancelAnimationFrame?cancelAnimationFrame:void 0;if(g){var B=performance;exports.unstable_now=function(){return B.now()}}else exports.unstable_now=function(){return t.now()};var p,n,h;if("undefined"==typeof window){var C=-1;p=function(a){C=setTimeout(a,0,!0)},n=function(){clearTimeout(C)},h=function(){return 0}}else if(window._schedMock){var D=window._schedMock;p=D[0],n=D[1],h=D[2]}else{var E=null,F=!1,G=-1,H=!1,I=!1,J=0,K=33,L=33;h=function(){return J};var M="__reactIdleCallback$"+Math.random().toString(36).slice(2);window.addEventListener("message",function(a){if(a.source===window&&a.data===M){F=!1;var b=exports.unstable_now();if(a=!1,0>=J-b){if(!(-1!==G&&G<=b))return void(H||(H=!0,A(N)));a=!0}if(G=-1,b=E,E=null,null!==b){I=!0;try{b(a)}finally{I=!1}}}},!1);var N=function(a){H=!1;var b=a-J+L;b<L&&K<L?(8>b&&(b=8),L=b<K?K:b):K=b,J=a+L,F||(F=!0,window.postMessage(M,"*"))};p=function(a,b){E=a,G=b,I?window.postMessage(M,"*"):H||(H=!0,A(N))},n=function(){E=null,F=!1,G=-1}}exports.unstable_scheduleWork=function(a,b){var d=exports.unstable_now();if(b=void 0!==b&&null!==b&&null!==b.timeout&&void 0!==b.timeout?d+b.timeout:d+5e3,a={callback:a,timesOutAt:b,next:null,previous:null},null===c)c=a.next=a.previous=a,m(c);else{d=null;var k=c;do{if(k.timesOutAt>b){d=k;break}k=k.next}while(k!==c);null===d?d=c:d===c&&(c=a,m(c)),b=d.previous,b.next=d.previous=a,a.next=d,a.previous=b}return a},exports.unstable_cancelScheduledWork=function(a){var b=a.next;if(null!==b){if(b===a)c=null;else{a===c&&(c=b);var d=a.previous;d.next=b,b.previous=d}a.next=a.previous=null}}},53:function(module,exports){var global=module.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=global)},54:function(module,exports){module.exports=function(it){if("function"!=typeof it)throw TypeError(it+" is not a function!");return it}},55:function(module,exports){module.exports=function(fn,args,that){var un=void 0===that;switch(args.length){case 0:return un?fn():fn.call(that);case 1:return un?fn(args[0]):fn.call(that,args[0]);case 2:return un?fn(args[0],args[1]):fn.call(that,args[0],args[1]);case 3:return un?fn(args[0],args[1],args[2]):fn.call(that,args[0],args[1],args[2]);case 4:return un?fn(args[0],args[1],args[2],args[3]):fn.call(that,args[0],args[1],args[2],args[3])}return fn.apply(that,args)}},57:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var locale={cn:[{selector:".common-header .common-header-nav-item.demo-link",text:"案例"},{selector:".common-header .common-header-nav-item.docs-link",text:"文档"},{selector:".common-header .common-header-nav-item.theme-link",text:"主题"}],en:[{selector:".common-header .common-header-nav-item.demo-link",text:"Demo"},{selector:".common-header .common-header-nav-item.docs-link",text:"Docs"},{selector:".common-header .common-header-nav-item.theme-link",text:"Theme"}]};exports.default=locale},64:function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function HandlebarsEnvironment(helpers,partials,decorators){this.helpers=helpers||{},this.partials=partials||{},this.decorators=decorators||{},_helpers.registerDefaultHelpers(this),_decorators.registerDefaultDecorators(this)}exports.__esModule=!0,exports.HandlebarsEnvironment=HandlebarsEnvironment;var _utils=__webpack_require__(15),_exception=__webpack_require__(24),_exception2=_interopRequireDefault(_exception),_helpers=__webpack_require__(122),_decorators=__webpack_require__(130),_logger=__webpack_require__(132),_logger2=_interopRequireDefault(_logger);exports.VERSION="4.0.12";exports.COMPILER_REVISION=7;var REVISION_CHANGES={1:"<= 1.0.rc.2",2:"== 1.0.0-rc.3",3:"== 1.0.0-rc.4",4:"== 1.x.x",5:"== 2.0.0-alpha.x",6:">= 2.0.0-beta.1",7:">= 4.0.0"};exports.REVISION_CHANGES=REVISION_CHANGES;HandlebarsEnvironment.prototype={constructor:HandlebarsEnvironment,logger:_logger2.default,log:_logger2.default.log,registerHelper:function(name,fn){if("[object Object]"===_utils.toString.call(name)){if(fn)throw new _exception2.default("Arg not supported with multiple helpers");_utils.extend(this.helpers,name)}else this.helpers[name]=fn},unregisterHelper:function(name){delete this.helpers[name]},registerPartial:function(name,partial){if("[object Object]"===_utils.toString.call(name))_utils.extend(this.partials,name);else{if(void 0===partial)throw new _exception2.default('Attempting to register a partial called "'+name+'" as undefined');this.partials[name]=partial}},unregisterPartial:function(name){delete this.partials[name]},registerDecorator:function(name,fn){if("[object Object]"===_utils.toString.call(name)){if(fn)throw new _exception2.default("Arg not supported with multiple decorators");_utils.extend(this.decorators,name)}else this.decorators[name]=fn},unregisterDecorator:function(name){delete this.decorators[name]}};var log=_logger2.default.log;exports.log=log,exports.createFrame=_utils.createFrame,exports.logger=_logger2.default},93:function(module,exports,__webpack_require__){__webpack_require__(94),module.exports=__webpack_require__(29)},94:function(module,exports,__webpack_require__){var global=__webpack_require__(53),$export=__webpack_require__(95),invoke=__webpack_require__(55),partial=__webpack_require__(97),navigator=global.navigator,MSIE=!!navigator&&/MSIE .\./.test(navigator.userAgent),wrap=function(set){return MSIE?function(fn,time){return set(invoke(partial,[].slice.call(arguments,2),"function"==typeof fn?fn:Function(fn)),time)}:set};$export($export.G+$export.B+$export.F*MSIE,{setTimeout:wrap(global.setTimeout),setInterval:wrap(global.setInterval)})},95:function(module,exports,__webpack_require__){var global=__webpack_require__(53),core=__webpack_require__(29),ctx=__webpack_require__(96),$export=function(type,name,source){var key,own,out,IS_FORCED=type&$export.F,IS_GLOBAL=type&$export.G,IS_STATIC=type&$export.S,IS_PROTO=type&$export.P,IS_BIND=type&$export.B,IS_WRAP=type&$export.W,exports=IS_GLOBAL?core:core[name]||(core[name]={}),target=IS_GLOBAL?global:IS_STATIC?global[name]:(global[name]||{}).prototype;IS_GLOBAL&&(source=name);for(key in source)(own=!IS_FORCED&&target&&key in target)&&key in exports||(out=own?target[key]:source[key],exports[key]=IS_GLOBAL&&"function"!=typeof target[key]?source[key]:IS_BIND&&own?ctx(out,global):IS_WRAP&&target[key]==out?function(C){var F=function(param){return this instanceof C?new C(param):C(param)};return F.prototype=C.prototype,F}(out):IS_PROTO&&"function"==typeof out?ctx(Function.call,out):out,IS_PROTO&&((exports.prototype||(exports.prototype={}))[key]=out))};$export.F=1,$export.G=2,$export.S=4,$export.P=8,$export.B=16,$export.W=32,module.exports=$export},96:function(module,exports,__webpack_require__){var aFunction=__webpack_require__(54);module.exports=function(fn,that,length){if(aFunction(fn),void 0===that)return fn;switch(length){case 1:return function(a){return fn.call(that,a)};case 2:return function(a,b){return fn.call(that,a,b)};case 3:return function(a,b,c){return fn.call(that,a,b,c)}}return function(){return fn.apply(that,arguments)}}},97:function(module,exports,__webpack_require__){"use strict";var path=__webpack_require__(98),invoke=__webpack_require__(55),aFunction=__webpack_require__(54);module.exports=function(){for(var fn=aFunction(this),length=arguments.length,pargs=Array(length),i=0,_=path._,holder=!1;length>i;)(pargs[i]=arguments[i++])===_&&(holder=!0);return function(){var args,that=this,$$=arguments,$$len=$$.length,j=0,k=0;if(!holder&&!$$len)return invoke(fn,pargs,that);if(args=pargs.slice(),holder)for(;length>j;j++)args[j]===_&&(args[j]=$$[k++]);for(;$$len>k;)args.push($$[k++]);return invoke(fn,args,that)}}},98:function(module,exports,__webpack_require__){module.exports=__webpack_require__(29)}});