!function(modules){function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={i:moduleId,l:!1,exports:{}};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.l=!0,module.exports}var installedModules={};__webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.d=function(exports,name,getter){__webpack_require__.o(exports,name)||Object.defineProperty(exports,name,{configurable:!1,enumerable:!0,get:getter})},__webpack_require__.n=function(module){var getter=module&&module.__esModule?function(){return module.default}:function(){return module};return __webpack_require__.d(getter,"a",getter),getter},__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)},__webpack_require__.p="http://localhost:3000/build/",__webpack_require__(__webpack_require__.s=1236)}({100:function(module,exports){module.exports=function(it){return"object"==typeof it?null!==it:"function"==typeof it}},101:function(module,exports,__webpack_require__){module.exports=!__webpack_require__(639)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},12:function(module,exports,__webpack_require__){"use strict";function escapeChar(chr){return escape[chr]}function extend(obj){for(var i=1;i<arguments.length;i++)for(var key in arguments[i])Object.prototype.hasOwnProperty.call(arguments[i],key)&&(obj[key]=arguments[i][key]);return obj}function indexOf(array,value){for(var i=0,len=array.length;i<len;i++)if(array[i]===value)return i;return-1}function escapeExpression(string){if("string"!=typeof string){if(string&&string.toHTML)return string.toHTML();if(null==string)return"";if(!string)return string+"";string=""+string}return possible.test(string)?string.replace(badChars,escapeChar):string}function isEmpty(value){return!value&&0!==value||!(!isArray(value)||0!==value.length)}function createFrame(object){var frame=extend({},object);return frame._parent=object,frame}function blockParams(params,ids){return params.path=ids,params}function appendContextPath(contextPath,id){return(contextPath?contextPath+".":"")+id}exports.__esModule=!0,exports.extend=extend,exports.indexOf=indexOf,exports.escapeExpression=escapeExpression,exports.isEmpty=isEmpty,exports.createFrame=createFrame,exports.blockParams=blockParams,exports.appendContextPath=appendContextPath;var escape={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;","=":"&#x3D;"},badChars=/[&<>"'`=]/g,possible=/[&<>"'`=]/,toString=Object.prototype.toString;exports.toString=toString;var isFunction=function(value){return"function"==typeof value};isFunction(/x/)&&(exports.isFunction=isFunction=function(value){return"function"==typeof value&&"[object Function]"===toString.call(value)}),exports.isFunction=isFunction;var isArray=Array.isArray||function(value){return!(!value||"object"!=typeof value)&&"[object Array]"===toString.call(value)};exports.isArray=isArray},1236:function(module,exports,__webpack_require__){"use strict";var __assign=this&&this.__assign||Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p])}return t};Object.defineProperty(exports,"__esModule",{value:!0});var mds_1=__webpack_require__(1237),locale_1=__webpack_require__(52),utils_1=__webpack_require__(35);__webpack_require__(1238);var timers_1=__webpack_require__(1239),navTpl=__webpack_require__(1253);new(function(){function Docs(){var _this=this;this.handleSwitchPageLanguage=function(){utils_1.changePageLanguage(),_this.refresh()},this.handleSwitchContent=function(){timers_1.setTimeout(function(){_this.refresh()},0)},utils_1.initPageLanguage(),this.render(),this.bindEvent()}return Docs.prototype.getDocsFolderAndItem=function(){var _a=utils_1.getFolderAndItem(),folder=_a.folder,item=_a.item;return{folder:folder||"guide",item:item||"installation"}},Docs.prototype.renderText=function(selector,text){var selectorDom=document.querySelector(selector);selectorDom&&(selectorDom.innerHTML=text)},Docs.prototype.renderLanguage=function(){var _this=this,pageLanguageInStore=utils_1.getPageLanguage();pageLanguageInStore&&-1!==utils_1.ALL_PAGE_LANGUAGES.indexOf(pageLanguageInStore)||(pageLanguageInStore=utils_1.DEFAULT_PAGE_LANGUAGE,utils_1.setPageLanguage(pageLanguageInStore));var pageLanguageSwitchDom=document.querySelector(".common-header .page-language-switch");utils_1.ALL_PAGE_LANGUAGES.forEach(function(lang){utils_1.removeClass(pageLanguageSwitchDom,lang)}),utils_1.addClass(pageLanguageSwitchDom,pageLanguageInStore),locale_1.default&&locale_1.default[pageLanguageInStore]&&locale_1.default[pageLanguageInStore].length&&locale_1.default[pageLanguageInStore].forEach(function(o){_this.renderText(o.selector,o.text)})},Docs.prototype.renderLeftMenu=function(){var _a=this.getDocsFolderAndItem(),folder=_a.folder,item=_a.item,menuList=mds_1.default.map(function(v){var folderMatched=v.folderKey===folder;return __assign({},v,{folderDisplayName:utils_1.getNameByLanguage(v),mds:v.mds.map(function(o){var itemMatched=o.itemKey===item;return __assign({},o,{itemDisplayName:utils_1.getNameByLanguage(o),linkName:utils_1.generateHashtag(v.folderKey,o.itemKey),activeClass:folderMatched&&itemMatched?"active":""})})})});document.querySelector(".left-panel").innerHTML=navTpl({menuList:menuList})},Docs.prototype.renderContent=function(){var language=utils_1.getPageLanguage(),_a=this.getDocsFolderAndItem(),folder=_a.folder,item=_a.item,content="";try{content=__webpack_require__(1254)("./"+folder+"/"+item+"/"+language+".md")}catch(err){}document.querySelector(".right-panel").innerHTML=content},Docs.prototype.unbindEvent=function(){var pageLanguageSwitchDom=document.querySelector(".common-header .page-language-switch");pageLanguageSwitchDom&&utils_1.off(pageLanguageSwitchDom,"click",this.handleSwitchPageLanguage);var leftMenuDom=document.querySelector(".left-panel");leftMenuDom&&utils_1.undelegate(leftMenuDom,".common-nav-item","click",this.handleSwitchContent)},Docs.prototype.bindEvent=function(){var pageLanguageSwitchDom=document.querySelector(".common-header .page-language-switch");pageLanguageSwitchDom&&utils_1.on(pageLanguageSwitchDom,"click",this.handleSwitchPageLanguage);var leftMenuDom=document.querySelector(".left-panel");leftMenuDom&&utils_1.delegate(leftMenuDom,".common-nav-item","click",this.handleSwitchContent)},Docs.prototype.render=function(){this.renderLeftMenu(),this.renderLanguage(),this.renderContent()},Docs.prototype.refresh=function(){this.unbindEvent(),this.render(),this.bindEvent()},Docs}())},1237:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var mds=[{folderKey:"guide",cnName:"快速上手",enName:"Guide",mds:[{itemKey:"installation",enName:"Installation",cnName:"安装"},{itemKey:"introduction",enName:"Introduction",cnName:"简介"},{itemKey:"usage",enName:"Usage",cnName:"用法"},{itemKey:"feature",enName:"Feature",cnName:"特点"},{itemKey:"event",enName:"Event",cnName:"事件"}]},{folderKey:"api",cnName:"api",enName:"api",mds:[{itemKey:"graphApi",enName:"graphApi",cnName:"graph api"},{itemKey:"graphFuncApi",enName:"graphFuncApi",cnName:"graph 方法 api"}]}];exports.default=mds},1238:function(module,exports){},1239:function(module,exports,__webpack_require__){__webpack_require__(1240),module.exports=__webpack_require__(638)},1240:function(module,exports,__webpack_require__){var global=__webpack_require__(51),$export=__webpack_require__(1241),userAgent=__webpack_require__(1252),slice=[].slice,MSIE=/MSIE .\./.test(userAgent),wrap=function(set){return function(fn,time){var boundArgs=arguments.length>2,args=!!boundArgs&&slice.call(arguments,2);return set(boundArgs?function(){("function"==typeof fn?fn:Function(fn)).apply(this,args)}:fn,time)}};$export($export.G+$export.B+$export.F*MSIE,{setTimeout:wrap(global.setTimeout),setInterval:wrap(global.setInterval)})},1241:function(module,exports,__webpack_require__){var global=__webpack_require__(51),core=__webpack_require__(638),ctx=__webpack_require__(1242),hide=__webpack_require__(1244),has=__webpack_require__(1251),$export=function(type,name,source){var key,own,out,IS_FORCED=type&$export.F,IS_GLOBAL=type&$export.G,IS_STATIC=type&$export.S,IS_PROTO=type&$export.P,IS_BIND=type&$export.B,IS_WRAP=type&$export.W,exports=IS_GLOBAL?core:core[name]||(core[name]={}),expProto=exports.prototype,target=IS_GLOBAL?global:IS_STATIC?global[name]:(global[name]||{}).prototype;IS_GLOBAL&&(source=name);for(key in source)(own=!IS_FORCED&&target&&void 0!==target[key])&&has(exports,key)||(out=own?target[key]:source[key],exports[key]=IS_GLOBAL&&"function"!=typeof target[key]?source[key]:IS_BIND&&own?ctx(out,global):IS_WRAP&&target[key]==out?function(C){var F=function(a,b,c){if(this instanceof C){switch(arguments.length){case 0:return new C;case 1:return new C(a);case 2:return new C(a,b)}return new C(a,b,c)}return C.apply(this,arguments)};return F.prototype=C.prototype,F}(out):IS_PROTO&&"function"==typeof out?ctx(Function.call,out):out,IS_PROTO&&((exports.virtual||(exports.virtual={}))[key]=out,type&$export.R&&expProto&&!expProto[key]&&hide(expProto,key,out)))};$export.F=1,$export.G=2,$export.S=4,$export.P=8,$export.B=16,$export.W=32,$export.U=64,$export.R=128,module.exports=$export},1242:function(module,exports,__webpack_require__){var aFunction=__webpack_require__(1243);module.exports=function(fn,that,length){if(aFunction(fn),void 0===that)return fn;switch(length){case 1:return function(a){return fn.call(that,a)};case 2:return function(a,b){return fn.call(that,a,b)};case 3:return function(a,b,c){return fn.call(that,a,b,c)}}return function(){return fn.apply(that,arguments)}}},1243:function(module,exports){module.exports=function(it){if("function"!=typeof it)throw TypeError(it+" is not a function!");return it}},1244:function(module,exports,__webpack_require__){var dP=__webpack_require__(1245),createDesc=__webpack_require__(1250);module.exports=__webpack_require__(101)?function(object,key,value){return dP.f(object,key,createDesc(1,value))}:function(object,key,value){return object[key]=value,object}},1245:function(module,exports,__webpack_require__){var anObject=__webpack_require__(1246),IE8_DOM_DEFINE=__webpack_require__(1247),toPrimitive=__webpack_require__(1249),dP=Object.defineProperty;exports.f=__webpack_require__(101)?Object.defineProperty:function(O,P,Attributes){if(anObject(O),P=toPrimitive(P,!0),anObject(Attributes),IE8_DOM_DEFINE)try{return dP(O,P,Attributes)}catch(e){}if("get"in Attributes||"set"in Attributes)throw TypeError("Accessors not supported!");return"value"in Attributes&&(O[P]=Attributes.value),O}},1246:function(module,exports,__webpack_require__){var isObject=__webpack_require__(100);module.exports=function(it){if(!isObject(it))throw TypeError(it+" is not an object!");return it}},1247:function(module,exports,__webpack_require__){module.exports=!__webpack_require__(101)&&!__webpack_require__(639)(function(){return 7!=Object.defineProperty(__webpack_require__(1248)("div"),"a",{get:function(){return 7}}).a})},1248:function(module,exports,__webpack_require__){var isObject=__webpack_require__(100),document=__webpack_require__(51).document,is=isObject(document)&&isObject(document.createElement);module.exports=function(it){return is?document.createElement(it):{}}},1249:function(module,exports,__webpack_require__){var isObject=__webpack_require__(100);module.exports=function(it,S){if(!isObject(it))return it;var fn,val;if(S&&"function"==typeof(fn=it.toString)&&!isObject(val=fn.call(it)))return val;if("function"==typeof(fn=it.valueOf)&&!isObject(val=fn.call(it)))return val;if(!S&&"function"==typeof(fn=it.toString)&&!isObject(val=fn.call(it)))return val;throw TypeError("Can't convert object to primitive value")}},1250:function(module,exports){module.exports=function(bitmap,value){return{enumerable:!(1&bitmap),configurable:!(2&bitmap),writable:!(4&bitmap),value:value}}},1251:function(module,exports){var hasOwnProperty={}.hasOwnProperty;module.exports=function(it,key){return hasOwnProperty.call(it,key)}},1252:function(module,exports,__webpack_require__){var global=__webpack_require__(51),navigator=global.navigator;module.exports=navigator&&navigator.userAgent||""},1253:function(module,exports,__webpack_require__){var Handlebars=__webpack_require__(84);module.exports=(Handlebars.default||Handlebars).template({1:function(container,depth0,helpers,partials,data){var stack1,alias1=container.lambda,alias2=container.escapeExpression;return'  <div class="common-nav-folder" data-folder="'+alias2(alias1(null!=depth0?depth0.folderKey:depth0,depth0))+'">\n    <h3 class="common-nav-title">\n      '+alias2(alias1(null!=depth0?depth0.folderDisplayName:depth0,depth0))+'\n    </h3>\n    <ul class="common-nav-list">\n'+(null!=(stack1=helpers.each.call(null!=depth0?depth0:container.nullContext||{},null!=depth0?depth0.mds:depth0,{name:"each",hash:{},fn:container.program(2,data,0),inverse:container.noop,data:data}))?stack1:"")+"    </ul>\n  </div>\n"},2:function(container,depth0,helpers,partials,data){var alias1=container.lambda,alias2=container.escapeExpression;return'        <li class="common-nav-item '+alias2(alias1(null!=depth0?depth0.activeClass:depth0,depth0))+'">\n          <a class="common-nav-link" href="'+alias2(alias1(null!=depth0?depth0.linkName:depth0,depth0))+'" title="'+alias2(alias1(null!=depth0?depth0.itemDisplayName:depth0,depth0))+'">'+alias2(alias1(null!=depth0?depth0.itemDisplayName:depth0,depth0))+"</a>\n        </li>\n"},compiler:[7,">= 4.0.0"],main:function(container,depth0,helpers,partials,data){var stack1;return(null!=(stack1=helpers.each.call(null!=depth0?depth0:container.nullContext||{},null!=depth0?depth0.menuList:depth0,{name:"each",hash:{},fn:container.program(1,data,0),inverse:container.noop,data:data}))?stack1:"")+"\n\n"},useData:!0})},1254:function(module,exports,__webpack_require__){function webpackContext(req){return __webpack_require__(webpackContextResolve(req))}function webpackContextResolve(req){var id=map[req];if(!(id+1))throw new Error("Cannot find module '"+req+"'.");return id}var map={"./api/graphApi/cn.md":1255,"./api/graphFuncApi/cn.md":1256,"./guide/event/cn.md":1257,"./guide/event/en.md":1258,"./guide/feature/cn.md":1259,"./guide/feature/en.md":1260,"./guide/installation/cn.md":1261,"./guide/installation/en.md":1262,"./guide/introduction/cn.md":1263,"./guide/introduction/en.md":1264,"./guide/usage/cn.md":1265,"./guide/usage/en.md":1266};webpackContext.keys=function(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1254},1255:function(module,exports){module.exports='<h2 id="viser-graph-api">Viser-graph 组件api</h2>\n<h3 id="graph">Graph</h3>\n<h4 id="type">type</h4>\n<p>可选 tree （树状关系图）或者 graph （网状关系图）， 默认graph。最简单的示例如下：</p>\n<pre><code class="lang-javascript">const graph = {\n  <span class="hljs-class"><span class="hljs-keyword">type</span></span>: <span class="hljs-symbol">\'grap</span>h\',\n  width: <span class="hljs-number">500</span>,\n  height: <span class="hljs-number">500</span>,\n  fitView: <span class="hljs-symbol">\'c</span>c\',\n  fitViewPadding: <span class="hljs-literal">true</span>,\n  animate: <span class="hljs-literal">true</span>,\n  minZoom: <span class="hljs-number">0.2</span>,\n  maxZoom: <span class="hljs-number">10</span>,\n  data\n};\nexport <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">App</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{\n  constructor(props) {\n    <span class="hljs-keyword">super</span>(props);\n  }\n  render() {\n    <span class="hljs-keyword">return</span> (\n      &lt;div&gt;\n        &lt;<span class="hljs-type">Graph</span> {...graph}&gt;\n        &lt;/<span class="hljs-type">Graph</span>&gt;\n      &lt;/div&gt;\n    );\n  }\n}\n</code></pre>\n<h4 id="data-object-">data {object} 数据模型 必选</h4>\n<p>格式：\ntype为graph 、 tree的数据格式是不一样的。</p>\n<pre><code class="lang-javascript"><span class="hljs-comment">// type === graph</span>\n{\n<span class="hljs-symbol">  nodes:</span>[],\n<span class="hljs-symbol">  edges:</span>[],\n<span class="hljs-symbol">  groups:</span> [],\n}\n<span class="hljs-comment">// type === tree</span>\n{\n<span class="hljs-symbol">  roots:</span>[]\n}\n</code></pre>\n<p>nodes：节点的数据模型</p>\n<pre><code class="lang-javascript">{\n  <span class="hljs-attribute">id</span>: <span class="hljs-string">\'node1\'</span>,             <span class="hljs-comment">// id 必须唯一</span>\n  <span class="hljs-attribute">x</span>: number,            <span class="hljs-comment">// 横向位置</span>\n  <span class="hljs-attribute">y</span>: number,           <span class="hljs-comment">// 纵向位置</span>\n  <span class="hljs-attribute">color</span>: <span class="hljs-string">\'#333\'</span>,           <span class="hljs-comment">// 颜色</span>\n  <span class="hljs-attribute">size</span>: <span class="hljs-number">10</span> || [<span class="hljs-number">10</span>, <span class="hljs-number">10</span>],    <span class="hljs-comment">// 尺寸 || [宽, 高]</span>\n  <span class="hljs-attribute">shape</span>: <span class="hljs-string">\'circle\'</span>,         <span class="hljs-comment">// 所用图形（目前只测验了circle可用）</span>\n  <span class="hljs-attribute">style</span>: {                 <span class="hljs-comment">// 关键形样式（优先级高于color）</span>\n    <span class="hljs-attribute">fill</span>: <span class="hljs-string">\'red\'</span>,\n      <span class="hljs-attribute">stroke</span>: <span class="hljs-string">\'blue\'</span>\n  },\n  <span class="hljs-attribute">label</span>: <span class="hljs-string">\'文本标签\'</span> || {     <span class="hljs-comment">// 文本标签 || 文本图形配置</span>\n    <span class="hljs-attribute">text</span>: <span class="hljs-string">\'文本标签\'</span>,\n      <span class="hljs-attribute">fill</span>: <span class="hljs-string">\'green\'</span>\n  },\n  <span class="hljs-attribute">parent</span>: <span class="hljs-string">\'group1\'</span>,         <span class="hljs-comment">// 所属组</span>\n  <span class="hljs-attribute">index</span>: <span class="hljs-number">1</span>,                 <span class="hljs-comment">// 渲染层级（暂未测试）</span>\n}\n</code></pre>\n<p>edges：边的数据模型</p>\n<pre><code class="lang-javascript">{\n  <span class="hljs-attribute">id</span>: <span class="hljs-string">\'edge1\'</span>,           <span class="hljs-comment">// id 必须唯一</span>\n  <span class="hljs-attribute">source</span>: <span class="hljs-string">\'node1\'</span>,       <span class="hljs-comment">// 源节点 id</span>\n  <span class="hljs-attribute">target</span>: <span class="hljs-string">\'node2\'</span>,       <span class="hljs-comment">// 目标节点 id</span>\n  <span class="hljs-attribute">controlPoints</span>: [{      <span class="hljs-comment">// 控制点</span>\n    <span class="hljs-attribute">x</span>: <span class="hljs-number">10</span>,\n      <span class="hljs-attribute">y</span>: <span class="hljs-number">10</span>\n  }],\n  <span class="hljs-attribute">sourceAnchor</span>: <span class="hljs-number">0</span>,       <span class="hljs-comment">// 源节点锚点（以上锚点测试为填写后将不会与其他点连接，具体作用未知）</span>\n  <span class="hljs-attribute">targetAnchor</span>: <span class="hljs-number">2</span>,       <span class="hljs-comment">// 目标节点锚点（以上锚点测试为填写后将不会与其他点连接，具体作用未知）</span>\n  <span class="hljs-attribute">color</span>: <span class="hljs-string">\'red\'</span>,          <span class="hljs-comment">// 颜色</span>\n  <span class="hljs-attribute">size</span>: <span class="hljs-number">3</span>,               <span class="hljs-comment">// 尺寸</span>\n  <span class="hljs-attribute">shape</span>: <span class="hljs-string">\'line\'</span>,         <span class="hljs-comment">// 所用图形（目前只测验了line可用）, 引入插件-二阶贝塞尔曲线 ， 可使用shape: quadraticCurve</span>\n  <span class="hljs-attribute">style</span>: {               <span class="hljs-comment">// 关键形样式（优先级高于color）</span>\n      <span class="hljs-attribute">stroke</span>: <span class="hljs-string">\'blue\'</span>\n  },\n  <span class="hljs-attribute">label</span>: <span class="hljs-string">\'文本标签\'</span> || {   <span class="hljs-comment">// 文本标签 || 文本图形配置</span>\n    <span class="hljs-attribute">text</span>: <span class="hljs-string">\'文本标签\'</span>,\n      <span class="hljs-attribute">fill</span>: <span class="hljs-string">\'green\'</span>\n  },\n  <span class="hljs-attribute">parent</span>: <span class="hljs-string">\'group1\'</span>,       <span class="hljs-comment">// 所属组</span>\n  <span class="hljs-attribute">index</span>: <span class="hljs-number">1</span>,               <span class="hljs-comment">// 渲染层级</span>\n}\n</code></pre>\n<p>groups：群组的数据模型</p>\n<pre><code class="lang-javascript">{\n  <span class="hljs-attribute">id</span>: <span class="hljs-string">\'group1\'</span>,             <span class="hljs-comment">// id 必须唯一</span>\n  <span class="hljs-attribute">color</span>: <span class="hljs-string">\'#333\'</span>,           <span class="hljs-comment">// 颜色</span>\n  <span class="hljs-attribute">size</span>: <span class="hljs-number">10</span> || [<span class="hljs-number">10</span>, <span class="hljs-number">10</span>],    <span class="hljs-comment">// 尺寸 || [宽, 高], 参数不可用</span>\n  <span class="hljs-attribute">shape</span>: <span class="hljs-string">\'circle\'</span>,         <span class="hljs-comment">// 所用图形, 参数不可用</span>\n  <span class="hljs-attribute">style</span>: {                 <span class="hljs-comment">// 关键形样式（优先级高于color）</span>\n    <span class="hljs-attribute">fill</span>: <span class="hljs-string">\'red\'</span>,\n      <span class="hljs-attribute">stroke</span>: <span class="hljs-string">\'blue\'</span>\n  },\n  <span class="hljs-attribute">label</span>: <span class="hljs-string">\'文本标签\'</span> || {     <span class="hljs-comment">// 文本标签 || 文本图形配置</span>\n    <span class="hljs-attribute">text</span>: <span class="hljs-string">\'文本标签\'</span>,\n      <span class="hljs-attribute">fill</span>: <span class="hljs-string">\'green\'</span>\n  },\n  <span class="hljs-attribute">parent</span>: <span class="hljs-string">\'group2\'</span>,         <span class="hljs-comment">// 所属组</span>\n  <span class="hljs-attribute">index</span>: <span class="hljs-number">1</span>,                 <span class="hljs-comment">// 渲染层级</span>\n}\n</code></pre>\n<p> roots: type为tree时, data数据模型</p>\n<pre><code class="lang-javascript"> [\n    {\n      id: <span class="hljs-string">\'root\'</span>,                    <span class="hljs-comment">// 根节点 id</span>\n      <span class="hljs-built_in">color</span>: <span class="hljs-string">\'#333\'</span>,                 <span class="hljs-comment">// 颜色</span>\n      <span class="hljs-built_in">size</span>: <span class="hljs-number">10</span> || [<span class="hljs-number">10</span>, <span class="hljs-number">10</span>],          <span class="hljs-comment">// 尺寸 || [宽, 高]</span>\n      <span class="hljs-built_in">shape</span>: <span class="hljs-string">\'circle\'</span>,               <span class="hljs-comment">//  所用图形</span>\n      style: {                       <span class="hljs-comment">// 样式 (优先级高于 color)</span>\n        <span class="hljs-built_in">fill</span>: <span class="hljs-string">\'red\'</span>,\n        <span class="hljs-built_in">stroke</span>: <span class="hljs-string">\'blue\'</span>\n      },\n      label: <span class="hljs-string">\'文本标签\'</span> || {           <span class="hljs-comment">// 文本标签 || 文本图形配置</span>\n        <span class="hljs-built_in">text</span>: <span class="hljs-string">\'文本标签\'</span>,\n        <span class="hljs-built_in">fill</span>: <span class="hljs-string">\'green\'</span>\n      },\n      parent: <span class="hljs-string">\'parentId\'</span>,            <span class="hljs-comment">// 父节点 id</span>\n      collapsed: <span class="hljs-keyword">false</span>,              <span class="hljs-comment">// 是否折叠 默认false</span>\n      index: <span class="hljs-number">1</span>,                      <span class="hljs-comment">// 渲染层级</span>\n      children: [{                   <span class="hljs-comment">// 子元素集 （自元素数据模型和根节点同构）</span>\n        id: <span class="hljs-string">\'leaf\'</span>,\n      }],\n    }\n  ]\n</code></pre>\n<h4 id="container">container</h4>\n<p>需传入 dom 容器或者容器id {domObject || string} 必选</p>\n<h4 id="width">width</h4>\n<p>画布宽，单位像素 {number} 可选</p>\n<h4 id="height">height</h4>\n<p>画布宽，单位像素 {number} 可选</p>\n<h4 id="fitview">fitview</h4>\n<p>初始化视口区域 {string} 可选\n候选值为： &#39;tl&#39;, &#39;lc&#39;, &#39;bl&#39;, &#39;cc&#39;, &#39;tc&#39;, &#39;tr&#39;, &#39;rc&#39;, &#39;br&#39;, &#39;bc&#39;, &#39;autoZoom&#39;</p>\n<p><img src="//cdn.nlark.com/lark/0/2018/png/124533/1532954651334-8286b350-7e04-4b56-84ec-fc0182e1bf32.png" width="300px"/></p>\n<h4 id="fitviewpadding">fitViewPadding</h4>\n<p>视口适应画布边距 {boolean | number | number[]} 可选\n<img src="//cdn.nlark.com/lark/0/2018/png/1140/1533632218107-1822dab0-9499-41cb-8fb4-cfb4843637ec.png" width="300px"/></p>\n<h4 id="animate">animate</h4>\n<p>是否开启动画 {boolean} 默认false</p>\n<h4 id="minzoom">minZoom</h4>\n<p>最小缩放倍率 {number} 默认为0.2</p>\n<h4 id="maxzoom">maxZoom</h4>\n<p>最大缩放倍率 {number} 默认为10</p>\n<h4 id="plugins">plugins</h4>\n<p>插件集 {array} 用于扩展 layout 或者映射关系，示例如下</p>\n<pre><code><span class="hljs-comment">// 插件-布局-阿基米德螺线</span>\n<span class="hljs-keyword">var</span> <span class="hljs-keyword">Plugin</span> = G6.Plugins[<span class="hljs-string">"layout.circle"</span>];\n<span class="hljs-comment">// 插件-布局-圆形</span>\n<span class="hljs-keyword">var</span> <span class="hljs-keyword">Plugin</span> = G6.Plugins[<span class="hljs-string">"layout.archimeddeanSpiral"</span>];\n<span class="hljs-comment">// 插件-模版-最大生成森林</span>\n<span class="hljs-keyword">var</span> <span class="hljs-keyword">Plugin</span> = G6.Plugins[<span class="hljs-string">"template.maxSpanningForest"</span>];\n<span class="hljs-comment">// 插件-缩略图</span>\n<span class="hljs-keyword">var</span> <span class="hljs-keyword">Plugin</span> = G6.Plugins[<span class="hljs-string">"tool.minimap"</span>];\n<span class="hljs-keyword">var</span> <span class="hljs-keyword">plugin</span> = new <span class="hljs-keyword">Plugin</span>({\n  container: \'minimap\',\n  width: 180,\n  height: 120\n});\n\n<span class="hljs-keyword">var</span> <span class="hljs-keyword">graph</span> = new G6.<span class="hljs-keyword">Graph</span>({\n  container: \'mountNode\',\n  fitView: \'<span class="hljs-keyword">cc</span>\',\n  height: <span class="hljs-keyword">window</span>.innerHeight,\n  plugins: [new <span class="hljs-keyword">Plugin</span>()]\n});\n\n</code></pre><h4 id="layout">layout</h4>\n<p>布局参数 {object|function}\n详见方法中的layouts</p>\n<h4 id="-">事件</h4>\n<pre><code class="lang-javascript">  <span class="hljs-keyword">const</span> graph = {\n    <span class="hljs-attr">type</span>: <span class="hljs-string">\'graph\'</span>,\n    data,\n    <span class="hljs-attr">onClick</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">ev, graph</span>) </span>{\n      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'click\'</span>, ev, graph);\n    }\n  };\n</code></pre>\n<pre><code>  onClick?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 鼠标单击</span>\n  onAfterchange?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 数据改变后</span>\n  onMousedown?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 鼠标按下</span>\n  onMousemove?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 鼠标移动</span>\n  onMouseleave?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 鼠标离开画布区域</span>\n  onMouseup?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 鼠标抬起</span>\n  onDblclick?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 鼠标双击</span>\n  onTouchstart?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 手指触摸</span>\n  onTouchmove?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 手指移动</span>\n  onTouchend?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 手指离开</span>\n  onPlotenter?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 进入图表时</span>\n  onPlotmove?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 在图表上移动时</span>\n  onPlotleave?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 从图表离开时</span>\n  onPlotclick?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 单击图表时</span>\n  onPlotdblclick?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 双击图表时</span>\n  onDragstart?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 开始拖动时</span>\n  onDrag?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 拖动中</span>\n  onDragend?: <span class="hljs-function"><span class="hljs-keyword">func</span>; 拖动结束时</span>\n</code></pre><h4 id="-">事件回调函数参数</h4>\n<p>ev:  dom节点相关信息\ngraph:  配置参数相关信息</p>\n<h3 id="zoom-">zoom画布缩放</h3>\n<h4 id="min-number-">min?: number;</h4>\n<p>最小缩放比率</p>\n<h4 id="max-number-">max?: number;</h4>\n<p>最大缩放比率</p>\n<h4 id="current-number-">current?: number;</h4>\n<p>当前缩放比率</p>\n<pre><code class="lang-javascript"><span class="hljs-keyword">const</span> zoom = {\n  <span class="hljs-attr">max</span>: <span class="hljs-number">10</span>,\n  <span class="hljs-attr">min</span>: <span class="hljs-number">1</span>,\n  <span class="hljs-attr">current</span>: <span class="hljs-number">2</span>\n}\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">App</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{\n  <span class="hljs-keyword">constructor</span>(props) {\n    <span class="hljs-keyword">super</span>(props);\n  }\n  render() {\n    <span class="hljs-keyword">return</span> (\n      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Graph</span> {<span class="hljs-attr">...graph</span>}&gt;</span>\n           <span class="hljs-tag">&lt;<span class="hljs-name">Zoom</span> {<span class="hljs-attr">...zoom</span>} /&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">Graph</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    );\n  }\n}</span>\n</code></pre>\n<h3 id="node">Node</h3>\n<h4 id="shape-string-">shape?: string;</h4>\n<p>节点形状</p>\n<h4 id="size-number-">size?: number;</h4>\n<p>节点大小</p>\n<h4 id="label-obj-any-">label?: (obj: any) =&gt; {};</h4>\n<p>节点文本</p>\n<h4 id="style-any-">style?: any;</h4>\n<p>节点样式</p>\n<pre><code class="lang-javascript"><span class="hljs-keyword">const</span> node = {\n  <span class="hljs-attr">shape</span>: <span class="hljs-string">\'treeNode\'</span>,\n  <span class="hljs-attr">size</span>: <span class="hljs-number">8</span>,\n  <span class="hljs-attr">label</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">obj</span>) </span>{\n      <span class="hljs-keyword">return</span> obj.name;\n  },\n    <span class="hljs-attr">style</span>: {                \n    <span class="hljs-attr">fill</span>: <span class="hljs-string">\'red\'</span>,\n      <span class="hljs-attr">stroke</span>: <span class="hljs-string">\'blue\'</span>\n  },\n};\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">App</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{\n  <span class="hljs-keyword">constructor</span>(props) {\n    <span class="hljs-keyword">super</span>(props);\n  }\n  render() {\n    <span class="hljs-keyword">return</span> (\n      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Graph</span> {<span class="hljs-attr">...graph</span>}&gt;</span>\n           <span class="hljs-tag">&lt;<span class="hljs-name">Node</span> {<span class="hljs-attr">...node</span>} /&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">Graph</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    );\n  }\n}</span>\n</code></pre>\n<h3 id="edge">Edge</h3>\n<h4 id="shape-string-">shape?: string;边形状</h4>\n<h4 id="style-any-">style?: any;边样式</h4>\n<pre><code class="lang-javascript"><span class="hljs-keyword">const</span> edge = {\n  <span class="hljs-attr">shape</span>: <span class="hljs-string">\'smooth\'</span>,\n    <span class="hljs-attr">style</span>: {\n      <span class="hljs-attr">stroke</span>: <span class="hljs-string">\'blue\'</span>\n  }\n};\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">App</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{\n  <span class="hljs-keyword">constructor</span>(props) {\n    <span class="hljs-keyword">super</span>(props);\n  }\n  render() {\n    <span class="hljs-keyword">return</span> (\n      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Graph</span> {<span class="hljs-attr">...graph</span>}&gt;</span>\n           <span class="hljs-tag">&lt;<span class="hljs-name">Edge</span> {<span class="hljs-attr">...Edge</span>} /&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">Graph</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    );\n  }\n}</span>\n</code></pre>\n<p>详细可见： <a href="https://antv.alipay.com/zh-cn/g6/1.x/api/graph.html">https://antv.alipay.com/zh-cn/g6/1.x/api/graph.html</a></p>\n'},1256:function(module,exports){module.exports='<h2 id="viser-graph-api">Viser-graph 方法Api</h2>\n<h3 id="layouts">Layouts</h3>\n<p>Layouts 提供如下集中布局，同时也支持自定义布局</p>\n<h4 id="-layouts-compactboxtree">紧凑树 Layouts.CompactBoxTree</h4>\n<pre><code class="lang-javascript"><span class="hljs-keyword">var</span> layout = <span class="hljs-keyword">new</span> Layouts.CompactBoxTree({\n    <span class="hljs-comment">// direction: \'LR\', // 方向（LR/RL/H/TB/BT/V）</span>\n    getHGap: <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getHGap</span><span class="hljs-params">()</span> </span>{\n        <span class="hljs-keyword">return</span> <span class="hljs-number">100</span>; <span class="hljs-comment">// 横向间距</span>\n    },\n    getVGap: <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getVGap</span><span class="hljs-params">()</span> </span>{\n        <span class="hljs-keyword">return</span> <span class="hljs-number">10</span>;      <span class="hljs-comment">// 竖向间距</span>\n    }\n});\n</code></pre>\n<p><img src="//cdn.nlark.com/lark/0/2018/png/124533/1533110599036-a9c03524-6ddd-4ffb-a498-4c6b328e64cf.png" width="500px"/></p>\n<h4 id="-layouts-dendrogram">系统树 Layouts.Dendrogram</h4>\n<pre><code class="lang-javascript"><span class="hljs-keyword">var</span> layout = <span class="hljs-keyword">new</span> Layouts.Dendrogram({\n  <span class="hljs-string">"direction"</span>: <span class="hljs-string">"LR"</span>,\n  <span class="hljs-string">"nodeSize"</span>: <span class="hljs-number">20</span>,\n  <span class="hljs-string">"rankSep"</span>: <span class="hljs-number">400</span>\n});\n</code></pre>\n<p><img src="//cdn.nlark.com/lark/0/2018/png/124533/1533110637920-cc576981-0da8-4b86-a362-8a1d85fa2489.png" width="500px"/></p>\n<h4 id="-layouts-indentedtree">生态树 Layouts.IndentedTree</h4>\n<pre><code class="lang-javascript"><span class="hljs-keyword">var</span> layout = <span class="hljs-keyword">new</span> Layouts.IndentedTree({\n  direction: <span class="hljs-string">\'LR\'</span>, <span class="hljs-comment">// 方向（LR/RL/H）</span>\n  indent: <span class="hljs-number">30</span>, <span class="hljs-comment">// 缩进量</span>\n  getVGap: <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getVGap</span><span class="hljs-params">()</span> </span>{\n    <span class="hljs-keyword">return</span> <span class="hljs-number">4</span>;      <span class="hljs-comment">// 竖向间距</span>\n  }\n});\n</code></pre>\n<p><img src="//cdn.nlark.com/lark/0/2018/png/124533/1533110689020-a0719ae1-30b2-4565-b2bd-21a2e3accc46.png" width="300px"/></p>\n<h4 id="-layouts-mindmap">脑图：Layouts.Mindmap</h4>\n<pre><code class="lang-javascript"><span class="hljs-keyword">var</span> layout = <span class="hljs-keyword">new</span> Layouts.Mindmap({\n  direction: <span class="hljs-string">\'H\'</span>, <span class="hljs-comment">// 方向（LR/RL/H/TB/BT/V）</span>\n  getHGap: <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getHGap</span><span class="hljs-params">()</span> </span>{\n    <span class="hljs-keyword">return</span> <span class="hljs-number">100</span>;  <span class="hljs-comment">// 横向间距</span>\n  },\n  getVGap: <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getVGap</span><span class="hljs-params">()</span> </span>{\n    <span class="hljs-keyword">return</span> <span class="hljs-number">10</span>; <span class="hljs-comment">// 竖向间距</span>\n  }\n});\n</code></pre>\n<p><img src="//cdn.nlark.com/lark/0/2018/png/124533/1533110746761-1770f71e-aa46-4da4-a8fb-d8b2e7c3be29.png" width="500px"/></p>\n<h4 id="layout-">Layout公共参数列表</h4>\n<pre><code>direction [String] 树布局的方向，默认为LR，可选值为 LR（根节点在左，往右布局） RL（根节点在右，往左布局） H（根节点在中间，水平对称布局）\n   TB（根节点在上，往下布局） BT（根节点在下，往上布局） V（根节点在中间，垂直对称布局）\n   Layout.IndentedTree只有前三个方向，也就是LR／RL／H\ngetHGap [<span class="hljs-function"><span class="hljs-keyword">Function</span></span>|<span class="hljs-keyword">Number</span>] 横向间距，默认<span class="hljs-number">18</span>\ngetVGap [<span class="hljs-function"><span class="hljs-keyword">Function</span></span>|<span class="hljs-keyword">Number</span>] 竖向间距，默认<span class="hljs-number">18</span>\n</code></pre><h4 id="-">特殊参数列表</h4>\n<p>系统树 Dendrogram</p>\n<pre><code>nodeSep  [<span class="hljs-function"><span class="hljs-keyword">Function</span></span>|<span class="hljs-keyword">Number</span>] 节点间距\nnodeSize  [<span class="hljs-function"><span class="hljs-keyword">Function</span></span>|<span class="hljs-keyword">Number</span>] 节点大小\nrankSep  层级间距\nsubTreeSep   子树间隔\n</code></pre><p>生态树 IndentedTree</p>\n<pre><code>indent  [<span class="hljs-function"><span class="hljs-keyword">Function</span></span>|<span class="hljs-keyword">Number</span>] 缩进量\n</code></pre><p>详细可见： <a href="https://antv.alipay.com/zh-cn/g6/1.x/api/layouts.html">https://antv.alipay.com/zh-cn/g6/1.x/api/layouts.html</a></p>\n<h3 id="registernode">registerNode</h3>\n<p>注册新节点</p>\n<pre><code><span class="hljs-regexp">//</span> 普通节点\nregisterNode(name, {\n  draw: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  drawKeyShape:<span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  drawLabel: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  getSize: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  getColor:<span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  getStyle: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  getPath:<span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  getLabel: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  afterDraw: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  enterAnimate: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  leaveAnimate: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  drawText: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  getText: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  anchor: [\n    [ <span class="hljs-number">0</span>, <span class="hljs-number">0.5</span> ],\n    [ <span class="hljs-number">1</span>, <span class="hljs-number">0.5</span> ]\n  ],\n  anchor: {\n    type: <span class="hljs-string">\'rect\'</span>\n  },\n});\n<span class="hljs-regexp">//</span> html节点\nregisterNode(<span class="hljs-string">\'html\'</span>, {\n  cssSize: <span class="hljs-literal">true</span>,\n  draw: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  getHtml: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n});\nregisterNode(<span class="hljs-string">\'treeNode\'</span>, {\n    anchor: [[<span class="hljs-number">0</span>, <span class="hljs-number">0.5</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">0.5</span>]]\n});\n</code></pre><h3 id="registeredge">registerEdge</h3>\n<p>注册边</p>\n<pre><code>registerEdge(name, {\n  draw: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  drawKeyShape:<span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  drawLabel: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  getSize: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  getColor:<span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  getStyle: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  getPath:<span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  getLabel: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  afterDraw:  <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n});\n</code></pre><p>示例：</p>\n<pre><code>registerEdge(<span class="hljs-symbol">\'smooth</span>\', {\n  getPath: <span class="hljs-keyword">function</span> <span class="hljs-title">getPath</span>(item) {\n    var points = item.getPoints();\n    var start = points[<span class="hljs-number">0</span>];\n    var <span class="hljs-keyword">end</span> = points[points.length - <span class="hljs-number">1</span>];\n    var hgap = Math.<span class="hljs-keyword">abs</span>(<span class="hljs-keyword">end</span>.x - start.x);\n    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">end</span>.x &gt; start.x) {\n        <span class="hljs-keyword">return</span> [[<span class="hljs-string">\'M\'</span>, start.x, start.y], [<span class="hljs-string">\'C\'</span>, start.x + hgap / <span class="hljs-number">4</span>, start.y, <span class="hljs-keyword">end</span>.x - hgap / <span class="hljs-number">2</span>, <span class="hljs-keyword">end</span>.y, <span class="hljs-keyword">end</span>.x, <span class="hljs-keyword">end</span>.y]];\n    }\n    <span class="hljs-keyword">return</span> [[<span class="hljs-string">\'M\'</span>, start.x, start.y], [<span class="hljs-string">\'C\'</span>, start.x - hgap / <span class="hljs-number">4</span>, start.y, <span class="hljs-keyword">end</span>.x + hgap / <span class="hljs-number">2</span>, <span class="hljs-keyword">end</span>.y, <span class="hljs-keyword">end</span>.x, <span class="hljs-keyword">end</span>.y]];\n  }\n});\n</code></pre><h3 id="registergroup">registerGroup</h3>\n<p>注册组</p>\n<pre><code>registerGroup(name, {\n  draw: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  drawKeyShape:<span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  drawLabel: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  drawExpanded:  <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  drawCollapsed:  <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n  getLabel: <span class="hljs-function"><span class="hljs-params">(item)</span> =&gt;</span>{},\n});\n</code></pre>'},1257:function(module,exports){module.exports='<h2 id="-">简介</h2>\n<p>图表交互是打通人与冰冷数据的桥梁，viser 提供一系列的交互事件，帮助实现图表数据的二次呈现，比如下钻上卷。我们一共支持共14种事件。</p>\n<ul>\n<li>鼠标移动事件： onMouseDown,onMouseMove,onMouseLeave,onMouseUp,</li>\n<li>鼠标点击事件： onClick,onDbClick,</li>\n<li>移动端事件： onTouchStart,onTouchMove,onTouchEnd,</li>\n<li>图表区域事件： onPlotEnter,onPlotMove,onPlotLeave,onPlotClick,onPlotDbClick</li>\n</ul>\n<p>除此之外，axis,legend 标签有部分特殊事件。</p>\n<p>事件的回调函数提供 事件 event 和 图表实例 chart 两个参数，方便用户获取事件源及数据 ，并对图表实例做相应的处理。</p>\n<p>下面我们来了解下每个标签具体支持哪些事件把。</p>\n<h2 id="-">标签及支持的事件</h2>\n<h3 id="-chart">图表 Chart</h3>\n<p>图表标签 chart 支持</p>\n<ul>\n<li>鼠标移动事件： onMouseDown,onMouseMove,onMouseLeave,onMouseUp,</li>\n<li>鼠标点击事件： onClick,onDbClick,</li>\n<li>移动端事件： onTouchStart,onTouchMove,onTouchEnd,</li>\n<li>图表区域事件： onPlotEnter,onPlotMove,onPlotLeave,onPlotClick,onPlotDbClick</li>\n</ul>\n<p>代码示例：</p>\n<pre><code class="lang-javascript"><span class="hljs-tag">&lt;<span class="hljs-name">Chart</span> <span class="hljs-attr">forceFit</span> <span class="hljs-attr">height</span>=<span class="hljs-string">{400}</span> <span class="hljs-attr">data</span>=<span class="hljs-string">{data}</span> <span class="hljs-attr">scale</span>=<span class="hljs-string">{scale}</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{(ev,</span> <span class="hljs-attr">chart</span>) =&gt;</span> {\n  // todo sth\n}}&gt;\n  <span class="hljs-tag">&lt;<span class="hljs-name">Tooltip</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Axis</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Line</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"year*value"</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Point</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"year*value"</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">"circle"</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">Chart</span>&gt;</span>\n</code></pre>\n<h3 id="-">图形元素</h3>\n<p>图形元素标签包括：pie,line,smoothLine,dashLine,stackLine,area,stackArea,smoothArea,interval,\nstackInterval,dodgeInterval,bar,stackBar,dodgeBar,point,funnel,pyramid,schema,box,candle,polygon,contour,heatmap,\nedge,sankey,errorBar,jitterPoint,path,series</p>\n<p>支持事件</p>\n<ul>\n<li>鼠标移动事件： onMouseDown,onMouseMove,onMouseLeave,onMouseUp,</li>\n<li>鼠标点击事件： onClick,onDbClick,</li>\n<li>移动端事件： onTouchStart,onTouchMove,onTouchEnd,</li>\n</ul>\n<p><img src="/assets/image/series_label_component.png" width="450" height="250"/></p>\n<h4 id="label-">label 组件 （修复中）</h4>\n<ul>\n<li>鼠标移动事件： onLabelMouseDown,onLabelMouseMove,onLabelMouseLeave,onLabelMouseUp,</li>\n<li>鼠标点击事件： onLabelClick,onLabelDbClick,</li>\n<li>移动端事件： onLableTouchStart,onLabelTouchMove,onLabelTouchEnd</li>\n</ul>\n<p>代码示例：</p>\n<pre><code class="lang-javascript"><span class="hljs-tag">&lt;<span class="hljs-name">Chart</span> <span class="hljs-attr">forceFit</span> <span class="hljs-attr">height</span>=<span class="hljs-string">{400}</span> <span class="hljs-attr">data</span>=<span class="hljs-string">{data}</span> <span class="hljs-attr">scale</span>=<span class="hljs-string">{scale}</span> &gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Tooltip</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Axis</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Line</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"year*value"</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Point</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"year*value"</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">"circle"</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{(ev,</span> <span class="hljs-attr">chart</span>) =&gt;</span> {\n    // todo sth\n  }}/&gt;\n<span class="hljs-tag">&lt;/<span class="hljs-name">Chart</span>&gt;</span>\n</code></pre>\n<h3 id="-tooltip">提示 Tooltip</h3>\n<p>提示 tooltip 标签，支持 onShow,onHide,onChange 这个事件常用于动态更改显示信息。</p>\n<p>代码示例：</p>\n<pre><code class="lang-javascript">&lt;Chart forceFit height={<span class="hljs-number">400</span>} data={data} scale={scale}&gt;\n  &lt;Tooltip showTitle={false} onChange={(ev, chart) =&gt; {\n    const item = ev.items[<span class="hljs-number">0</span>]; // 获取tooltip要显示的内容\n    item.value = <span class="hljs-string">\'格式化-\'</span> + (item.value * <span class="hljs-number">100</span>).toFixed(<span class="hljs-number">2</span>) + <span class="hljs-string">\'%\'</span>;\n  }}/&gt;\n  &lt;Coord type=<span class="hljs-string">"theta"</span> /&gt;\n  &lt;Axis /&gt;\n  &lt;Legend dataKey=<span class="hljs-string">"item"</span> /&gt;\n  &lt;Pie\n    position=<span class="hljs-string">"percent"</span>\n    color=<span class="hljs-string">"item"</span>\n    style={{ stroke: <span class="hljs-string">\'#fff\'</span>, lineWidth: <span class="hljs-number">1</span> }}\n    label={[<span class="hljs-string">\'percent\'</span>, {\n      formatter: (val, item) =&gt; {\n        return item.point.item + <span class="hljs-string">\': \'</span> + val;\n      }\n    }]}\n  /&gt;\n&lt;/Chart&gt;\n</code></pre>\n<h3 id="-axis">坐标轴 Axis</h3>\n<p>坐标轴 axis 标签，支持非常多的事件。</p>\n<p><img src="/assets/image/axis_component.png" width="600" height="350"></p>\n<h3 id="title-">title 组件</h3>\n<ul>\n<li>鼠标移动事件： onTitleMouseDown,onTitleMouseMove,onTitleMouseLeave,onTitleMouseUp,</li>\n<li>鼠标点击事件： onTitleClick,onTitleDbClick,</li>\n<li>移动端事件： onTitleTouchStart,onTitleTouchMove,onTitleTouchEnd,</li>\n</ul>\n<h3 id="label-">label 组件</h3>\n<ul>\n<li>鼠标移动事件： onLabelMouseDown,onLabelMouseMove,onLabelMouseLeave,onLabelMouseUp,</li>\n<li>鼠标点击事件： onLabelClick,onLabelDbClick,</li>\n<li>移动端事件： onLabelTouchStart,onLabelTouchMove,onLabelTouchEnd,</li>\n</ul>\n<h3 id="ticks-">ticks 组件</h3>\n<ul>\n<li>鼠标移动事件： onTicksMouseDown,onTicksMouseMove,onTicksMouseLeave,onTicksMouseUp,</li>\n<li>鼠标点击事件： onTicksClick,onTicksDbClick,</li>\n<li>移动端事件： onTicksTouchStart,onTicksTouchMove,onTicksTouchEnd,</li>\n</ul>\n<h3 id="-">线组件</h3>\n<ul>\n<li>鼠标移动事件： onLineMouseDown,onLineMouseMove,onLineMouseLeave,onLineMouseUp,</li>\n<li>鼠标点击事件： onLineClick,onLineDbClick,</li>\n<li>移动端事件： onLineTouchStart,onLineTouchMove,onLineTouchEnd,</li>\n</ul>\n<h3 id="-">网格组件</h3>\n<ul>\n<li>鼠标移动事件： onGridMouseDown,onGridMouseMove,onGridMouseLeave,onGridMouseUp,</li>\n<li>鼠标点击事件： onGridClick,onGridDbClick,</li>\n<li>移动端事件： onGridTouchStart,onGridTouchMove,onGridTouchEnd,</li>\n</ul>\n<p>代码示例：</p>\n<pre><code class="lang-javascript"><span class="hljs-tag">&lt;<span class="hljs-name">Chart</span> <span class="hljs-attr">forceFit</span> <span class="hljs-attr">height</span>=<span class="hljs-string">{400}</span> <span class="hljs-attr">data</span>=<span class="hljs-string">{data}</span> <span class="hljs-attr">scale</span>=<span class="hljs-string">{scale}</span> &gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Tooltip</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Axis</span> <span class="hljs-attr">onTitleMouseDown</span>=<span class="hljs-string">{(ev,</span> <span class="hljs-attr">chart</span>) =&gt;</span> {\n    // todo sth\n  }}/&gt;\n  <span class="hljs-tag">&lt;<span class="hljs-name">Line</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"year*value"</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Point</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"year*value"</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">"circle"</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">Chart</span>&gt;</span>\n</code></pre>\n<h3 id="-legend">图例 Legend</h3>\n<ul>\n<li>本身支持的事件： onHover,onClick</li>\n</ul>\n<p><img src="/assets/image/legend_component.png" width="350" height="200"/></p>\n<h3 id="-">标题组件</h3>\n<p>title 组件在使用时要注意，只有 position 为 left  right (示例：<code>&lt;Legend position=&quot;left or right&quot; title={{}}&gt;</code>)才会显示出来，展示的内容是字段名称, <code>&lt;Legend position=&quot;left or right&quot; title={null}&gt;</code>可以隐藏title 。</p>\n<ul>\n<li>鼠标移动事件： onTitleMouseDown,onTitleMouseMove,onTitleMouseLeave,onTitleMouseUp,</li>\n<li>鼠标点击事件： onTitleClick,onTitleDbClick,</li>\n<li>移动端事件： onTitleTouchStart,onTitleTouchMove,onTitleTouchEnd,</li>\n</ul>\n<h3 id="item-">item 组件</h3>\n<ul>\n<li>鼠标移动事件： onItemMouseDown,onItemMouseMove,onItemMouseLeave,onItemMouseUp,</li>\n<li>鼠标点击事件： onItemClick,onItemDbClick,</li>\n<li>移动端事件： onItemTouchStart,onItemTouchMove,onItemTouchEnd,</li>\n</ul>\n<h3 id="marker-">marker 组件</h3>\n<ul>\n<li>鼠标移动事件： onMarkerMouseDown,onMarkerMouseMove,onMarkerMouseLeave,onMarkerMouseUp,</li>\n<li>鼠标点击事件： onMarkerClick,onMarkerDbClick,</li>\n<li>移动端事件： onMarkerTouchStart,onMarkerTouchMove,onMarkerTouchEnd,</li>\n</ul>\n<h3 id="text-">text 组件</h3>\n<ul>\n<li>鼠标移动事件： onTextMouseDown,onTextMouseMove,onTextMouseLeave,onTextMouseUp,</li>\n<li>鼠标点击事件： onTextClick,onTextDbClick,</li>\n<li>移动端事件： onTextTouchStart,onTextTouchMove,onTextTouchEnd,</li>\n</ul>\n<p>代码示例：</p>\n<pre><code class="lang-javascript"><span class="hljs-tag">&lt;<span class="hljs-name">Chart</span> <span class="hljs-attr">forceFit</span> <span class="hljs-attr">height</span>=<span class="hljs-string">{400}</span> <span class="hljs-attr">data</span>=<span class="hljs-string">{data}</span> <span class="hljs-attr">scale</span>=<span class="hljs-string">{scale}</span> &gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Tooltip</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Axis</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Legend</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"left"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"field"</span> <span class="hljs-attr">onTextMouseDown</span>=<span class="hljs-string">{(ev,</span> <span class="hljs-attr">chart</span>) =&gt;</span> {\n    // todo sth\n  }}/&gt;\n  <span class="hljs-tag">&lt;<span class="hljs-name">Line</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"year*value"</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Point</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"year*value"</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">"circle"</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">Chart</span>&gt;</span>\n</code></pre>\n<h3 id="-guide-to-be-done-">引导 Guide ( to be done)</h3>\n<p>支持事件</p>\n<ul>\n<li>鼠标移动事件： onMouseDown,onMouseMove,onMouseLeave,onMouseUp,</li>\n<li>鼠标点击事件： onClick,onDbClick,</li>\n<li>移动端事件： onTouchStart,onTouchMove,onTouchEnd,</li>\n</ul>\n'},1258:function(module,exports){module.exports='<h2 id="summary">summary</h2>\n<p>The interaction of diagrams is the bridge between people and cold data. Viser provides a series of interaction events to help achieve the second presentation of the chart data, such as drilling or rollup. We have supported about 14 kinds of events.</p>\n<ul>\n<li>Mouse movement event： onMouseDown,onMouseMove,onMouseLeave,onMouseUp,</li>\n<li>Mouse click event： onClick,onDbClick,</li>\n<li>Mobile event： onTouchStart,onTouchMove,onTouchEnd,</li>\n<li>Chart area events： onPlotEnter,onPlotMove,onPlotLeave,onPlotClick,onPlotDbClick</li>\n</ul>\n<p>In addition,  axis and legend tag has some special events.</p>\n<p>The event callback function provides two parameters, the event  and the chart instance , to facilitate the user to obtain the event source and data, and to handle the chart instance according to the actual scene.</p>\n<p>Let&#39;s come to see each tag support what kind of events and how can we code to implement requirements.</p>\n<h2 id="labels-and-supported-events">Labels and Supported Events</h2>\n<h3 id="chart">Chart</h3>\n<p>Chart tag support</p>\n<ul>\n<li>Mouse movement event： onMouseDown,onMouseMove,onMouseLeave,onMouseUp,</li>\n<li>Mouse click event： onClick,onDbClick,</li>\n<li>Mobile event： onTouchStart,onTouchMove,onTouchEnd,</li>\n<li>Chart area events： onPlotEnter,onPlotMove,onPlotLeave,onPlotClick,onPlotDbClick</li>\n</ul>\n<p>Code example：</p>\n<pre><code class="lang-javascript"><span class="hljs-tag">&lt;<span class="hljs-name">Chart</span> <span class="hljs-attr">forceFit</span> <span class="hljs-attr">height</span>=<span class="hljs-string">{400}</span> <span class="hljs-attr">data</span>=<span class="hljs-string">{data}</span> <span class="hljs-attr">scale</span>=<span class="hljs-string">{scale}</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{(ev,</span> <span class="hljs-attr">chart</span>) =&gt;</span> {\n  // todo sth\n}}&gt;\n  <span class="hljs-tag">&lt;<span class="hljs-name">Tooltip</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Axis</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Line</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"year*value"</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Point</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"year*value"</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">"circle"</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">Chart</span>&gt;</span>\n</code></pre>\n<h3 id="graphic-element">Graphic element</h3>\n<p>Graphic element tags include：pie,line,smoothLine,dashLine,stackLine,area,stackArea,smoothArea,interval,\nstackInterval,dodgeInterval,bar,stackBar,dodgeBar,point,funnel,pyramid,schema,box,candle,polygon,contour,heatmap,\nedge,sankey,errorBar,jitterPoint,path,series</p>\n<p>Support event</p>\n<ul>\n<li>Mouse movement event： onMouseDown,onMouseMove,onMouseLeave,onMouseUp,</li>\n<li>Mouse click event： onClick,onDbClick,</li>\n<li>Mobile event： onTouchStart,onTouchMove,onTouchEnd,</li>\n</ul>\n<p><img src="/assets/image/series_label_component.png" width="450" height="250"/></p>\n<h4 id="label">label</h4>\n<ul>\n<li>Mouse movement event： onLabelMouseDown,onLabelMouseMove,onLabelMouseLeave,onLabelMouseUp,</li>\n<li>Mouse click event： onLabelClick,onLabelDbClick,</li>\n<li>Mobile event： onLableTouchStart,onLabelTouchMove,onLabelTouchEnd</li>\n</ul>\n<p>Code example：</p>\n<pre><code class="lang-javascript"><span class="hljs-tag">&lt;<span class="hljs-name">Chart</span> <span class="hljs-attr">forceFit</span> <span class="hljs-attr">height</span>=<span class="hljs-string">{400}</span> <span class="hljs-attr">data</span>=<span class="hljs-string">{data}</span> <span class="hljs-attr">scale</span>=<span class="hljs-string">{scale}</span> &gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Tooltip</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Axis</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Line</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"year*value"</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Point</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"year*value"</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">"circle"</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{(ev,</span> <span class="hljs-attr">chart</span>) =&gt;</span> {\n    // todo sth\n  }}/&gt;\n<span class="hljs-tag">&lt;/<span class="hljs-name">Chart</span>&gt;</span>\n</code></pre>\n<h3 id="tooltip">Tooltip</h3>\n<p>Tooltip tag, support onShow,onHide,onChange(This event is often used to dynamically change the displayed information).</p>\n<p>Code example：</p>\n<pre><code class="lang-javascript">&lt;Chart forceFit height={<span class="hljs-number">400</span>} data={data} scale={scale}&gt;\n  &lt;Tooltip showTitle={false} onChange={(ev, chart) =&gt; {\n    const item = ev.items[<span class="hljs-number">0</span>]; // get tooltip content\n    item.value = <span class="hljs-string">\'格式化-\'</span> + (item.value * <span class="hljs-number">100</span>).toFixed(<span class="hljs-number">2</span>) + <span class="hljs-string">\'%\'</span>;\n  }}/&gt;\n  &lt;Coord type=<span class="hljs-string">"theta"</span> /&gt;\n  &lt;Axis /&gt;\n  &lt;Legend dataKey=<span class="hljs-string">"item"</span> /&gt;\n  &lt;Pie\n    position=<span class="hljs-string">"percent"</span>\n    color=<span class="hljs-string">"item"</span>\n    style={{ stroke: <span class="hljs-string">\'#fff\'</span>, lineWidth: <span class="hljs-number">1</span> }}\n    label={[<span class="hljs-string">\'percent\'</span>, {\n      formatter: (val, item) =&gt; {\n        return item.point.item + <span class="hljs-string">\': \'</span> + val;\n      }\n    }]}\n  /&gt;\n&lt;/Chart&gt;\n</code></pre>\n<h3 id="axis">Axis</h3>\n<p>Axis label, support for many events。</p>\n<p><img src="/assets/image/axis_component.png" width="600" height="350"></p>\n<h4 id="title">title</h4>\n<ul>\n<li>Mouse movement event： onTitleMouseDown,onTitleMouseMove,onTitleMouseLeave,onTitleMouseUp,</li>\n<li>Mouse click event： onTitleClick,onTitleDbClick,</li>\n<li>Mobile event： onTitleTouchStart,onTitleTouchMove,onTitleTouchEnd,</li>\n</ul>\n<h3 id="label">label</h3>\n<ul>\n<li>Mouse movement event： onLabelMouseDown,onLabelMouseMove,onLabelMouseLeave,onLabelMouseUp,</li>\n<li>Mouse click event： onLabelClick,onLabelDbClick,</li>\n<li>Mobile event： onLabelTouchStart,onLabelTouchMove,onLabelTouchEnd,</li>\n</ul>\n<h3 id="ticks">ticks</h3>\n<ul>\n<li>Mouse movement event： onTicksMouseDown,onTicksMouseMove,onTicksMouseLeave,onTicksMouseUp,</li>\n<li>Mouse click event： onTicksClick,onTicksDbClick,</li>\n<li>Mobile event： onTicksTouchStart,onTicksTouchMove,onTicksTouchEnd,</li>\n</ul>\n<h3 id="line">line</h3>\n<ul>\n<li>Mouse movement event： onLineMouseDown,onLineMouseMove,onLineMouseLeave,onLineMouseUp,</li>\n<li>Mouse click event： onLineClick,onLineDbClick,</li>\n<li>Mobile event： onLineTouchStart,onLineTouchMove,onLineTouchEnd,</li>\n</ul>\n<h3 id="grid">grid</h3>\n<ul>\n<li>Mouse movement event： onGridMouseDown,onGridMouseMove,onGridMouseLeave,onGridMouseUp,</li>\n<li>Mouse click event： onGridClick,onGridDbClick,</li>\n<li>Mobile event： onGridTouchStart,onGridTouchMove,onGridTouchEnd,</li>\n</ul>\n<p>Code example：</p>\n<pre><code class="lang-javascript"><span class="hljs-tag">&lt;<span class="hljs-name">Chart</span> <span class="hljs-attr">forceFit</span> <span class="hljs-attr">height</span>=<span class="hljs-string">{400}</span> <span class="hljs-attr">data</span>=<span class="hljs-string">{data}</span> <span class="hljs-attr">scale</span>=<span class="hljs-string">{scale}</span> &gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Tooltip</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Axis</span> <span class="hljs-attr">onTitleMouseDown</span>=<span class="hljs-string">{(ev,</span> <span class="hljs-attr">chart</span>) =&gt;</span> {\n    // todo sth\n  }}/&gt;\n  <span class="hljs-tag">&lt;<span class="hljs-name">Line</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"year*value"</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Point</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"year*value"</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">"circle"</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">Chart</span>&gt;</span>\n</code></pre>\n<h3 id="legend">Legend</h3>\n<ul>\n<li>Self-supported events： onHover,onClick</li>\n</ul>\n<p><img src="/assets/image/legend_component.png" width="350" height="200"/></p>\n<h3 id="title">title</h3>\n<p>Here is some tips, if you are using The title component , only set position equals left  or right (such as: <code>&lt;Legend position=&quot;left or right&quot; title={{}}&gt;</code>), the title component will show，title content is field name. code like this can hide title component <code>&lt;Legend position=&quot;left or right&quot; title={null}&gt;</code> 。</p>\n<ul>\n<li>Mouse movement event： onTitleMouseDown,onTitleMouseMove,onTitleMouseLeave,onTitleMouseUp,</li>\n<li>Mouse click event： onTitleClick,onTitleDbClick,</li>\n<li>Mobile event： onTitleTouchStart,onTitleTouchMove,onTitleTouchEnd,</li>\n</ul>\n<h3 id="item">item</h3>\n<ul>\n<li>Mouse movement event： onItemMouseDown,onItemMouseMove,onItemMouseLeave,onItemMouseUp,</li>\n<li>Mouse click event： onItemClick,onItemDbClick,</li>\n<li>Mobile event： onItemTouchStart,onItemTouchMove,onItemTouchEnd,</li>\n</ul>\n<h3 id="marker">marker</h3>\n<ul>\n<li>Mouse movement event： onMarkerMouseDown,onMarkerMouseMove,onMarkerMouseLeave,onMarkerMouseUp,</li>\n<li>Mouse click event： onMarkerClick,onMarkerDbClick,</li>\n<li>Mobile event： onMarkerTouchStart,onMarkerTouchMove,onMarkerTouchEnd,</li>\n</ul>\n<h3 id="text">text</h3>\n<ul>\n<li>Mouse movement event： onTextMouseDown,onTextMouseMove,onTextMouseLeave,onTextMouseUp,</li>\n<li>Mouse click event： onTextClick,onTextDbClick,</li>\n<li>Mobile event： onTextTouchStart,onTextTouchMove,onTextTouchEnd,</li>\n</ul>\n<p>Code example：</p>\n<pre><code class="lang-javascript"><span class="hljs-tag">&lt;<span class="hljs-name">Chart</span> <span class="hljs-attr">forceFit</span> <span class="hljs-attr">height</span>=<span class="hljs-string">{400}</span> <span class="hljs-attr">data</span>=<span class="hljs-string">{data}</span> <span class="hljs-attr">scale</span>=<span class="hljs-string">{scale}</span> &gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Tooltip</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Axis</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Legend</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"left"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"field"</span> <span class="hljs-attr">onTextMouseDown</span>=<span class="hljs-string">{(ev,</span> <span class="hljs-attr">chart</span>) =&gt;</span> {\n    // todo sth\n  }}/&gt;\n  <span class="hljs-tag">&lt;<span class="hljs-name">Line</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"year*value"</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Point</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"year*value"</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">"circle"</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">Chart</span>&gt;</span>\n</code></pre>\n<h3 id="guide-to-be-done-">Guide  ( to be done)</h3>\n<p>Support event</p>\n<ul>\n<li>Mouse movement event： onMouseDown,onMouseMove,onMouseLeave,onMouseUp,</li>\n<li>Mouse click event： onClick,onDbClick,</li>\n<li>Mobile event： onTouchStart,onTouchMove,onTouchEnd,</li>\n</ul>\n'},1259:function(module,exports){module.exports='<h2 id="-">特点</h2>\n<p>这里我们讨论下 viser 和 g2 的差异之处，这里我们以 viser-react 举例，以便于您的理解。</p>\n<h3 id="-">组件分类</h3>\n<p>Viser 中所有的子组件分为几类：</p>\n<ul>\n<li>容器组件：Chart, View, FacetView, Facet, LiteChart；</li>\n<li>标准组件：Coord, Tooltip, Legend, Guide, Axis, Series；</li>\n<li>图形组件：Pie, Sector, Line, SmoothLine, DashLine, Area, StackArea, SmoothArea, Bar, StackBar, DodgeBar, Interval, StackInterval, DodgeInterval, Point, JitterPoint, Funnel, Pyramid, Schema, Box, Candle, Polygon, Contour, Heatmap, Edge, Sankey。</li>\n</ul>\n<p>容器组件代表它们是可以对应一组渲染，比如 Chart 容器包含组件绘制的所有步骤，而 G2 的图表可以由多个<a href="https://antv.alipay.com/zh-cn/g2/3.x/tutorial/how-to-create-view.html">视图 View 构成</a>，同时各个视图可以拥有各自的数据源，那么 View 也会包含组件绘制的一部分步骤。此外 <a href="https://antv.alipay.com/zh-cn/g2/3.x/tutorial/facet.html">Facet</a>, FacetView 是类似的，具体可以参考 demo 中的写法。</p>\n<p>标准组件对应 <a href="https://antv.alipay.com/zh-cn/g2/3.x/tutorial/understanding-g2-charts.html">G2 的图表组成</a> 包括了 Axis, Legend, Geom, Tooltip 和 Guide。对应到 viser 是 Axis, Legend, Series, Tooltip 和 Guide，另外将 Coord 也设置为组件。其中，Series 来代替 Geom，原因是大部分其它图表库更强调 Series 概念，G2 从图形语法层面将这一概念抽象成 Geom。</p>\n<p>图形组件是对 Series 类型的扩展，其实就是所有 <a href="https://antv.alipay.com/zh-cn/g2/3.x/tutorial/geom.html">geom 类型</a>。将它们具象化成组件，以方便在使用时理解。虽然我们还是可以用 Series 来做为组件，但推荐直接使用具体的图形名称来表示组件，例如 Bar 和 Line 等。这样方便语义化的使用。具体举例，比如：</p>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * G2\n */</span>\nchart.<span class="hljs-built_in">line</span>().<span class="hljs-built_in">position</span>(<span class="hljs-string">\'year*value\'</span>);\n</code></pre>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * Viser-react\n */</span>\n&lt;Line <span class="hljs-built_in">position</span>=<span class="hljs-string">"year*value"</span> /&gt;\n</code></pre>\n<h3 id="datakey-">dataKey 字段映射</h3>\n<p>对于字段映射的方式，viser 使用 <code>dataKey</code> 的方式来设置，与其它属性并列，比如在设置 <code>scale</code> 时，g2 的 <code>key</code> 就是数据的列字段，而 viser 里就是 <code>dataKey</code> 来表示：</p>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * G2\n */</span>\n<span class="hljs-selector-tag">chart</span><span class="hljs-selector-class">.scale</span>({\n  <span class="hljs-attribute">x</span>: { sync: true },\n  <span class="hljs-selector-tag">y</span>: { <span class="hljs-attribute">sync</span>: true },\n});\n</code></pre>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * Viser-react\n */</span>\n<span class="hljs-keyword">const</span> scale = [{\n  <span class="hljs-attr">dataKey</span>: <span class="hljs-string">\'x\'</span>,\n  <span class="hljs-attr">sync</span>: <span class="hljs-literal">true</span>,\n}, {\n  <span class="hljs-attr">dataKey</span>: <span class="hljs-string">\'y\'</span>,\n  <span class="hljs-attr">sync</span>: <span class="hljs-literal">true</span>,\n}];\n<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Chart</span> <span class="hljs-attr">scale</span>=<span class="hljs-string">{scale}</span> {<span class="hljs-attr">...others</span>}&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">Chart</span>&gt;</span></span>\n</code></pre>\n<p>其它，类似于 Legend, Axis 部分的字段映射使用同样的方式，用 <code>dataKey</code> 代表列字段。但在 Series 中并不是对单个字段映射，而且它是属性的一部分，因为我们的处理方式不同，使用数组的方式来表达。比如 <code>label</code> 属性中列字段是 <code>name</code>，并有配置，那么我们在 viser 中使用就直接使用一个数组来代表：</p>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * G2\n */</span>\n<span class="hljs-selector-tag">nodeView</span><span class="hljs-selector-class">.polygon</span>()\n<span class="hljs-selector-class">.position</span>(<span class="hljs-string">\'x*y\'</span>)\n<span class="hljs-selector-class">.color</span>(<span class="hljs-string">\'id\'</span>)\n<span class="hljs-selector-class">.label</span>(<span class="hljs-string">\'name\'</span>, {\n  <span class="hljs-attribute">labelEmit</span>: true,\n  <span class="hljs-attribute">textStyle</span>: {\n    <span class="hljs-attribute">fill</span>: <span class="hljs-string">\'#8c8c8c\'</span>\n  }\n});\n</code></pre>\n<pre><code class="lang-js">/*\n * Viser-react\n */\nconst <span class="hljs-keyword">label</span><span class="bash"> = [\n</span>  <span class="hljs-string">\'name\'</span>, {\n    labelEmit: true,\n    textStyle: {\n      fill: <span class="hljs-string">\'#8c8c8c\'</span>\n    },\n  }\n];\n&lt;Polygon position=<span class="hljs-string">\'x*y\'</span> color=<span class="hljs-string">\'id\'</span> <span class="hljs-keyword">label</span><span class="bash">={label} /&gt;</span>\n</code></pre>\n<h3 id="coord-">Coord 的角度</h3>\n<p><a href="https://antv.alipay.com/zh-cn/g2/3.x/tutorial/coord.html">Coord</a> 默认的 <code>startAngle</code> 和 <code>endAngle</code> 是用弧度表示的，比如角度是 180 度，那么弧度用 js 表示就是 <code>2 * Math.PI</code>。对于使用者来说，还是角度更简单和直观，因此，viser 使用角度来替代弧度。</p>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * G2\n */</span>\nchart.coord(<span class="hljs-string">\'polar\'</span>, {\n  startAngle: <span class="hljs-number">2</span> * Math.<span class="hljs-built-in">PI</span>,\n})\n</code></pre>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * Viser-react\n */</span>\n&lt;<span class="hljs-type">Coord</span> <span class="hljs-class"><span class="hljs-keyword">type</span></span>=<span class="hljs-string">"polar"</span> startAngle={<span class="hljs-number">180</span>} /&gt;\n</code></pre>\n<h3 id="coord-">Coord 的方向</h3>\n<p>Coord 组件用于表示 g2 中 coord 的相关内容。针对直角坐标系的图表，我们提供了 <code>direction</code> 这一优化后的参数用来展现 g2 中的 <code>transpose</code>, <code>reflect</code> 和 <code>scale</code> 这几个属性。根据 X 轴，Y 轴的位置，我们提供了 8 种坐标系的排列，分别有 BL, BR, LT, LB, RB, RT, TL, TR。B 代表 bottom, T 代表 top，L 代表 left，R 代表 right。具体举例，比如：</p>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * G2\n */</span>\n<span class="hljs-selector-tag">chart</span><span class="hljs-selector-class">.coord</span>()<span class="hljs-selector-class">.transpose</span>()<span class="hljs-selector-class">.scale</span>(1, <span class="hljs-selector-tag">-1</span>);\n</code></pre>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * Viser-react\n */</span>\n&lt;<span class="hljs-type">Coord</span> <span class="hljs-class"><span class="hljs-keyword">type</span></span>=<span class="hljs-string">"rect"</span> direction=<span class="hljs-string">"LT"</span> /&gt;\n</code></pre>\n<p>直角坐标系映射关系如下：</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">direction</th>\n<th style="text-align:left">配置</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">BL(默认）</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;);</td>\n</tr>\n<tr>\n<td style="text-align:left">BR</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).scale(-1, 1);</td>\n</tr>\n<tr>\n<td style="text-align:left">LT</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).transpose().scale(1, -1);</td>\n</tr>\n<tr>\n<td style="text-align:left">LB</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).transpose();</td>\n</tr>\n<tr>\n<td style="text-align:left">RB</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).transpose().reflect();</td>\n</tr>\n<tr>\n<td style="text-align:left">RT</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).transpose().reflect().scale(-1, 1);</td>\n</tr>\n<tr>\n<td style="text-align:left">TL</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).reflect();</td>\n</tr>\n<tr>\n<td style="text-align:left">TR</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).reflect().scale(-1, 1);</td>\n</tr>\n</tbody>\n</table>\n<p>同理，对于极坐标系我们也提供了 4 种方向，最主要是 <code>rotate</code> 和 <code>reverse</code> 两种，具体映射关系如下：</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">direction</th>\n<th style="text-align:left">配置</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">rotate</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).transpose();</td>\n</tr>\n<tr>\n<td style="text-align:left">xReverse</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).reflect(&#39;x&#39;);</td>\n</tr>\n<tr>\n<td style="text-align:left">yReverse</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).reflect(&#39;y&#39;);</td>\n</tr>\n<tr>\n<td style="text-align:left">reverse</td>\n<td style="text-align:left">chart.coord(&#39;rect&#39;).reflect();</td>\n</tr>\n</tbody>\n</table>\n<h3 id="guide-">Guide 的类型</h3>\n<p>Guide 在 g2 中直接会指定，比如 <code>chart.guide().line()</code>，在 viser 中均使用 Guide 组件，类型就使用 <code>type</code> 字段来表示，比如：</p>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * G2\n */</span>\n<span class="hljs-selector-tag">chart</span><span class="hljs-selector-class">.guide</span>()<span class="hljs-selector-class">.line</span>()\n</code></pre>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * Viser-react\n */</span>\n&lt;<span class="hljs-type">Guide</span> <span class="hljs-class"><span class="hljs-keyword">type</span></span>=<span class="hljs-string">"line"</span> /&gt;\n</code></pre>\n<p>另外，提供了两种平行和正交快捷设置，因此增加了 <code>quickType</code> 的字段，value 则对应是 <code>parallel</code> 和 <code>normal</code>，比如：</p>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * G2\n */</span>\n<span class="hljs-selector-tag">chart</span><span class="hljs-selector-class">.guide</span><span class="hljs-selector-class">.line</span>({\n  <span class="hljs-attribute">start</span>: [<span class="hljs-string">\'min\'</span>, <span class="hljs-number">2</span>],\n  end: [<span class="hljs-string">\'max\'</span>, <span class="hljs-number">2</span>],\n});\n</code></pre>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * Viser-react\n */</span>\n&lt;Guide <span class="hljs-keyword">type</span>=<span class="hljs-string">"line"</span> quickType=<span class="hljs-string">"parallel"</span> <span class="hljs-built_in">data</span>={<span class="hljs-number">2</span>} /&gt;\n</code></pre>\n<h3 id="formatter-">Formatter 格式化方法</h3>\n<p>我们加入了 <code>d3-format</code> 库来增强 <code>label</code> 需要数据处理的能力，也就是说简单场景下的数据格式化，可以直接用 d3 提供的格式化表达式来完成。比如：</p>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * G2\n */</span>\n<span class="hljs-selector-tag">chart</span><span class="hljs-selector-class">.scale</span>({\n  <span class="hljs-attribute">percent</span>: {\n    min: <span class="hljs-number">0</span>,\n    <span class="hljs-built_in">formatter</span>(val) {\n      return (val * <span class="hljs-number">100</span>).<span class="hljs-built_in">toFixed</span>(2) + <span class="hljs-string">\'%\'</span>;\n    }\n  }\n});\n</code></pre>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * Viser-react\n */</span>\n<span class="hljs-keyword">const</span> <span class="hljs-built_in">scale</span> = [{\n  dataKey: <span class="hljs-string">\'percent\'</span>,\n  <span class="hljs-built_in">min</span>: <span class="hljs-number">0</span>,\n  formatter: <span class="hljs-string">\'.2%\'</span>,\n}];\n</code></pre>\n<h3 id="-">事件</h3>\n<p>Viser 的事件对于 <a href="https://antv.alipay.com/zh-cn/g2/3.x/tutorial/chart-event.html">g2 的事件</a> 来说看起来不太一样，viser 是直接绑定在元素上的，因此对于事件来说，在哪里用就在哪里绑定。但 g2 使用中常常使用到 chart 实例，因此 viser 将 chart 实例放在了回调函数第二个参数上，比如：</p>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * G2\n */</span>\n<span class="hljs-selector-tag">chart</span><span class="hljs-selector-class">.on</span>(<span class="hljs-string">\'mousedown\'</span>, ev =&gt; {});\n</code></pre>\n<pre><code class="lang-js"><span class="hljs-comment">/*\n * Viser-react\n */</span>\nhandleMouseDown = <span class="hljs-function">(<span class="hljs-params">ev, chart</span>) =&gt;</span> {}\n&lt;Chart onMouseDown={<span class="hljs-keyword">this</span>.handleMouseDown}&gt;\n<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">Chart</span>&gt;</span></span>\n</code></pre>\n<p>对于 Axis 来说，原来的 <code>chart.on(&#39;axis-title: click&#39;, ev =&gt; {})</code>，在 Axis 上绑定就会有一个 <code>onTitleClick</code> 的属性，其它的以此类推。</p>\n'},1260:function(module,exports){module.exports='<h2 id="feature">Feature</h2>\n<p>Comming Soon...</p>\n'},1261:function(module,exports){module.exports='<h2 id="-">安装</h2>\n<p>Viser 为 React, Vue 和 Angular 提供了3个不同的分发版本。我们同时提供了npm安装和umd引入两种方式来使用Viser。</p>\n<p>npm安装是使用 Viser 最简单也是最快捷的方式。我们强烈建议您在开发单页应用(SPA)时采用这种方式进行安装。Viser 可以完美兼容 CommonJS 打包工具，例如我们最常用的 Webpack。</p>\n<p>UMD 引入是使用script标签引入来使用 Viser。当你需要快速使用的时候，这是最便捷的方式。</p>\n<h3 id="vue-">Vue 分发版</h3>\n<p>您需要使用版本 <strong>2.5</strong> 及以上的 Vue，来使用 Vue 分发版 Viser。</p>\n<h4 id="npm">npm</h4>\n<p>在终端使用如下命令来安装 npm 版本：</p>\n<pre><code class="lang-shell"><span class="hljs-meta">#</span><span class="bash"> latest stable</span>\n<span class="hljs-meta">$</span><span class="bash"> npm install viser-vue</span>\n</code></pre>\n<h4 id="umd">umd</h4>\n<p>我们在 unpkg.com 上提供了 UMD 的版本:</p>\n<pre><code class="lang-html"> <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://unpkg.com/viser-vue/umd/viser-vue.min.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</code></pre>\n<p>然后你可以使用全局变量 <code>window.ViserVue</code> 来进行调用 Viser。</p>\n<h3 id="angular-">Angular 分发版</h3>\n<p>您需要使用版本 <strong>2.4</strong> 及以上的 Angular，来使用 Angular 分发版 Viser。另外，你还需要版本 <strong>0.1</strong> 及以上的 reflect-metadata，版本 <strong>5</strong> 及以上的 rxjs，版本 <strong>0.7</strong> 及以上的 zone.js。</p>\n<h4 id="npm">npm</h4>\n<p>在终端使用如下命令来安装 npm 版本：</p>\n<pre><code class="lang-shell"><span class="hljs-meta">#</span><span class="bash"> latest stable</span>\n<span class="hljs-meta">$</span><span class="bash"> npm install viser-ng</span>\n</code></pre>\n<h4 id="umd">umd</h4>\n<p>我们在 unpkg.com 上提供了 UMD 的版本:</p>\n<pre><code class="lang-html"> <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://unpkg.com/viser-ng/umd/viser-ng.min.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</code></pre>\n<p>然后你可以使用全局变量 <code>window.ViserNg</code> 来进行调用 Viser。</p>\n<h3 id="react-">React 分发版</h3>\n<p>您需要使用版本 <strong>15</strong> 及以上的 React，来使用 React 分发版 Viser。显然，版本 <strong>16</strong> 也是可以的。</p>\n<h4 id="npm">npm</h4>\n<p>在终端使用如下命令来安装 npm 版本：</p>\n<pre><code class="lang-shell"><span class="hljs-meta">#</span><span class="bash"> latest stable</span>\n<span class="hljs-meta">$</span><span class="bash"> npm install viser-react</span>\n</code></pre>\n<h4 id="umd">umd</h4>\n<p>我们在 unpkg.com 上提供了 UMD 引入的版本:</p>\n<pre><code class="lang-html"> <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://unpkg.com/viser-react/umd/viser-react.min.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</code></pre>\n<p>然后你可以使用全局变量 <code>window.ViserReact</code> 来进行调用 Viser。</p>\n<h2 id="demo">Demo</h2>\n<p>To examine the demos in your local build, open to <code>demo</code> directory, and execute</p>\n<pre><code class="lang-shell"><span class="hljs-meta">$</span><span class="bash"> git <span class="hljs-built_in">clone</span> https://github.com/viserjs/viser.git</span>\n<span class="hljs-meta">$</span><span class="bash"> npm run postinstall</span>\n<span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">cd</span> ./demo &amp;&amp; npm install</span>\n<span class="hljs-meta">$</span><span class="bash"> npm run start</span>\n</code></pre>\n'},1262:function(module,exports){module.exports='<h2 id="installation">Installation</h2>\n<p>Viser include 3 version which is integrated by React, Vue and Angular. We provide NPM or UMD to use library.</p>\n<p>NPM is the easiest and fastest way to get started using Viser. It is the recommended installation method when building single-page applications (SPAs). It pairs nicely with a CommonJS module bundler such as Webpack.</p>\n<p>UMD is the script way to using Viser. It is convenient method when you used quickly.</p>\n<h3 id="vue-version">Vue Version</h3>\n<p>In Vue version, You mush prepare to Vue version greater than <strong>2.5</strong> in project.</p>\n<h4 id="npm">npm</h4>\n<p>The NPM way is only install by shell:</p>\n<pre><code class="lang-shell"><span class="hljs-meta">#</span><span class="bash"> latest stable</span>\n<span class="hljs-meta">$</span><span class="bash"> npm install viser-vue</span>\n</code></pre>\n<h4 id="umd">umd</h4>\n<p>The UMD build is also available on unpkg.com:</p>\n<pre><code class="lang-html"> <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://unpkg.com/viser-vue/umd/viser-vue.min.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</code></pre>\n<p>Then you can find the library on window.ViserVue.</p>\n<h3 id="angular-version">Angular Version</h3>\n<p>In Angular version, You mush prepare to Angular version greater than <strong>2.4</strong> in project. In addition, you also prepare to reflect-metadata version greater than <strong>0.1</strong>, rxjs version greater than <strong>5</strong> and zone.js version greater than <strong>0.7</strong>.</p>\n<h4 id="npm">npm</h4>\n<p>The NPM way is only install by shell:</p>\n<pre><code class="lang-shell"><span class="hljs-meta">#</span><span class="bash"> latest stable</span>\n<span class="hljs-meta">$</span><span class="bash"> npm install viser-ng</span>\n</code></pre>\n<h4 id="umd">umd</h4>\n<p>The UMD build is also available on unpkg.com:</p>\n<pre><code class="lang-html"> <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://unpkg.com/viser-ng/umd/viser-ng.min.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</code></pre>\n<p>Then you can find the library on window.ViserNg.</p>\n<h3 id="react-version">React Version</h3>\n<p>In React version, You mush prepare React version greater then <strong>15</strong>, and support <strong>16</strong> certainly.</p>\n<h4 id="npm">npm</h4>\n<p>The NPM way is only install by shell:</p>\n<pre><code class="lang-shell"><span class="hljs-meta">#</span><span class="bash"> latest stable</span>\n<span class="hljs-meta">$</span><span class="bash"> npm install viser-react</span>\n</code></pre>\n<h4 id="umd">umd</h4>\n<p>The UMD build is also available on unpkg.com:</p>\n<pre><code class="lang-html"> <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://unpkg.com/viser-react/umd/viser-react.min.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</code></pre>\n<p>Then you can find the library on window.ViserReact.</p>\n<h2 id="demo">Demo</h2>\n<p>To examine the demos in your local build, open to <code>demo</code> directory, and execute</p>\n<pre><code class="lang-shell"><span class="hljs-meta">$</span><span class="bash"> git <span class="hljs-built_in">clone</span> https://github.com/viserjs/viser.git</span>\n<span class="hljs-meta">$</span><span class="bash"> npm run postinstall</span>\n<span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">cd</span> ./demo &amp;&amp; npm install</span>\n<span class="hljs-meta">$</span><span class="bash"> npm run start</span>\n</code></pre>\n'},1263:function(module,exports){module.exports='<h2 id="-">简介</h2>\n<p>Viser，一个基于 G2 实现的，为数据可视化工程师量身定制的工具。Viser 现已支持几大主流前端框架，例如 React, Vue 和 AngularJS。</p>\n<h3 id="-">核心价值</h3>\n<p>它可以开发网页应用的过程中，为图表开发带来卓越的体验。</p>\n<h3 id="-">设计原则</h3>\n<ol>\n<li>利用语义化组件来组合图表。包括但不限于 React, Vue 和 AugularJS 的组件。</li>\n<li>脱胎于 G2，一套基于可视化编码的图形语法。由此带来了强大的可视化能力。</li>\n</ol>\n'},1264:function(module,exports){module.exports='<h2 id="introduction">Introduction</h2>\n<p>A toolkit fit for data vis engineer based on G2. Viser support React, Vue and AngularJS.</p>\n<h3 id="main-purpose">Main Purpose</h3>\n<p>The main purpose of this library is to help you to write charts in web applications without any pain.</p>\n<h3 id="main-principles">Main Principles</h3>\n<ol>\n<li>Simply deploy with semantic component with chart, including but not limited to React, Vue and AugularJS.</li>\n<li>Lightweight depending only on G2 which is a plotting system for Javascript, based on the grammar of graphics.</li>\n</ol>\n'},1265:function(module,exports){module.exports='<h2 id="-">用法</h2>\n<p>我们以 viser-react 举例写<a href="https://antv.alipay.com/zh-cn/g2/3.x/demo/relation/chord.html">一个 chore 图为例</a>，viser-vue 和 viser-ng 的用法类似。</p>\n<h3 id="-">引入库</h3>\n<p>首先是引入 viser-react 的需要的子组件，以及必要的依赖，如 React, ReactDOM。</p>\n<pre><code class="lang-js"><span class="hljs-keyword">import</span> { Chart, Tooltip, Edge, View, Polygon, Coord } <span class="hljs-keyword">from</span> <span class="hljs-string">\'viser-react\'</span>;\n<span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> ReactDOM <span class="hljs-keyword">from</span> <span class="hljs-string">\'react-dom\'</span>;\n<span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">\'react\'</span>;\n</code></pre>\n<h3 id="-">数据处理</h3>\n<p>数据处理完全沿用 data-set.js 的处理。data-set 有丰富的数据处理方法，具体请参考 g2 官网的 <a href="https://antv.alipay.com/zh-cn/g2/3.x/tutorial/data-set.html">data-set 部分</a>.</p>\n<pre><code class="lang-js"><span class="hljs-keyword">const</span> DataSet = <span class="hljs-built_in">require</span>(<span class="hljs-string">\'@antv/data-set\'</span>);\n\n<span class="hljs-keyword">const</span> ds: <span class="hljs-built_in">any</span> = <span class="hljs-keyword">new</span> DataSet();\n<span class="hljs-keyword">const</span> dv = ds.createView().source(data, {\n  <span class="hljs-keyword">type</span>: <span class="hljs-string">\'graph\'</span>,\n  edges: <span class="hljs-function"><span class="hljs-params">d</span> =&gt;</span> d.links\n});\n\ndv.transform({\n  <span class="hljs-keyword">type</span>: <span class="hljs-string">\'diagram.arc\'</span>,\n  sourceWeight: <span class="hljs-function"><span class="hljs-params">e</span> =&gt;</span> e.sourceWeight,\n  targetWeight: <span class="hljs-function"><span class="hljs-params">e</span> =&gt;</span> e.targetWeight,\n  weight: <span class="hljs-literal">true</span>,\n  marginRatio: <span class="hljs-number">0.3</span>\n});\n</code></pre>\n<h3 id="-">图表实现</h3>\n<p>图表实现完全沿用 g2 对于图形语法的表达。</p>\n<p>我们观察原生 g2 的语法：</p>\n<pre><code class="lang-js"><span class="hljs-keyword">const</span> chart = <span class="hljs-keyword">new</span> G2.Chart({\n  container: <span class="hljs-string">\'mountNode\'</span>,\n  forceFit: <span class="hljs-keyword">true</span>,\n  <span class="hljs-built_in">height</span>: window.innerHeight\n});\nchart.legend(<span class="hljs-keyword">false</span>);\nchart.tooltip({\n  showTitle: <span class="hljs-keyword">false</span>\n});\n\nchart.<span class="hljs-built_in">scale</span>({\n  x: {\n    sync: <span class="hljs-keyword">true</span>\n  },\n  y: {\n    sync: <span class="hljs-keyword">true</span>\n  }\n});\n\n<span class="hljs-keyword">const</span> edgeView = chart.view();\nedgeView.source(dv.edges);\nedgeView.coord(<span class="hljs-string">\'polar\'</span>).reflect(<span class="hljs-string">\'y\'</span>);\nedgeView.axis(<span class="hljs-keyword">false</span>);\nedgeView.edge()\n  .position(<span class="hljs-string">\'x*y\'</span>)\n  .<span class="hljs-built_in">shape</span>(<span class="hljs-string">\'arc\'</span>)\n  .<span class="hljs-built_in">color</span>(<span class="hljs-string">\'source\'</span>)\n  .opacity(<span class="hljs-number">0.5</span>)\n  .tooltip(<span class="hljs-string">\'source*target*value\'</span>);\n\n<span class="hljs-keyword">const</span> nodeView = chart.view();\nnodeView.source(dv.nodes);\nnodeView.coord(<span class="hljs-string">\'polar\'</span>).reflect(<span class="hljs-string">\'y\'</span>);\nnodeView.axis(<span class="hljs-keyword">false</span>);\nnodeView.polygon()\n  .position(<span class="hljs-string">\'x*y\'</span>)\n  .<span class="hljs-built_in">color</span>(<span class="hljs-string">\'id\'</span>)\n  .label(<span class="hljs-string">\'name\'</span>, {\n    labelEmit: <span class="hljs-keyword">true</span>,\n    textStyle: {\n      <span class="hljs-built_in">fill</span>: <span class="hljs-string">\'#8c8c8c\'</span>\n    }\n  });\n\nchart.render();\n</code></pre>\n<p>我们看到有几个部分，Chart, Lengend, Tooltip, Scale 的配置，这些是公共配置，g2 提供 View 的能力，因此对应到 viser-react 中也需要两个 View，一个是边（edge），一个是节点（node）。然后每一个 api 都被抽象成了配置，而不是连续的调用。所以，我们看到对应到 viser-react 中的代码是：</p>\n<pre><code class="lang-js"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">App</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{\n  constructor(props) {\n    <span class="hljs-keyword">super</span>(props);\n  }\n\n  render() {\n    const label = [\n      <span class="hljs-symbol">\'nam</span>e\', {\n        labelEmit: <span class="hljs-literal">true</span>,\n        textStyle: {\n          fill: \'#<span class="hljs-number">8</span>c8c8c\'\n        },\n      }\n    ];\n\n    const scale = [{\n      dataKey: \'x\',\n      sync: <span class="hljs-literal">true</span>,\n    }, {\n      dataKey: \'y\',\n      sync: <span class="hljs-literal">true</span>,\n    }];\n\n    <span class="hljs-keyword">return</span> (\n      &lt;div&gt;\n        &lt;<span class="hljs-type">Chart</span> forceFit height={window.innerHeight} scale={scale}&gt;\n          &lt;<span class="hljs-type">View</span> data={dv.edges}&gt;\n            &lt;<span class="hljs-type">Coord</span> <span class="hljs-class"><span class="hljs-keyword">type</span></span>=<span class="hljs-string">"polar"</span> direction=<span class="hljs-string">"yReverse"</span> /&gt;\n            &lt;<span class="hljs-type">Edge</span> position=<span class="hljs-symbol">\'x</span>*y\' color=<span class="hljs-symbol">\'sourc</span>e\' shape=<span class="hljs-symbol">\'ar</span>c\' opacity={<span class="hljs-number">0.5</span>} tooltip={<span class="hljs-symbol">\'source</span>*target*value\'} /&gt;\n          &lt;/<span class="hljs-type">View</span>&gt;\n          &lt;<span class="hljs-type">View</span> data={dv.nodes}&gt;\n            &lt;<span class="hljs-type">Coord</span> <span class="hljs-class"><span class="hljs-keyword">type</span></span>=<span class="hljs-string">"polar"</span> direction=<span class="hljs-string">"yReverse"</span> /&gt;\n            &lt;<span class="hljs-type">Polygon</span> position=<span class="hljs-symbol">\'x</span>*y\' color=<span class="hljs-symbol">\'i</span>d\' label={label} /&gt;\n          &lt;/<span class="hljs-type">View</span>&gt;\n        &lt;/<span class="hljs-type">Chart</span>&gt;\n      &lt;/div&gt;\n    );\n  }\n}\n</code></pre>\n<h3 id="-">最后</h3>\n<p>对于图表实现上，都是 g2 图形语法的特性，并不是 viser 提供的，viser 提供的是框架级别的轻量级封装。希望你可以先对 g2 的用法熟悉，viser 不会单独列 g2 的 API，但我们会对一些 viser 的特点单独列出。</p>\n'},1266:function(module,exports){module.exports='<h2 id="usage">Usage</h2>\n<p>Common Soon...</p>\n'},13:function(module,exports){var g;g=function(){return this}();try{g=g||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(g=window)}module.exports=g},17:function(module,exports,__webpack_require__){"use strict";function Exception(message,node){var loc=node&&node.loc,line=void 0,column=void 0;loc&&(line=loc.start.line,column=loc.start.column,message+=" - "+line+":"+column);for(var tmp=Error.prototype.constructor.call(this,message),idx=0;idx<errorProps.length;idx++)this[errorProps[idx]]=tmp[errorProps[idx]];Error.captureStackTrace&&Error.captureStackTrace(this,Exception);try{loc&&(this.lineNumber=line,Object.defineProperty?Object.defineProperty(this,"column",{value:column,enumerable:!0}):this.column=column)}catch(nop){}}exports.__esModule=!0;var errorProps=["description","fileName","lineNumber","message","name","number","stack"];Exception.prototype=new Error,exports.default=Exception,module.exports=exports.default},35:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var oui_dom_utils_1=__webpack_require__(36),oui_dom_events_1=__webpack_require__(37);exports.ALL_PAGE_LANGUAGES=["en","cn"],exports.DEFAULT_PAGE_LANGUAGE="en",exports.getPageLanguage=function(){var pageLanguageInStore=window.localStorage.getItem("page_language");return pageLanguageInStore&&-1!==exports.ALL_PAGE_LANGUAGES.indexOf(pageLanguageInStore)?pageLanguageInStore:null},exports.setPageLanguage=function(language){window.localStorage.setItem("page_language",language)},exports.initPageLanguage=function(){if(!exports.getPageLanguage()){var navigatorLanguage=window.navigator.language.toLowerCase();navigatorLanguage&&-1!==navigatorLanguage.indexOf("cn")?exports.setPageLanguage("cn"):exports.setPageLanguage(exports.DEFAULT_PAGE_LANGUAGE)}},exports.changePageLanguage=function(){var pageLanguageInStore=exports.getPageLanguage();pageLanguageInStore&&"en"===pageLanguageInStore?exports.setPageLanguage("cn"):pageLanguageInStore&&"cn"===pageLanguageInStore?exports.setPageLanguage("en"):exports.setPageLanguage(exports.DEFAULT_PAGE_LANGUAGE)},exports.getNameByLanguage=function(o){switch(exports.getPageLanguage()){case"en":return o&&o.enName?o.enName:"";case"cn":return o&&o.cnName?o.cnName:"";default:return""}},exports.generateHashtag=function(folder,item){return folder&&item?"#/"+folder+"/"+item:folder?"#/"+folder+"/"+item:"#"},exports.getFolderAndItem=function(){var hash=window.location.hash,hashReg=/^#?\/?([^\/]*)\/?([^\/]*)\/?$/,result=hashReg.exec(hash);return result?{folder:result[1]||"",item:result[2]||""}:{folder:"",item:""}},exports.addClass=oui_dom_utils_1.default.addClass,exports.removeClass=oui_dom_utils_1.default.removeClass,exports.hasClass=oui_dom_utils_1.default.hasClass,exports.on=oui_dom_events_1.default.on,exports.off=oui_dom_events_1.default.off,exports.delegate=oui_dom_events_1.default.delegate,exports.undelegate=oui_dom_events_1.default.undelegate},36:function(module,exports,__webpack_require__){"use strict";function getAmId(obj){return obj._amId||(obj._amId=_amId++)}function setAmDisplay(elem,display){var id=getAmId(elem);_amDisplay["_am_"+id]=display}function getAmDisplay(elem){var id=getAmId(elem);return _amDisplay["_am_"+id]}Object.defineProperty(exports,"__esModule",{value:!0});var reUnit=/width|height|top|left|right|bottom|margin|padding/i,_amId=1,_amDisplay={},requestAnimationFrame=void 0;requestAnimationFrame="undefined"!=typeof window?window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||function(callback){window.setTimeout(callback,1e3/60)}:function(){throw new Error("requestAnimationFrame is not supported, maybe you are running in the server side")},exports.default={addClass:function(el,className){var _this=this;"string"==typeof el&&(el=document.querySelectorAll(el)),(el instanceof NodeList?[].slice.call(el):[el]).forEach(function(e){_this.hasClass(e,className)||(e.classList?e.classList.add(className):e.className+=" "+className)})},removeClass:function(el,className){var _this2=this;"string"==typeof el&&(el=document.querySelectorAll(el)),(el instanceof NodeList?[].slice.call(el):[el]).forEach(function(e){_this2.hasClass(e,className)&&(e.classList?e.classList.remove(className):e.className=e.className.replace(new RegExp("(^|\\b)"+className.split(" ").join("|")+"(\\b|$)","gi")," "))})},hasClass:function(el,className){return"string"==typeof el&&(el=document.querySelector(el)),el.classList?el.classList.contains(className):new RegExp("(^| )"+className+"( |$)","gi").test(el.className)},toggleClass:function(el,className){"string"==typeof el&&(el=document.querySelector(el));var flag=this.hasClass(el,className);return flag?this.removeClass(el,className):this.addClass(el,className),flag},insertAfter:function(newEl,targetEl){var parent=targetEl.parentNode;parent.lastChild===targetEl?parent.appendChild(newEl):parent.insertBefore(newEl,targetEl.nextSibling)},remove:function(el){if("string"==typeof el)[].forEach.call(document.querySelectorAll(el),function(node){node.parentNode.removeChild(node)});else if(el.parentNode)el.parentNode.removeChild(el);else{if(!(el instanceof NodeList))throw new Error("you can only pass Element, array of Elements or query string as argument");[].forEach.call(el,function(node){node.parentNode.removeChild(node)})}},forceReflow:function(el){el.offsetHeight},getDocumentScrollTop:function(){return document.documentElement&&document.documentElement.scrollTop||document.body.scrollTop},setDocumentScrollTop:function(value){return window.scrollTo(0,value),value},outerHeight:function(el){return el.offsetHeight},outerHeightWithMargin:function(el){var height=el.offsetHeight,style=getComputedStyle(el);return height+=(parseFloat(style.marginTop)||0)+(parseFloat(style.marginBottom)||0)},outerWidth:function(el){return el.offsetWidth},outerWidthWithMargin:function(el){var width=el.offsetWidth,style=getComputedStyle(el);return width+=(parseFloat(style.marginLeft)||0)+(parseFloat(style.marginRight)||0)},getComputedStyles:function(el){return el.ownerDocument.defaultView.getComputedStyle(el,null)},getOffset:function(el){var html=el.ownerDocument.documentElement,box={top:0,left:0};return void 0!==el.getBoundingClientRect&&(box=el.getBoundingClientRect()),{top:box.top+window.pageYOffset-html.clientTop,left:box.left+window.pageXOffset-html.clientLeft}},getPosition:function(el){return el?{left:el.offsetLeft,top:el.offsetTop}:{left:0,top:0}},setStyle:function(node,att,val,style){(style=style||node.style)&&(null===val||""===val?val="":!isNaN(Number(val))&&reUnit.test(att)&&(val+="px"),""===att&&(att="cssText",val=""),style[att]=val)},setStyles:function(el,hash){function trim(str){return str.replace(/^\s+|\s+$/g,"")}var _this3=this,HAS_CSSTEXT_FEATURE=void 0!==el.style.cssText,originStyleText=void 0,originStyleObj={};originStyleText=HAS_CSSTEXT_FEATURE?el.style.cssText:el.getAttribute("style"),originStyleText.split(";").forEach(function(item){if(-1!==item.indexOf(":")){var obj=item.split(":");originStyleObj[trim(obj[0])]=trim(obj[1])}});var styleObj={};Object.keys(hash).forEach(function(item){_this3.setStyle(el,item,hash[item],styleObj)});var mergedStyleObj=Object.assign({},originStyleObj,styleObj),styleText=Object.keys(mergedStyleObj).map(function(item){return item+": "+mergedStyleObj[item]+";"}).join(" ");HAS_CSSTEXT_FEATURE?el.style.cssText=styleText:el.setAttribute("style",styleText)},getStyle:function(el,att,style){style=style||el.style;var val="";return style&&""===(val=style[att])&&(val=this.getComputedStyle(el,att)),val},getComputedStyle:function(el,att){var win=el.ownerDocument.defaultView,computed=win.getComputedStyle(el,null);return att?computed[att]:computed},getPageSize:function(){var xScroll=void 0,yScroll=void 0;window.innerHeight&&window.scrollMaxY?(xScroll=window.innerWidth+window.scrollMaxX,yScroll=window.innerHeight+window.scrollMaxY):document.body.scrollHeight>document.body.offsetHeight?(xScroll=document.body.scrollWidth,yScroll=document.body.scrollHeight):(xScroll=document.body.offsetWidth,yScroll=document.body.offsetHeight);var windowWidth=void 0,windowHeight=void 0;self.innerHeight?(windowWidth=document.documentElement.clientWidth?document.documentElement.clientWidth:self.innerWidth,windowHeight=self.innerHeight):document.documentElement&&document.documentElement.clientHeight?(windowWidth=document.documentElement.clientWidth,windowHeight=document.documentElement.clientHeight):document.body&&(windowWidth=document.body.clientWidth,windowHeight=document.body.clientHeight);var pageHeight=void 0,pageWidth=void 0;return pageHeight=yScroll<windowHeight?windowHeight:yScroll,pageWidth=xScroll<windowWidth?xScroll:windowWidth,{pageWidth:pageWidth,pageHeight:pageHeight,windowWidth:windowWidth,windowHeight:windowHeight}},get:function(selector){return document.querySelector(selector)||{}},getAll:function(selector){return document.querySelectorAll(selector)},parentsUntil:function(el,selector,filter){var result=[],matchesSelector=el.matches||el.webkitMatchesSelector||el.mozMatchesSelector||el.msMatchesSelector;for(el=el.parentElement;el&&!matchesSelector.call(el,selector);)filter?matchesSelector.call(el,filter)&&result.push(el):result.push(el),el=el.parentElement;return result},closest:function(el,selector){for(var matchesSelector=el.matches||el.webkitMatchesSelector||el.mozMatchesSelector||el.msMatchesSelector;el;){if(matchesSelector.call(el,selector))return el;el=el.parentElement}return null},_showHide:function(el,show){"string"==typeof el&&(el=document.querySelectorAll(el));var els=el instanceof NodeList?[].slice.call(el):[el],display=void 0,values=[];0!==els.length&&(els.forEach(function(e,index){e.style&&(display=e.style.display,show?"none"===display&&(values[index]=getAmDisplay(e)||""):"none"!==display&&(values[index]="none",setAmDisplay(e,display)))}),els.forEach(function(e,index){null!==values[index]&&(els[index].style.display=values[index])}))},show:function(elements){this._showHide(elements,!0)},hide:function(elements){this._showHide(elements,!1)},toggle:function(element){"none"===element.style.display?this.show(element):this.hide(element)},scrollTo:function(){var _this4=this,to=arguments.length<=0||void 0===arguments[0]?0:arguments[0],duration=arguments.length<=1||void 0===arguments[1]?16:arguments[1];if(!(duration<0)){var diff=to-this.getDocumentScrollTop();if(0!==diff){var perTick=diff/duration*10;requestAnimationFrame(function(){if(Math.abs(perTick)>Math.abs(diff))return void _this4.setDocumentScrollTop(_this4.getDocumentScrollTop()+diff);_this4.setDocumentScrollTop(_this4.getDocumentScrollTop()+perTick),diff>0&&_this4.getDocumentScrollTop()>=to||diff<0&&_this4.getDocumentScrollTop()<=to||_this4.scrollTo(to,duration-16)})}}},is:function(el,selector){return(el.matches||el.matchesSelector||el.msMatchesSelector||el.mozMatchesSelector||el.webkitMatchesSelector||el.oMatchesSelector).call(el,selector)},width:function(el){var styles=this.getComputedStyles(el),width=parseFloat(-1!==styles.width.indexOf("px")?styles.width:0);if("border-box"===(styles.boxSizing||"content-box"))return width;var borderLeftWidth=parseFloat(styles.borderLeftWidth);return width-parseFloat(styles.borderRightWidth)-borderLeftWidth-parseFloat(styles.paddingLeft)-parseFloat(styles.paddingRight)},height:function(el){var styles=this.getComputedStyles(el),height=parseFloat(-1!==styles.height.indexOf("px")?styles.height:0);if("border-box"===(styles.boxSizing||"content-box"))return height;var borderTopWidth=parseFloat(styles.borderTopWidth);return height-parseFloat(styles.borderBottomWidth)-borderTopWidth-parseFloat(styles.paddingTop)-parseFloat(styles.paddingBottom)}}},37:function(module,exports,__webpack_require__){"use strict";function getDtId(obj){return obj._dtId||(obj._dtId=_dtId++)}function parse(event){var dotIndex=event.indexOf(".");return dotIndex>0?{e:event.substring(0,event.indexOf(".")),ns:event.substring(dotIndex+1,event.length)}:{e:event}}function findHandlers(el,selector,event,callback){return event=parse(event),(handlers[getDtId(el)]||[]).filter(function(handler){return handler&&(!event.e||handler.e===event.e)&&(!event.ns||handler.ns===event.ns)&&(!callback||handler.callback===callback)&&(!selector||handler.selector===selector)})}function removeEvent(el,selector,event,callback){var eventName=parse(event).e;if(!el._dtId)return!1;var elHandlers=handlers[getDtId(el)];findHandlers(el,selector,event,callback).forEach(function(handler){el.removeEventListener?el.removeEventListener(eventName,handler.delegator||handler.callback):el.detachEvent&&el.detachEvent("on"+eventName,handler.delegator||handler.callback),elHandlers.splice(elHandlers.indexOf(handler),1)})}function bindEvent(el,selector,event,callback,delegator){var eventName=parse(event).e,ns=parse(event).ns;el.addEventListener?el.addEventListener(eventName,delegator||callback,!1):el.attachEvent&&el.attachEvent("on"+eventName,delegator||callback);var id=getDtId(el);(handlers[id]||(handlers[id]=[])).push({delegator:delegator,callback:callback,e:eventName,ns:ns,selector:selector})}Object.defineProperty(exports,"__esModule",{value:!0});var handlers={},specialEvents={};specialEvents.click=specialEvents.mousedown=specialEvents.mouseup=specialEvents.mousemove="MouseEvents";var _dtId=1,Events={on:function(el,eventType,callback){bindEvent(el,null,eventType,callback)},off:function(el,eventType,callback){removeEvent(el,null,eventType,callback)},once:function(el,eventType,callback){var recursiveFunction=function recursiveFunction(e){return Events.off(e.currentTarget,e.type,recursiveFunction),callback(e)};this.on(el,eventType,recursiveFunction)},delegate:function(el,selector,eventType,callback){bindEvent(el,selector,eventType,callback,function(e){for(var els=el.querySelectorAll(selector),matched=!1,i=0;i<els.length;i++){var _el=els[i];if(_el===e.target||_el.contains(e.target)){matched=_el;break}}matched&&callback.apply(matched,[].slice.call(arguments))})},undelegate:function(el,selector,eventType,callback){removeEvent(el,selector,eventType,callback)},trigger:function(el,eventType,props){var event=document.createEvent(specialEvents[eventType]||"Events"),bubbles=!0;if(props)for(var name in props)({}).hasOwnProperty.call(props,name)&&("bubbles"===name?bubbles=!!props[name]:event[name]=props[name]);event.initEvent(eventType,bubbles,!0),el.dispatchEvent(event)}};exports.default=Events},46:function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function HandlebarsEnvironment(helpers,partials,decorators){this.helpers=helpers||{},this.partials=partials||{},this.decorators=decorators||{},_helpers.registerDefaultHelpers(this),_decorators.registerDefaultDecorators(this)}exports.__esModule=!0,exports.HandlebarsEnvironment=HandlebarsEnvironment;var _utils=__webpack_require__(12),_exception=__webpack_require__(17),_exception2=_interopRequireDefault(_exception),_helpers=__webpack_require__(86),_decorators=__webpack_require__(94),_logger=__webpack_require__(96),_logger2=_interopRequireDefault(_logger);exports.VERSION="4.0.11";exports.COMPILER_REVISION=7;var REVISION_CHANGES={1:"<= 1.0.rc.2",2:"== 1.0.0-rc.3",3:"== 1.0.0-rc.4",4:"== 1.x.x",5:"== 2.0.0-alpha.x",6:">= 2.0.0-beta.1",7:">= 4.0.0"};exports.REVISION_CHANGES=REVISION_CHANGES;HandlebarsEnvironment.prototype={constructor:HandlebarsEnvironment,logger:_logger2.default,log:_logger2.default.log,registerHelper:function(name,fn){if("[object Object]"===_utils.toString.call(name)){if(fn)throw new _exception2.default("Arg not supported with multiple helpers");_utils.extend(this.helpers,name)}else this.helpers[name]=fn},unregisterHelper:function(name){delete this.helpers[name]},registerPartial:function(name,partial){if("[object Object]"===_utils.toString.call(name))_utils.extend(this.partials,name);else{if(void 0===partial)throw new _exception2.default('Attempting to register a partial called "'+name+'" as undefined');this.partials[name]=partial}},unregisterPartial:function(name){delete this.partials[name]},registerDecorator:function(name,fn){if("[object Object]"===_utils.toString.call(name)){if(fn)throw new _exception2.default("Arg not supported with multiple decorators");_utils.extend(this.decorators,name)}else this.decorators[name]=fn},unregisterDecorator:function(name){delete this.decorators[name]}};var log=_logger2.default.log;exports.log=log,exports.createFrame=_utils.createFrame,exports.logger=_logger2.default},51:function(module,exports){var global=module.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=global)},52:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var locale={cn:[{selector:".common-header .common-header-nav-item.demo-link",text:"案例"},{selector:".common-header .common-header-nav-item.docs-link",text:"文档"}],en:[{selector:".common-header .common-header-nav-item.demo-link",text:"Demo"},{selector:".common-header .common-header-nav-item.docs-link",text:"Docs"}]};exports.default=locale},638:function(module,exports){var core=module.exports={version:"2.5.7"};"number"==typeof __e&&(__e=core)},639:function(module,exports){module.exports=function(exec){try{return!!exec()}catch(e){return!0}}},84:function(module,exports,__webpack_require__){module.exports=__webpack_require__(85).default},85:function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;var newObj={};if(null!=obj)for(var key in obj)Object.prototype.hasOwnProperty.call(obj,key)&&(newObj[key]=obj[key]);return newObj.default=obj,newObj}function create(){var hb=new base.HandlebarsEnvironment;return Utils.extend(hb,base),hb.SafeString=_handlebarsSafeString2.default,hb.Exception=_handlebarsException2.default,hb.Utils=Utils,hb.escapeExpression=Utils.escapeExpression,hb.VM=runtime,hb.template=function(spec){return runtime.template(spec,hb)},hb}exports.__esModule=!0;var _handlebarsBase=__webpack_require__(46),base=_interopRequireWildcard(_handlebarsBase),_handlebarsSafeString=__webpack_require__(97),_handlebarsSafeString2=_interopRequireDefault(_handlebarsSafeString),_handlebarsException=__webpack_require__(17),_handlebarsException2=_interopRequireDefault(_handlebarsException),_handlebarsUtils=__webpack_require__(12),Utils=_interopRequireWildcard(_handlebarsUtils),_handlebarsRuntime=__webpack_require__(98),runtime=_interopRequireWildcard(_handlebarsRuntime),_handlebarsNoConflict=__webpack_require__(99),_handlebarsNoConflict2=_interopRequireDefault(_handlebarsNoConflict),inst=create();inst.create=create,_handlebarsNoConflict2.default(inst),inst.default=inst,exports.default=inst,module.exports=exports.default},86:function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function registerDefaultHelpers(instance){_helpersBlockHelperMissing2.default(instance),_helpersEach2.default(instance),_helpersHelperMissing2.default(instance),_helpersIf2.default(instance),_helpersLog2.default(instance),_helpersLookup2.default(instance),_helpersWith2.default(instance)}exports.__esModule=!0,exports.registerDefaultHelpers=registerDefaultHelpers;var _helpersBlockHelperMissing=__webpack_require__(87),_helpersBlockHelperMissing2=_interopRequireDefault(_helpersBlockHelperMissing),_helpersEach=__webpack_require__(88),_helpersEach2=_interopRequireDefault(_helpersEach),_helpersHelperMissing=__webpack_require__(89),_helpersHelperMissing2=_interopRequireDefault(_helpersHelperMissing),_helpersIf=__webpack_require__(90),_helpersIf2=_interopRequireDefault(_helpersIf),_helpersLog=__webpack_require__(91),_helpersLog2=_interopRequireDefault(_helpersLog),_helpersLookup=__webpack_require__(92),_helpersLookup2=_interopRequireDefault(_helpersLookup),_helpersWith=__webpack_require__(93),_helpersWith2=_interopRequireDefault(_helpersWith)},87:function(module,exports,__webpack_require__){"use strict";exports.__esModule=!0;var _utils=__webpack_require__(12);exports.default=function(instance){instance.registerHelper("blockHelperMissing",function(context,options){var inverse=options.inverse,fn=options.fn;if(!0===context)return fn(this);if(!1===context||null==context)return inverse(this);if(_utils.isArray(context))return context.length>0?(options.ids&&(options.ids=[options.name]),instance.helpers.each(context,options)):inverse(this);if(options.data&&options.ids){var data=_utils.createFrame(options.data);data.contextPath=_utils.appendContextPath(options.data.contextPath,options.name),options={data:data}}return fn(context,options)})},module.exports=exports.default},88:function(module,exports,__webpack_require__){"use strict";exports.__esModule=!0;var _utils=__webpack_require__(12),_exception=__webpack_require__(17),_exception2=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(_exception);exports.default=function(instance){instance.registerHelper("each",function(context,options){function execIteration(field,index,last){data&&(data.key=field,data.index=index,data.first=0===index,data.last=!!last,contextPath&&(data.contextPath=contextPath+field)),ret+=fn(context[field],{data:data,blockParams:_utils.blockParams([context[field],field],[contextPath+field,null])})}if(!options)throw new _exception2.default("Must pass iterator to #each");var fn=options.fn,inverse=options.inverse,i=0,ret="",data=void 0,contextPath=void 0;if(options.data&&options.ids&&(contextPath=_utils.appendContextPath(options.data.contextPath,options.ids[0])+"."),_utils.isFunction(context)&&(context=context.call(this)),options.data&&(data=_utils.createFrame(options.data)),context&&"object"==typeof context)if(_utils.isArray(context))for(var j=context.length;i<j;i++)i in context&&execIteration(i,i,i===context.length-1);else{var priorKey=void 0;for(var key in context)context.hasOwnProperty(key)&&(void 0!==priorKey&&execIteration(priorKey,i-1),priorKey=key,i++);void 0!==priorKey&&execIteration(priorKey,i-1,!0)}return 0===i&&(ret=inverse(this)),ret})},module.exports=exports.default},89:function(module,exports,__webpack_require__){"use strict";exports.__esModule=!0;var _exception=__webpack_require__(17),_exception2=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(_exception);exports.default=function(instance){instance.registerHelper("helperMissing",function(){if(1!==arguments.length)throw new _exception2.default('Missing helper: "'+arguments[arguments.length-1].name+'"')})},module.exports=exports.default},90:function(module,exports,__webpack_require__){"use strict";exports.__esModule=!0;var _utils=__webpack_require__(12);exports.default=function(instance){instance.registerHelper("if",function(conditional,options){return _utils.isFunction(conditional)&&(conditional=conditional.call(this)),!options.hash.includeZero&&!conditional||_utils.isEmpty(conditional)?options.inverse(this):options.fn(this)}),instance.registerHelper("unless",function(conditional,options){return instance.helpers.if.call(this,conditional,{fn:options.inverse,inverse:options.fn,hash:options.hash})})},module.exports=exports.default},91:function(module,exports,__webpack_require__){"use strict";exports.__esModule=!0,exports.default=function(instance){instance.registerHelper("log",function(){for(var args=[void 0],options=arguments[arguments.length-1],i=0;i<arguments.length-1;i++)args.push(arguments[i]);var level=1;null!=options.hash.level?level=options.hash.level:options.data&&null!=options.data.level&&(level=options.data.level),args[0]=level,instance.log.apply(instance,args)})},module.exports=exports.default},92:function(module,exports,__webpack_require__){"use strict";exports.__esModule=!0,exports.default=function(instance){instance.registerHelper("lookup",function(obj,field){return obj&&obj[field]})},module.exports=exports.default},93:function(module,exports,__webpack_require__){"use strict";exports.__esModule=!0;var _utils=__webpack_require__(12);exports.default=function(instance){instance.registerHelper("with",function(context,options){_utils.isFunction(context)&&(context=context.call(this));var fn=options.fn;if(_utils.isEmpty(context))return options.inverse(this);var data=options.data;return options.data&&options.ids&&(data=_utils.createFrame(options.data),data.contextPath=_utils.appendContextPath(options.data.contextPath,options.ids[0])),fn(context,{data:data,blockParams:_utils.blockParams([context],[data&&data.contextPath])})})},module.exports=exports.default},94:function(module,exports,__webpack_require__){"use strict";function registerDefaultDecorators(instance){_decoratorsInline2.default(instance)}exports.__esModule=!0,exports.registerDefaultDecorators=registerDefaultDecorators;var _decoratorsInline=__webpack_require__(95),_decoratorsInline2=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(_decoratorsInline)},95:function(module,exports,__webpack_require__){"use strict";exports.__esModule=!0;var _utils=__webpack_require__(12);exports.default=function(instance){instance.registerDecorator("inline",function(fn,props,container,options){var ret=fn;return props.partials||(props.partials={},ret=function(context,options){var original=container.partials;container.partials=_utils.extend({},original,props.partials);var ret=fn(context,options);return container.partials=original,ret}),props.partials[options.args[0]]=options.fn,ret})},module.exports=exports.default},96:function(module,exports,__webpack_require__){"use strict";exports.__esModule=!0;var _utils=__webpack_require__(12),logger={methodMap:["debug","info","warn","error"],level:"info",lookupLevel:function(level){if("string"==typeof level){var levelMap=_utils.indexOf(logger.methodMap,level.toLowerCase());level=levelMap>=0?levelMap:parseInt(level,10)}return level},log:function(level){if(level=logger.lookupLevel(level),"undefined"!=typeof console&&logger.lookupLevel(logger.level)<=level){var method=logger.methodMap[level];console[method]||(method="log");for(var _len=arguments.length,message=Array(_len>1?_len-1:0),_key=1;_key<_len;_key++)message[_key-1]=arguments[_key]}}};exports.default=logger,module.exports=exports.default},97:function(module,exports,__webpack_require__){"use strict";function SafeString(string){this.string=string}exports.__esModule=!0,SafeString.prototype.toString=SafeString.prototype.toHTML=function(){return""+this.string},exports.default=SafeString,module.exports=exports.default},98:function(module,exports,__webpack_require__){"use strict";function checkRevision(compilerInfo){var compilerRevision=compilerInfo&&compilerInfo[0]||1,currentRevision=_base.COMPILER_REVISION;if(compilerRevision!==currentRevision){if(compilerRevision<currentRevision){var runtimeVersions=_base.REVISION_CHANGES[currentRevision],compilerVersions=_base.REVISION_CHANGES[compilerRevision];throw new _exception2.default("Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version ("+runtimeVersions+") or downgrade your runtime to an older version ("+compilerVersions+").")}throw new _exception2.default("Template was precompiled with a newer version of Handlebars than the current runtime. Please update your runtime to a newer version ("+compilerInfo[1]+").")}}function template(templateSpec,env){function invokePartialWrapper(partial,context,options){options.hash&&(context=Utils.extend({},context,options.hash),options.ids&&(options.ids[0]=!0)),partial=env.VM.resolvePartial.call(this,partial,context,options);var result=env.VM.invokePartial.call(this,partial,context,options);if(null==result&&env.compile&&(options.partials[options.name]=env.compile(partial,templateSpec.compilerOptions,env),result=options.partials[options.name](context,options)),null!=result){if(options.indent){for(var lines=result.split("\n"),i=0,l=lines.length;i<l&&(lines[i]||i+1!==l);i++)lines[i]=options.indent+lines[i];result=lines.join("\n")}return result}throw new _exception2.default("The partial "+options.name+" could not be compiled when running in runtime-only mode")}function ret(context){function main(context){return""+templateSpec.main(container,context,container.helpers,container.partials,data,blockParams,depths)}var options=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],data=options.data;ret._setup(options),!options.partial&&templateSpec.useData&&(data=initData(context,data));var depths=void 0,blockParams=templateSpec.useBlockParams?[]:void 0;return templateSpec.useDepths&&(depths=options.depths?context!=options.depths[0]?[context].concat(options.depths):options.depths:[context]),(main=executeDecorators(templateSpec.main,main,container,options.depths||[],data,blockParams))(context,options)}if(!env)throw new _exception2.default("No environment passed to template");if(!templateSpec||!templateSpec.main)throw new _exception2.default("Unknown template object: "+typeof templateSpec);templateSpec.main.decorator=templateSpec.main_d,env.VM.checkRevision(templateSpec.compiler);var container={strict:function(obj,name){if(!(name in obj))throw new _exception2.default('"'+name+'" not defined in '+obj);return obj[name]},lookup:function(depths,name){for(var len=depths.length,i=0;i<len;i++)if(depths[i]&&null!=depths[i][name])return depths[i][name]},lambda:function(current,context){return"function"==typeof current?current.call(context):current},escapeExpression:Utils.escapeExpression,invokePartial:invokePartialWrapper,fn:function(i){var ret=templateSpec[i];return ret.decorator=templateSpec[i+"_d"],ret},programs:[],program:function(i,data,declaredBlockParams,blockParams,depths){var programWrapper=this.programs[i],fn=this.fn(i);return data||depths||blockParams||declaredBlockParams?programWrapper=wrapProgram(this,i,fn,data,declaredBlockParams,blockParams,depths):programWrapper||(programWrapper=this.programs[i]=wrapProgram(this,i,fn)),programWrapper},data:function(value,depth){for(;value&&depth--;)value=value._parent;return value},merge:function(param,common){var obj=param||common;return param&&common&&param!==common&&(obj=Utils.extend({},common,param)),obj},nullContext:Object.seal({}),noop:env.VM.noop,compilerInfo:templateSpec.compiler};return ret.isTop=!0,ret._setup=function(options){options.partial?(container.helpers=options.helpers,container.partials=options.partials,container.decorators=options.decorators):(container.helpers=container.merge(options.helpers,env.helpers),templateSpec.usePartial&&(container.partials=container.merge(options.partials,env.partials)),(templateSpec.usePartial||templateSpec.useDecorators)&&(container.decorators=container.merge(options.decorators,env.decorators)))},ret._child=function(i,data,blockParams,depths){if(templateSpec.useBlockParams&&!blockParams)throw new _exception2.default("must pass block params");if(templateSpec.useDepths&&!depths)throw new _exception2.default("must pass parent depths");return wrapProgram(container,i,templateSpec[i],data,0,blockParams,depths)},ret}function wrapProgram(container,i,fn,data,declaredBlockParams,blockParams,depths){function prog(context){var options=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],currentDepths=depths;return!depths||context==depths[0]||context===container.nullContext&&null===depths[0]||(currentDepths=[context].concat(depths)),fn(container,context,container.helpers,container.partials,options.data||data,blockParams&&[options.blockParams].concat(blockParams),currentDepths)}return prog=executeDecorators(fn,prog,container,depths,data,blockParams),prog.program=i,prog.depth=depths?depths.length:0,prog.blockParams=declaredBlockParams||0,prog}function resolvePartial(partial,context,options){return partial?partial.call||options.name||(options.name=partial,partial=options.partials[partial]):partial="@partial-block"===options.name?options.data["partial-block"]:options.partials[options.name],partial}function invokePartial(partial,context,options){var currentPartialBlock=options.data&&options.data["partial-block"];options.partial=!0,options.ids&&(options.data.contextPath=options.ids[0]||options.data.contextPath);var partialBlock=void 0;if(options.fn&&options.fn!==noop&&function(){options.data=_base.createFrame(options.data);var fn=options.fn;partialBlock=options.data["partial-block"]=function(context){var options=arguments.length<=1||void 0===arguments[1]?{}:arguments[1];return options.data=_base.createFrame(options.data),options.data["partial-block"]=currentPartialBlock,fn(context,options)},fn.partials&&(options.partials=Utils.extend({},options.partials,fn.partials))}(),void 0===partial&&partialBlock&&(partial=partialBlock),void 0===partial)throw new _exception2.default("The partial "+options.name+" could not be found");if(partial instanceof Function)return partial(context,options)}function noop(){return""}function initData(context,data){return data&&"root"in data||(data=data?_base.createFrame(data):{},data.root=context),data}function executeDecorators(fn,prog,container,depths,data,blockParams){if(fn.decorator){var props={};prog=fn.decorator(prog,props,container,depths&&depths[0],data,blockParams,depths),Utils.extend(prog,props)}return prog}exports.__esModule=!0,exports.checkRevision=checkRevision,exports.template=template,exports.wrapProgram=wrapProgram,exports.resolvePartial=resolvePartial,exports.invokePartial=invokePartial,exports.noop=noop;var _utils=__webpack_require__(12),Utils=function(obj){if(obj&&obj.__esModule)return obj;var newObj={};if(null!=obj)for(var key in obj)Object.prototype.hasOwnProperty.call(obj,key)&&(newObj[key]=obj[key]);return newObj.default=obj,newObj}(_utils),_exception=__webpack_require__(17),_exception2=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(_exception),_base=__webpack_require__(46)},99:function(module,exports,__webpack_require__){"use strict";(function(global){exports.__esModule=!0,exports.default=function(Handlebars){var root=void 0!==global?global:window,$Handlebars=root.Handlebars;Handlebars.noConflict=function(){return root.Handlebars===Handlebars&&(root.Handlebars=$Handlebars),Handlebars}},module.exports=exports.default}).call(exports,__webpack_require__(13))}});